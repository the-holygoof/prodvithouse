/*! tailwindcss v4.1.16 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: var(--font-display);
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-blue-600: oklch(54.6% 0.245 262.881);
    --color-slate-600: oklch(44.6% 0.043 257.281);
    --color-gray-100: oklch(96.7% 0.003 264.542);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-gray-700: oklch(37.3% 0.034 259.733);
    --color-gray-800: oklch(27.8% 0.033 256.848);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-2xl: 42rem;
    --container-4xl: 56rem;
    --container-6xl: 78rem;
    --container-7xl: 80rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --text-8xl: 6rem;
    --text-8xl--line-height: 1;
    --font-weight-extralight: 200;
    --font-weight-light: 300;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --font-weight-extrabold: 800;
    --tracking-tighter: -0.05em;
    --tracking-tight: -0.025em;
    --leading-tight: 1.25;
    --leading-relaxed: 1.625;
    --leading-loose: 2;
    --radius-xl: 0.75rem;
    --ease-in: cubic-bezier(0.4, 0, 1, 1);
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --blur-xs: 4px;
    --blur-sm: 8px;
    --blur-xl: 24px;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-display);
    --default-mono-font-family: var(--font-mono);
    --font-body: var(--font-display);
    --container-8xl: 88rem;
    --font-display: "Satoshi", sans-serif;
    --bg-0: #191321;
    --bg: #271c3778;
    --bg-2: #271c37;
    --bg-light: #36294A;
    --surface: #312543;
    --surface-dark: #150f1c;
    --card: #3E315E;
    --primary: #7ce2c5;
    --color-primary: #7ce2c5;
    --primary-2: #62c6aa;
    --secondary: #bba9f6;
    --secondary-2: #9481d4;
    --secondary-3: #9f8fd4;
    --accent: #ffc9a9;
    --muted: #a5a1b3;
    --text: #f4f2f7;
    --text-2: #cfcbda;
    --success: #34d399;
    --warning: #fdba74;
    --warning-2: #e48f35;
    --danger: #fb7185;
    --danger-2: #ec96a3;
    --border: rgba(255, 255, 255, 0.06);
    --ring: rgba(124, 226, 197, 0.4);
    --slider-mobile-aspect: 1.003;
    --slider-desktop-aspect: 1.829;
    --slider-mobile-clip: shape(from 0% 12.6%,curve to 1.84% 1.84% with 0% 6.66%/0% 3.69%,curve to 12.56% 0% with 3.68% 0%/6.64% 0%,hline to 87.44%,curve to 98.16% 1.84% with 93.36% 0%/96.32% 0%,curve to 100% 12.6% with 100% 3.69%/100% 6.66%,vline to 72.83%,curve to 98.16% 83.58% with 100% 78.77%/100% 81.74%,curve to 87.44% 85.43% with 96.32% 85.43%/93.36% 85.43%,line to 51.65% 85.43%,curve to 44.61% 86.34% with 47.96% 85.43%/46.11% 85.43%,curve to 40.53% 92.17% with 43.11% 87.24%/42.25% 88.89%,line to 39.96% 93.26%,curve to 35.89% 99.09% with 38.25% 96.54%/37.39% 98.18%,curve to 28.85% 100% with 34.39% 100%/32.54% 100%,hline to 12.56%,curve to 1.84% 98.15% with 6.64% 100%/3.68% 100%,curve to 0% 87.4% with 0% 96.31%/0% 93.34%,vline to 12.6%,close);
    --slider-desktop-clip: shape(from 100% 16.29%,curve to 98.7% 2.38% with 100% 8.61%/100% 4.77%,curve to 91.09% 0% with 97.39% 0%/95.29% 0%,hline to 8.91%,curve to 1.3% 2.38% with 4.71% 0%/2.61% 0%,curve to 0% 16.29% with 0% 4.77%/0% 8.61%,vline to 69.6%,curve to 1.3% 83.5% with 0% 77.27%/0% 81.11%,curve to 8.91% 85.88% with 2.61% 85.88%/4.71% 85.88%,line to 34.48% 85.88%,curve to 36.77% 86.12% with 35.66% 85.88%/36.25% 85.88%,curve to 39.28% 89.17% with 37.78% 86.57%/38.66% 87.65%,curve to 40.28% 92.94% with 39.6% 89.97%/39.83% 90.96%,curve to 41.29% 96.71% with 40.74% 94.92%/40.96% 95.91%,curve to 43.8% 99.76% with 41.9% 98.23%/42.79% 99.31%,curve to 46.08% 100% with 44.32% 100%/44.91% 100%,hline to 91.09%,curve to 98.7% 97.61% with 95.29% 100%/97.39% 100%,curve to 100% 83.71% with 100% 95.23%/100% 91.39%,vline to 16.29%,close);
    --card-outer-aspect: 1.143;
    --card-outer-clip: shape(from 0% 32.14%,curve to 4.12% 4.71% with 0% 16.99%/0% 9.41%,curve to 28.13% 0% with 8.24% 0%/14.87% 0%,hline to 71.88%,curve to 95.88% 4.71% with 85.13% 0%/91.76% 0%,curve to 100% 32.14% with 100% 9.41%/100% 16.99%,vline to 67.86%,curve to 95.88% 95.29% with 100% 83.01%/100% 90.59%,curve to 71.88% 100% with 91.76% 100%/85.13% 100%,hline to 28.13%,curve to 4.12% 95.29% with 14.87% 100%/8.24% 100%,curve to 0% 67.86% with 0% 90.59%/0% 83.01%,vline to 32.14%,close);
    --card-inner-aspect: 1.146;
    --card-inner-clip: shape(from 0% 30.66%,curve to 3.92% 4.49% with 0% 16.21%/0% 8.98%,curve to 26.75% 0% with 7.84% 0%/14.14% 0%,hline to 73.25%,curve to 96.08% 4.49% with 85.86% 0%/92.16% 0%,curve to 100% 30.66% with 100% 8.98%/100% 16.21%,vline to 69.34%,curve to 96.08% 95.51% with 100% 83.79%/100% 91.02%,curve to 73.25% 100% with 92.16% 100%/85.86% 100%,hline to 26.75%,curve to 3.92% 95.51% with 14.14% 100%/7.84% 100%,curve to 0% 69.34% with 0% 91.02%/0% 83.79%,vline to 30.66%,close);
    --pi1_2: 1.5707963269px;
    --pi: 3.1415926536px;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .diff {
    @layer daisyui.component {
      position: relative;
      display: grid;
      width: 100%;
      overflow: hidden;
      webkit-user-select: none;
      user-select: none;
      grid-template-rows: 1fr 1.8rem 1fr;
      direction: ltr;
      container-type: inline-size;
      grid-template-columns: auto 1fr;
      &:focus-visible, &:has(.diff-item-1:focus-visible) {
        outline-style: var(--tw-outline-style);
        outline-width: 2px;
        outline-offset: 1px;
        outline-color: var(--color-base-content);
      }
      &:focus-visible {
        outline-style: var(--tw-outline-style);
        outline-width: 2px;
        outline-offset: 1px;
        outline-color: var(--color-base-content);
        .diff-resizer {
          min-width: 95cqi;
          max-width: 95cqi;
        }
      }
      &:has(.diff-item-1:focus-visible) {
        outline-style: var(--tw-outline-style);
        outline-width: 2px;
        outline-offset: 1px;
        .diff-resizer {
          min-width: 5cqi;
          max-width: 5cqi;
        }
      }
      @supports (-webkit-overflow-scrolling: touch) and (overflow: -webkit-paged-x) {
        &:focus {
          .diff-resizer {
            min-width: 5cqi;
            max-width: 5cqi;
          }
        }
        &:has(.diff-item-1:focus) {
          .diff-resizer {
            min-width: 95cqi;
            max-width: 95cqi;
          }
        }
      }
    }
  }
  .modal {
    @layer daisyui.component {
      pointer-events: none;
      visibility: hidden;
      position: fixed;
      inset: calc(0.25rem * 0);
      margin: calc(0.25rem * 0);
      display: grid;
      height: 100%;
      max-height: none;
      width: 100%;
      max-width: none;
      align-items: center;
      justify-items: center;
      background-color: transparent;
      padding: calc(0.25rem * 0);
      color: inherit;
      transition: visibility 0.3s allow-discrete, background-color 0.3s ease-out, opacity 0.1s ease-out;
      overflow: clip;
      overscroll-behavior: contain;
      z-index: 999;
      scrollbar-gutter: auto;
      &::backdrop {
        display: none;
      }
    }
    @layer daisyui.modifier {
      &.modal-open, &[open], &:target, .modal-toggle:checked + & {
        pointer-events: auto;
        visibility: visible;
        opacity: 100%;
        transition: visibility 0s allow-discrete, background-color 0.3s ease-out, opacity 0.1s ease-out;
        background-color: oklch(0% 0 0/ 0.4);
        .modal-box {
          translate: 0 0;
          scale: 1;
          opacity: 1;
        }
      }
      @starting-style {
        &.modal-open, &[open], &:target, .modal-toggle:checked + & {
          opacity: 0%;
        }
      }
    }
  }
  .drawer-side {
    :where(&) {
      @layer daisyui.component {
        overflow-x: hidden;
        overflow-y: hidden;
      }
    }
    @layer daisyui.component {
      pointer-events: none;
      visibility: hidden;
      position: fixed;
      inset-inline-start: calc(0.25rem * 0);
      top: calc(0.25rem * 0);
      z-index: 10;
      grid-column-start: 1;
      grid-row-start: 1;
      display: grid;
      width: 100%;
      grid-template-columns: repeat(1, minmax(0, 1fr));
      grid-template-rows: repeat(1, minmax(0, 1fr));
      align-items: flex-start;
      justify-items: start;
      overscroll-behavior: contain;
      background-color: transparent;
      opacity: 0%;
      transition: opacity 0.2s ease-out 0.1s allow-discrete, visibility 0.3s ease-out 0.1s allow-discrete;
      height: 100vh;
      height: 100dvh;
      > .drawer-overlay {
        position: sticky;
        top: calc(0.25rem * 0);
        cursor: pointer;
        place-self: stretch;
        background-color: oklch(0% 0 0 / 40%);
      }
      > * {
        grid-column-start: 1;
        grid-row-start: 1;
      }
      > *:not(.drawer-overlay) {
        will-change: transform;
        transition: translate 0.3s ease-out, width 0.2s ease-out;
        translate: -100%;
        [dir="rtl"] & {
          translate: 100%;
        }
      }
    }
  }
  .fab {
    @layer daisyui.component {
      pointer-events: none;
      position: fixed;
      inset-inline-end: calc(0.25rem * 4);
      bottom: calc(0.25rem * 4);
      z-index: 999;
      display: flex;
      flex-direction: column-reverse;
      align-items: flex-end;
      gap: calc(0.25rem * 2);
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
      white-space: nowrap;
      > * {
        pointer-events: auto;
        display: flex;
        align-items: center;
        gap: calc(0.25rem * 2);
        &:hover, &:has(:focus-visible) {
          z-index: 1;
        }
      }
      > [tabindex] {
        &:first-child {
          position: relative;
          display: grid;
          transition-property: opacity, visibility, rotate;
          transition-duration: 0.2s;
          transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        }
      }
      .fab-close {
        position: absolute;
        inset-inline-end: calc(0.25rem * 0);
        bottom: calc(0.25rem * 0);
      }
      .fab-main-action {
        position: absolute;
        inset-inline-end: calc(0.25rem * 0);
        bottom: calc(0.25rem * 0);
      }
      &:focus-within {
        &:has(.fab-close), &:has(.fab-main-action) {
          > [tabindex] {
            rotate: 90deg;
            opacity: 0%;
          }
        }
        > [tabindex]:first-child {
          pointer-events: none;
        }
        > :nth-child(n + 2) {
          visibility: visible;
          --tw-scale-x: 100%;
          --tw-scale-y: 100%;
          --tw-scale-z: 100%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
          opacity: 100%;
        }
      }
      > :nth-child(n + 2) {
        visibility: hidden;
        --tw-scale-x: 80%;
        --tw-scale-y: 80%;
        --tw-scale-z: 80%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
        opacity: 0%;
        transition-property: opacity, scale, visibility;
        transition-duration: 0.2s;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        &.fab-main-action, &.fab-close {
          --tw-scale-x: 100%;
          --tw-scale-y: 100%;
          --tw-scale-z: 100%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
      }
      > :nth-child(3) {
        transition-delay: 30ms;
      }
      > :nth-child(4) {
        transition-delay: 60ms;
      }
      > :nth-child(5) {
        transition-delay: 90ms;
      }
      > :nth-child(6) {
        transition-delay: 120ms;
      }
    }
  }
  .drawer-open {
    @layer daisyui.modifier {
      :where(& > .drawer-side) {
        overflow-y: auto;
      }
      > .drawer-toggle {
        display: none;
        & ~ .drawer-side {
          pointer-events: auto;
          visibility: visible;
          position: sticky;
          display: block;
          width: auto;
          overscroll-behavior: auto;
          opacity: 100%;
          & > .drawer-overlay {
            cursor: default;
            background-color: transparent;
          }
          & > *:not(.drawer-overlay) {
            translate: 0%;
            [dir="rtl"] & {
              translate: 0%;
            }
          }
        }
        &:checked ~ .drawer-side {
          pointer-events: auto;
          visibility: visible;
        }
      }
    }
  }
  .drawer-toggle {
    @layer daisyui.component {
      position: fixed;
      height: calc(0.25rem * 0);
      width: calc(0.25rem * 0);
      appearance: none;
      opacity: 0%;
      &:checked {
        & ~ .drawer-side {
          pointer-events: auto;
          visibility: visible;
          overflow-y: auto;
          opacity: 100%;
          scrollbar-color: currentColor oklch(0 0 0 / calc(var(--page-has-backdrop, 0) * 0.4));
          @supports (color: color-mix(in lab, red, red)) {
            scrollbar-color: color-mix(in oklch, currentColor 35%, #0000) oklch(0 0 0 / calc(var(--page-has-backdrop, 0) * 0.4));
          }
          & > *:not(.drawer-overlay) {
            translate: 0%;
          }
        }
      }
      &:focus-visible ~ .drawer-content label.drawer-button {
        outline: 2px solid;
        outline-offset: 2px;
      }
    }
  }
  .tooltip {
    @layer daisyui.component {
      position: relative;
      display: inline-block;
      --tt-bg: var(--color-neutral);
      --tt-off: calc(100% + 0.5rem);
      --tt-tail: calc(100% + 1px + 0.25rem);
      & > .tooltip-content, &[data-tip]:before {
        position: absolute;
        max-width: 20rem;
        border-radius: var(--radius-field);
        padding-inline: calc(0.25rem * 2);
        padding-block: calc(0.25rem * 1);
        text-align: center;
        white-space: normal;
        color: var(--color-neutral-content);
        opacity: 0%;
        font-size: 0.875rem;
        line-height: 1.25;
        background-color: var(--tt-bg);
        width: max-content;
        pointer-events: none;
        z-index: 2;
        --tw-content: attr(data-tip);
        content: var(--tw-content);
      }
      @media (prefers-reduced-motion: no-preference) {
        & > .tooltip-content, &[data-tip]:before, &:after {
          transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms, transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms;
        }
      }
      &:after {
        opacity: 0%;
        background-color: var(--tt-bg);
        content: "";
        pointer-events: none;
        width: 0.625rem;
        height: 0.25rem;
        display: block;
        position: absolute;
        mask-repeat: no-repeat;
        mask-position: -1px 0;
        --mask-tooltip: url("data:image/svg+xml,%3Csvg width='10' height='4' viewBox='0 0 8 4' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0.500009 1C3.5 1 3.00001 4 5.00001 4C7 4 6.5 1 9.5 1C10 1 10 0.499897 10 0H0C-1.99338e-08 0.5 0 1 0.500009 1Z' fill='black'/%3E%3C/svg%3E%0A");
        mask-image: var(--mask-tooltip);
      }
      &.tooltip-open, &[data-tip]:not([data-tip=""]):hover, &:not(:has(.tooltip-content:empty)):has(.tooltip-content):hover, &:has(:focus-visible) {
        > .tooltip-content, &[data-tip]:before, &:after {
          opacity: 100%;
          --tt-pos: 0rem;
        }
        @media (prefers-reduced-motion: no-preference) {
          & > .tooltip-content, &[data-tip]:before, &:after {
            transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0s, transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0ms;
          }
        }
      }
    }
    @layer daisyui.modifier {
      > .tooltip-content, &[data-tip]:before {
        transform: translateX(-50%) translateY(var(--tt-pos, 0.25rem));
        inset: auto auto var(--tt-off) 50%;
      }
      &:after {
        transform: translateX(-50%) translateY(var(--tt-pos, 0.25rem));
        inset: auto auto var(--tt-tail) 50%;
      }
    }
  }
  .bgblurred {
    object-fit: cover;
    background-size: cover;
    min-width: 100%;
    min-height: 100%;
    position: absolute;
    inset: 0;
    z-index: -1;
    pointer-events: none;
  }
  .tab {
    @layer daisyui.component {
      position: relative;
      display: inline-flex;
      cursor: pointer;
      appearance: none;
      flex-wrap: wrap;
      align-items: center;
      justify-content: center;
      text-align: center;
      webkit-user-select: none;
      user-select: none;
      &:hover {
        @media (hover: hover) {
          color: var(--color-base-content);
        }
      }
      --tab-p: 1rem;
      --tab-bg: var(--color-base-100);
      --tab-border-color: var(--color-base-300);
      --tab-radius-ss: 0;
      --tab-radius-se: 0;
      --tab-radius-es: 0;
      --tab-radius-ee: 0;
      --tab-order: 0;
      --tab-radius-min: calc(0.75rem - var(--border));
      border-color: #0000;
      order: var(--tab-order);
      height: var(--tab-height);
      font-size: 0.875rem;
      padding-inline-start: var(--tab-p);
      padding-inline-end: var(--tab-p);
      &:is(input[type="radio"]) {
        min-width: fit-content;
        &:after {
          --tw-content: attr(aria-label);
          content: var(--tw-content);
        }
      }
      &:is(label) {
        position: relative;
        input {
          position: absolute;
          inset: calc(0.25rem * 0);
          cursor: pointer;
          appearance: none;
          opacity: 0%;
        }
      }
      &:checked, &:is(label:has(:checked)), &:is(.tab-active, [aria-selected="true"], [aria-current="true"], [aria-current="page"]) {
        & + .tab-content {
          display: block;
          height: calc(100% - var(--tab-height) + var(--border));
        }
      }
      &:not( :checked, label:has(:checked), :hover, .tab-active, [aria-selected="true"], [aria-current="true"], [aria-current="page"] ) {
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
        }
      }
      &:not(input):empty {
        flex-grow: 1;
        cursor: default;
      }
      &:focus {
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
      }
      &:focus-visible, &:is(label:has(:checked:focus-visible)) {
        outline: 2px solid currentColor;
        outline-offset: -5px;
      }
      &[disabled] {
        pointer-events: none;
        opacity: 40%;
      }
    }
  }
  .menu {
    @layer daisyui.component {
      display: flex;
      width: fit-content;
      flex-direction: column;
      flex-wrap: wrap;
      padding: calc(0.25rem * 2);
      --menu-active-fg: var(--color-neutral-content);
      --menu-active-bg: var(--color-neutral);
      font-size: 0.875rem;
      :where(li ul) {
        position: relative;
        margin-inline-start: calc(0.25rem * 4);
        padding-inline-start: calc(0.25rem * 2);
        white-space: nowrap;
        &:before {
          position: absolute;
          inset-inline-start: calc(0.25rem * 0);
          top: calc(0.25rem * 3);
          bottom: calc(0.25rem * 3);
          background-color: var(--color-base-content);
          opacity: 10%;
          width: var(--border);
          content: "";
        }
      }
      :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
        display: none;
      }
      :where(li:not(.menu-title) > *:not(ul, details, .menu-title, .btn)), :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
        display: grid;
        grid-auto-flow: column;
        align-content: flex-start;
        align-items: center;
        gap: calc(0.25rem * 2);
        border-radius: var(--radius-field);
        padding-inline: calc(0.25rem * 3);
        padding-block: calc(0.25rem * 1.5);
        text-align: start;
        transition-property: color, background-color, box-shadow;
        transition-duration: 0.2s;
        transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
        grid-auto-columns: minmax(auto, max-content) auto max-content;
        text-wrap: balance;
        user-select: none;
      }
      :where(li > details > summary) {
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
        &::-webkit-details-marker {
          display: none;
        }
      }
      :where(li > details > summary), :where(li > .menu-dropdown-toggle) {
        &:after {
          justify-self: flex-end;
          display: block;
          height: 0.375rem;
          width: 0.375rem;
          rotate: -135deg;
          translate: 0 -1px;
          transition-property: rotate, translate;
          transition-duration: 0.2s;
          content: "";
          transform-origin: 50% 50%;
          box-shadow: 2px 2px inset;
          pointer-events: none;
        }
      }
      :where(li > details[open] > summary):after, :where(li > .menu-dropdown-toggle.menu-dropdown-show):after {
        rotate: 45deg;
        translate: 0 1px;
      }
      :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn) {
        &.menu-focus, &:focus-visible {
          cursor: pointer;
          background-color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
          }
          color: var(--color-base-content);
          --tw-outline-style: none;
          outline-style: none;
          @media (forced-colors: active) {
            outline: 2px solid transparent;
            outline-offset: 2px;
          }
        }
      }
      :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover ) {
        cursor: pointer;
        background-color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
        }
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
        box-shadow: 0 1px oklch(0% 0 0 / 0.01) inset, 0 -1px oklch(100% 0 0 / 0.01) inset;
      }
      :where(li:empty) {
        background-color: var(--color-base-content);
        opacity: 10%;
        margin: 0.5rem 1rem;
        height: 1px;
      }
      :where(li) {
        position: relative;
        display: flex;
        flex-shrink: 0;
        flex-direction: column;
        flex-wrap: wrap;
        align-items: stretch;
        .badge {
          justify-self: flex-end;
        }
        & > *:not(ul, .menu-title, details, .btn):active, & > *:not(ul, .menu-title, details, .btn).menu-active, & > details > summary:active {
          --tw-outline-style: none;
          outline-style: none;
          @media (forced-colors: active) {
            outline: 2px solid transparent;
            outline-offset: 2px;
          }
          color: var(--menu-active-fg);
          background-color: var(--menu-active-bg);
          background-size: auto, calc(var(--noise) * 100%);
          background-image: none, var(--fx-noise);
          &:not(&:active) {
            box-shadow: 0 2px calc(var(--depth) * 3px) -2px var(--menu-active-bg);
          }
        }
        &.menu-disabled {
          pointer-events: none;
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
          }
        }
      }
      .dropdown:focus-within {
        .menu-dropdown-toggle:after {
          rotate: 45deg;
          translate: 0 1px;
        }
      }
      .dropdown-content {
        margin-top: calc(0.25rem * 2);
        padding: calc(0.25rem * 2);
        &:before {
          display: none;
        }
      }
    }
  }
  .floating-label {
    @layer daisyui.component {
      position: relative;
      display: block;
      input {
        display: block;
        &::placeholder {
          transition: top 0.1s ease-out, translate 0.1s ease-out, scale 0.1s ease-out, opacity 0.1s ease-out;
        }
      }
      textarea {
        &::placeholder {
          transition: top 0.1s ease-out, translate 0.1s ease-out, scale 0.1s ease-out, opacity 0.1s ease-out;
        }
      }
      > span {
        position: absolute;
        inset-inline-start: calc(0.25rem * 3);
        z-index: 1;
        background-color: var(--color-base-100);
        padding-inline: calc(0.25rem * 1);
        opacity: 0%;
        font-size: 0.875rem;
        top: calc(var(--size-field, 0.25rem) * 10 / 2);
        line-height: 1;
        border-radius: 2px;
        pointer-events: none;
        translate: 0 -50%;
        transition: top 0.1s ease-out, translate 0.1s ease-out, scale 0.1s ease-out, opacity 0.1s ease-out;
      }
      &:focus-within, &:not(:has(input:placeholder-shown, textarea:placeholder-shown)) {
        ::placeholder {
          opacity: 0%;
          top: 0;
          translate: -12.5% calc(-50% - 0.125em);
          scale: 0.75;
          pointer-events: auto;
        }
        > span {
          opacity: 100%;
          top: 0;
          translate: -12.5% calc(-50% - 0.125em);
          scale: 0.75;
          pointer-events: auto;
          z-index: 2;
        }
      }
      &:has(:disabled, [disabled]) {
        > span {
          opacity: 0%;
        }
      }
      &:has(.input-xs, .select-xs, .textarea-xs) span {
        font-size: 0.6875rem;
        top: calc(var(--size-field, 0.25rem) * 6 / 2);
      }
      &:has(.input-sm, .select-sm, .textarea-sm) span {
        font-size: 0.75rem;
        top: calc(var(--size-field, 0.25rem) * 8 / 2);
      }
      &:has(.input-md, .select-md, .textarea-md) span {
        font-size: 0.875rem;
        top: calc(var(--size-field, 0.25rem) * 10 / 2);
      }
      &:has(.input-lg, .select-lg, .textarea-lg) span {
        font-size: 1.125rem;
        top: calc(var(--size-field, 0.25rem) * 12 / 2);
      }
      &:has(.input-xl, .select-xl, .textarea-xl) span {
        font-size: 1.375rem;
        top: calc(var(--size-field, 0.25rem) * 14 / 2);
      }
    }
  }
  .collapse-arrow {
    @layer daisyui.modifier {
      > .collapse-title:after {
        position: absolute;
        display: block;
        height: 0.5rem;
        width: 0.5rem;
        transform: translateY(-100%) rotate(45deg);
        @media (prefers-reduced-motion: no-preference) {
          transition-property: all;
          transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
          transition-duration: 0.2s;
        }
        top: 50%;
        inset-inline-end: 1.4rem;
        content: "";
        transform-origin: 75% 75%;
        box-shadow: 2px 2px;
        pointer-events: none;
      }
    }
  }
  .collapse-plus {
    @layer daisyui.modifier {
      > .collapse-title:after {
        position: absolute;
        display: block;
        height: 0.5rem;
        width: 0.5rem;
        @media (prefers-reduced-motion: no-preference) {
          transition-property: all;
          transition-duration: 300ms;
          transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        }
        top: 0.9rem;
        inset-inline-end: 1.4rem;
        --tw-content: "+";
        content: var(--tw-content);
        pointer-events: none;
      }
    }
  }
  .diff-item-2 {
    @layer daisyui.component {
      position: relative;
      grid-column-start: 1;
      grid-row: span 3 / span 3;
      grid-row-start: 1;
      &:after {
        pointer-events: none;
        position: absolute;
        top: calc(1/2 * 100%);
        right: 1px;
        bottom: calc(0.25rem * 0);
        z-index: 2;
        border-radius: calc(infinity * 1px);
        background-color: var(--color-base-100);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-base-100) 50%, transparent);
        }
        width: 1.2rem;
        height: 1.8rem;
        border: 2px solid var(--color-base-100);
        content: "";
        outline: 1px solid var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          outline: 1px solid color-mix(in oklab, var(--color-base-content) 5%, #0000);
        }
        outline-offset: -3px;
        backdrop-filter: blur(8px);
        box-shadow: 0 1px 2px 0 oklch(0% 0 0 / 0.1);
        translate: 50% -50%;
      }
      > * {
        pointer-events: none;
        position: absolute;
        top: calc(0.25rem * 0);
        bottom: calc(0.25rem * 0);
        left: calc(0.25rem * 0);
        height: 100%;
        width: 100cqi;
        max-width: none;
        object-fit: cover;
        object-position: center;
      }
      @supports (-webkit-overflow-scrolling: touch) and (overflow: -webkit-paged-x) {
        &:after {
          --tw-content: none;
          content: var(--tw-content);
        }
      }
    }
  }
  .pika-single {
    @layer daisyui.component {
      &:is(div) {
        user-select: none;
        font-size: 0.75rem;
        z-index: 999;
        display: inline-block;
        position: relative;
        color: var(--color-base-content);
        background-color: var(--color-base-100);
        border-radius: var(--radius-box);
        border: var(--border) solid var(--color-base-200);
        padding: 0.5rem;
        &:before, &:after {
          content: "";
          display: table;
        }
        &:after {
          clear: both;
        }
        &.is-hidden {
          display: none;
        }
        &.is-bound {
          position: absolute;
        }
        .pika-lendar {
          css-float: left;
        }
        .pika-title {
          position: relative;
          text-align: center;
          select {
            cursor: pointer;
            position: absolute;
            z-index: 999;
            margin: 0;
            left: 0;
            top: 5px;
            opacity: 0;
          }
        }
        .pika-label {
          display: inline-block;
          position: relative;
          z-index: 999;
          overflow: hidden;
          margin: 0;
          padding: 5px 3px;
          background-color: var(--color-base-100);
        }
        .pika-prev, .pika-next {
          display: block;
          cursor: pointer;
          position: absolute;
          top: 0;
          outline: none;
          border: 0;
          width: 2.25rem;
          height: 2.25rem;
          color: #0000;
          font-size: 1.2em;
          border-radius: var(--radius-field);
          &:hover {
            background-color: var(--color-base-200);
          }
          &.is-disabled {
            cursor: default;
            opacity: 0.2;
          }
          &:before {
            display: inline-block;
            width: 2.25rem;
            height: 2.25rem;
            line-height: 2.25;
            color: var(--color-base-content);
          }
        }
        .pika-prev {
          left: 0;
          &:before {
            --tw-content: "‹";
            content: var(--tw-content);
          }
        }
        .pika-next {
          right: 0;
          &:before {
            --tw-content: "›";
            content: var(--tw-content);
          }
        }
        .pika-select {
          display: inline-block;
        }
        .pika-table {
          width: 100%;
          border-collapse: collapse;
          border-spacing: 0;
          border: 0;
          th, td {
            padding: 0;
          }
          th {
            opacity: 0.6;
            text-align: center;
            width: 2.25rem;
            height: 2.25rem;
          }
        }
        .pika-button {
          cursor: pointer;
          display: block;
          outline: none;
          border: 0;
          margin: 0;
          width: 2.25rem;
          height: 2.25rem;
          padding: 5px;
          text-align: right;
          text-align: center;
        }
        .pika-week {
          color: var(--color-base-content);
        }
        .is-today {
          .pika-button {
            background: var(--color-primary);
            color: var(--color-primary-content);
          }
        }
        .is-selected, .has-event {
          .pika-button {
            &, &:hover {
              color: var(--color-base-100);
              background-color: var(--color-base-content);
              border-radius: var(--radius-field);
            }
          }
        }
        .has-event {
          .pika-button {
            background: var(--color-base-primary);
          }
        }
        .is-disabled, .is-inrange {
          .pika-button {
            background: var(--color-base-primary);
          }
        }
        .is-startrange {
          .pika-button {
            color: var(--color-base-100);
            background: var(--color-base-content);
            border-radius: var(--radius-field);
          }
        }
        .is-endrange {
          .pika-button {
            color: var(--color-base-100);
            background: var(--color-base-content);
            border-radius: var(--radius-field);
          }
        }
        .is-disabled {
          .pika-button {
            pointer-events: none;
            cursor: default;
            color: var(--color-base-content);
            opacity: 0.3;
          }
        }
        .is-outside-current-month {
          .pika-button {
            color: var(--color-base-content);
            opacity: 0.3;
          }
        }
        .is-selection-disabled {
          pointer-events: none;
          cursor: default;
        }
        .pika-button:hover, .pika-row.pick-whole-week:hover .pika-button {
          color: var(--color-base-content);
          background-color: var(--color-base-200);
          border-radius: var(--radius-field);
        }
        .pika-table abbr {
          text-decoration: none;
          font-weight: normal;
        }
      }
    }
  }
  .diff-item-1 {
    @layer daisyui.component {
      position: relative;
      z-index: 1;
      grid-column-start: 1;
      grid-row: span 3 / span 3;
      grid-row-start: 1;
      overflow: hidden;
      border-right: 2px solid var(--color-base-100);
      &:focus-visible {
        --tw-outline-style: none;
        outline-style: none;
      }
      > * {
        pointer-events: none;
        position: absolute;
        top: calc(0.25rem * 0);
        bottom: calc(0.25rem * 0);
        left: calc(0.25rem * 0);
        height: 100%;
        width: 100cqi;
        max-width: none;
        object-fit: cover;
        object-position: center;
      }
    }
  }
  .dock {
    @layer daisyui.component {
      position: fixed;
      right: calc(0.25rem * 0);
      bottom: calc(0.25rem * 0);
      left: calc(0.25rem * 0);
      z-index: 1;
      display: flex;
      width: 100%;
      flex-direction: row;
      align-items: center;
      justify-content: space-around;
      background-color: var(--color-base-100);
      padding: calc(0.25rem * 2);
      color: currentcolor;
      border-top: 0.5px solid var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-top: 0.5px solid color-mix(in oklab, var(--color-base-content) 5%, #0000);
      }
      height: 4rem;
      height: calc(4rem + env(safe-area-inset-bottom));
      padding-bottom: env(safe-area-inset-bottom);
      > * {
        position: relative;
        margin-bottom: calc(0.25rem * 2);
        display: flex;
        height: 100%;
        max-width: calc(0.25rem * 32);
        flex-shrink: 1;
        flex-basis: 100%;
        cursor: pointer;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        gap: 1px;
        border-radius: var(--radius-box);
        background-color: transparent;
        transition: opacity 0.2s ease-out;
        @media (hover: hover) {
          &:hover {
            opacity: 80%;
          }
        }
        &[aria-disabled="true"], &[disabled] {
          &, &:hover {
            pointer-events: none;
            color: var(--color-base-content);
            @supports (color: color-mix(in lab, red, red)) {
              color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
            }
            opacity: 100%;
          }
        }
        .dock-label {
          font-size: 0.6875rem;
        }
        &:after {
          content: "";
          position: absolute;
          height: calc(0.25rem * 1);
          width: calc(0.25rem * 6);
          border-radius: calc(infinity * 1px);
          background-color: transparent;
          bottom: 0.2rem;
          border-top: 3px solid transparent;
          transition: background-color 0.1s ease-out, text-color 0.1s ease-out, width 0.1s ease-out;
        }
      }
    }
  }
  .dropdown {
    @layer daisyui.component {
      position: relative;
      display: inline-block;
      position-area: var(--anchor-v, bottom) var(--anchor-h, span-right);
      & > *:not(summary):focus {
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
      }
      .dropdown-content {
        position: absolute;
      }
      &:not(details, .dropdown-open, .dropdown-hover:hover, :focus-within) .dropdown-content, &.dropdown-hover:not(:hover) [tabindex]:first-child:focus:not(:focus-visible) ~ .dropdown-content {
        display: none;
        transform-origin: top;
        opacity: 0%;
        scale: 95%;
      }
      &[popover], .dropdown-content {
        z-index: 999;
        @media (prefers-reduced-motion: no-preference) {
          animation: dropdown 0.2s;
          transition-property: opacity, scale, display;
          transition-behavior: allow-discrete;
          transition-duration: 0.2s;
          transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        }
      }
      @starting-style {
        &[popover], .dropdown-content {
          scale: 95%;
          opacity: 0;
        }
      }
      &.dropdown-open, &:not(.dropdown-hover):focus, &:focus-within {
        > [tabindex]:first-child {
          pointer-events: none;
        }
        .dropdown-content {
          opacity: 100%;
        }
      }
      &.dropdown-hover:hover {
        .dropdown-content {
          opacity: 100%;
          scale: 100%;
        }
      }
      &:is(details) {
        summary {
          &::-webkit-details-marker {
            display: none;
          }
        }
      }
      &.dropdown-open, &:focus, &:focus-within {
        .dropdown-content {
          scale: 100%;
        }
      }
      &:where([popover]) {
        background: #0000;
      }
      &[popover] {
        position: fixed;
        color: inherit;
        @supports not (position-area: bottom) {
          margin: auto;
          &.dropdown-open:not(:popover-open) {
            display: none;
            transform-origin: top;
            opacity: 0%;
            scale: 95%;
          }
          &::backdrop {
            background-color: color-mix(in oklab, #000 30%, #0000);
          }
        }
        &:not(.dropdown-open, :popover-open) {
          display: none;
          transform-origin: top;
          opacity: 0%;
          scale: 95%;
        }
      }
    }
  }
  .btn-menu-close {
    :where(&) {
      @layer daisyui.component {
        width: unset;
      }
    }
    .prose & {
      text-decoration-line: none;
    }
    @layer daisyui.component {
      display: inline-flex;
      flex-shrink: 0;
      cursor: pointer;
      flex-wrap: nowrap;
      align-items: center;
      justify-content: center;
      gap: calc(0.25rem * 1.5);
      text-align: center;
      vertical-align: middle;
      outline-offset: 2px;
      webkit-user-select: none;
      user-select: none;
      padding-inline: var(--btn-p);
      color: var(--btn-fg);
      --tw-prose-links: var(--btn-fg);
      height: var(--size);
      font-size: var(--fontsize, 0.875rem);
      font-weight: 600;
      outline-color: var(--btn-color, var(--color-base-content));
      transition-property: color, background-color, border-color, box-shadow;
      transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
      transition-duration: 0.2s;
      border-start-start-radius: var(--join-ss, var(--radius-field));
      border-start-end-radius: var(--join-se, var(--radius-field));
      border-end-start-radius: var(--join-es, var(--radius-field));
      border-end-end-radius: var(--join-ee, var(--radius-field));
      background-color: var(--btn-bg);
      background-size: auto, calc(var(--noise) * 100%);
      background-image: none, var(--btn-noise);
      border-width: var(--border);
      border-style: solid;
      border-color: var(--btn-border);
      text-shadow: 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 0.15));
      touch-action: manipulation;
      box-shadow: 0 0.5px 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 6%)) inset, var(--btn-shadow);
      --size: calc(var(--size-field, 0.25rem) * 10);
      --btn-bg: var(--btn-color, var(--color-base-200));
      --btn-fg: var(--color-base-content);
      --btn-p: 1rem;
      --btn-border: var(--btn-bg);
      @supports (color: color-mix(in lab, red, red)) {
        --btn-border: color-mix(in oklab, var(--btn-bg), #000 calc(var(--depth) * 5%));
      }
      --btn-shadow: 0 3px 2px -2px var(--btn-bg),
      0 4px 3px -2px var(--btn-bg);
      @supports (color: color-mix(in lab, red, red)) {
        --btn-shadow: 0 3px 2px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000),
      0 4px 3px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000);
      }
      --btn-noise: var(--fx-noise);
      @media (hover: hover) {
        &:hover {
          --btn-bg: var(--btn-color, var(--color-base-200));
          @supports (color: color-mix(in lab, red, red)) {
            --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
          }
        }
      }
      &:focus-visible, &:has(:focus-visible) {
        outline-width: 2px;
        outline-style: solid;
        isolation: isolate;
      }
      &:active:not(.btn-active) {
        translate: 0 0.5px;
        --btn-bg: var(--btn-color, var(--color-base-200));
        @supports (color: color-mix(in lab, red, red)) {
          --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 5%);
        }
        --btn-border: var(--btn-color, var(--color-base-200));
        @supports (color: color-mix(in lab, red, red)) {
          --btn-border: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
        }
        --btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
      }
      &:is(input[type="checkbox"], input[type="radio"]) {
        appearance: none;
        &::after {
          --tw-content: attr(aria-label);
          content: var(--tw-content);
        }
      }
      &:where(input:checked:not(.filter .btn)) {
        --btn-color: var(--color-primary);
        --btn-fg: var(--color-primary-content);
        isolation: isolate;
      }
    }
    &:disabled {
      @layer daisyui.modifier {
        &:not(.btn-link, .btn-ghost) {
          background-color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
          }
          box-shadow: none;
        }
        pointer-events: none;
        --btn-border: #0000;
        --btn-noise: none;
        --btn-fg: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
        }
        @media (hover: hover) {
          &:hover {
            pointer-events: none;
            background-color: var(--color-neutral);
            @supports (color: color-mix(in lab, red, red)) {
              background-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);
            }
            --btn-border: #0000;
            --btn-fg: var(--color-base-content);
            @supports (color: color-mix(in lab, red, red)) {
              --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
            }
          }
        }
      }
    }
    &[disabled] {
      @layer daisyui.modifier {
        &:not(.btn-link, .btn-ghost) {
          background-color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
          }
          box-shadow: none;
        }
        pointer-events: none;
        --btn-border: #0000;
        --btn-noise: none;
        --btn-fg: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
        }
        @media (hover: hover) {
          &:hover {
            pointer-events: none;
            background-color: var(--color-neutral);
            @supports (color: color-mix(in lab, red, red)) {
              background-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);
            }
            --btn-border: #0000;
            --btn-fg: var(--color-base-content);
            @supports (color: color-mix(in lab, red, red)) {
              --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
            }
          }
        }
      }
    }
    z-index: 9999;
    margin: calc(var(--spacing) * 2);
    @layer daisyui.modifier {
      border-radius: calc(infinity * 1px);
      padding-inline: calc(0.25rem * 0);
      width: var(--size);
      height: var(--size);
    }
    background-color: color-mix(in oklab, var(--color-white) 8%, transparent);
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
    color: color-mix(in oklab, var(--color-black) 40%, transparent);
    outline-width: 1px;
    outline-offset: 2px;
    outline-color: color-mix(in oklab, var(--color-white) 15%, transparent);
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 200ms;
    transition-duration: 200ms;
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 105%;
        --tw-scale-y: 105%;
        --tw-scale-z: 105%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
        background-color: color-mix(in srgb, #fff 30%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 30%, transparent);
        }
        color: color-mix(in srgb, #fff 70%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-white) 70%, transparent);
        }
        outline-style: var(--tw-outline-style);
        outline-width: 2px;
        outline-offset: 2px;
        outline-color: color-mix(in srgb, #fff 15%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          outline-color: color-mix(in oklab, var(--color-white) 15%, transparent);
        }
      }
    }
    &:focus {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
      outline-offset: 2px;
      outline-color: color-mix(in srgb, #fff 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        outline-color: color-mix(in oklab, var(--color-white) 20%, transparent);
      }
    }
    &:active {
      --tw-scale-x: 95%;
      --tw-scale-y: 95%;
      --tw-scale-z: 95%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
      background-color: color-mix(in srgb, #fff 12%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 12%, transparent);
      }
      color: color-mix(in srgb, #fff 60%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-white) 60%, transparent);
      }
      outline-style: var(--tw-outline-style);
      outline-width: 3px;
      outline-offset: 4px;
      outline-color: color-mix(in srgb, #fff 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        outline-color: color-mix(in oklab, var(--color-white) 25%, transparent);
      }
    }
    &:disabled {
      cursor: not-allowed;
      background-color: color-mix(in srgb, #fff 2%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 2%, transparent);
      }
      color: color-mix(in srgb, #000 12%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-black) 12%, transparent);
      }
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
      outline-offset: 3px;
      outline-color: color-mix(in srgb, #fff 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        outline-color: color-mix(in oklab, var(--color-white) 5%, transparent);
      }
    }
    border-style: var(--tw-border-style);
    border-width: 0px;
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 4);
    --tw-font-weight: var(--font-weight-extralight);
    font-weight: var(--font-weight-extralight);
    color: var(--color-white);
    outline-style: var(--tw-outline-style);
    outline-width: 0px;
    @layer daisyui.modifier.color {
      --btn-color: var(--color-error);
      --btn-fg: var(--color-error-content);
    }
  }
  .btn {
    :where(&) {
      @layer daisyui.component {
        width: unset;
      }
    }
    .prose & {
      text-decoration-line: none;
    }
    @layer daisyui.component {
      display: inline-flex;
      flex-shrink: 0;
      cursor: pointer;
      flex-wrap: nowrap;
      align-items: center;
      justify-content: center;
      gap: calc(0.25rem * 1.5);
      text-align: center;
      vertical-align: middle;
      outline-offset: 2px;
      webkit-user-select: none;
      user-select: none;
      padding-inline: var(--btn-p);
      color: var(--btn-fg);
      --tw-prose-links: var(--btn-fg);
      height: var(--size);
      font-size: var(--fontsize, 0.875rem);
      font-weight: 600;
      outline-color: var(--btn-color, var(--color-base-content));
      transition-property: color, background-color, border-color, box-shadow;
      transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
      transition-duration: 0.2s;
      border-start-start-radius: var(--join-ss, var(--radius-field));
      border-start-end-radius: var(--join-se, var(--radius-field));
      border-end-start-radius: var(--join-es, var(--radius-field));
      border-end-end-radius: var(--join-ee, var(--radius-field));
      background-color: var(--btn-bg);
      background-size: auto, calc(var(--noise) * 100%);
      background-image: none, var(--btn-noise);
      border-width: var(--border);
      border-style: solid;
      border-color: var(--btn-border);
      text-shadow: 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 0.15));
      touch-action: manipulation;
      box-shadow: 0 0.5px 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 6%)) inset, var(--btn-shadow);
      --size: calc(var(--size-field, 0.25rem) * 10);
      --btn-bg: var(--btn-color, var(--color-base-200));
      --btn-fg: var(--color-base-content);
      --btn-p: 1rem;
      --btn-border: var(--btn-bg);
      @supports (color: color-mix(in lab, red, red)) {
        --btn-border: color-mix(in oklab, var(--btn-bg), #000 calc(var(--depth) * 5%));
      }
      --btn-shadow: 0 3px 2px -2px var(--btn-bg),
      0 4px 3px -2px var(--btn-bg);
      @supports (color: color-mix(in lab, red, red)) {
        --btn-shadow: 0 3px 2px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000),
      0 4px 3px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000);
      }
      --btn-noise: var(--fx-noise);
      @media (hover: hover) {
        &:hover {
          --btn-bg: var(--btn-color, var(--color-base-200));
          @supports (color: color-mix(in lab, red, red)) {
            --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
          }
        }
      }
      &:focus-visible, &:has(:focus-visible) {
        outline-width: 2px;
        outline-style: solid;
        isolation: isolate;
      }
      &:active:not(.btn-active) {
        translate: 0 0.5px;
        --btn-bg: var(--btn-color, var(--color-base-200));
        @supports (color: color-mix(in lab, red, red)) {
          --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 5%);
        }
        --btn-border: var(--btn-color, var(--color-base-200));
        @supports (color: color-mix(in lab, red, red)) {
          --btn-border: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
        }
        --btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
      }
      &:is(input[type="checkbox"], input[type="radio"]) {
        appearance: none;
        &::after {
          --tw-content: attr(aria-label);
          content: var(--tw-content);
        }
      }
      &:where(input:checked:not(.filter .btn)) {
        --btn-color: var(--color-primary);
        --btn-fg: var(--color-primary-content);
        isolation: isolate;
      }
    }
    &:disabled {
      @layer daisyui.modifier {
        &:not(.btn-link, .btn-ghost) {
          background-color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
          }
          box-shadow: none;
        }
        pointer-events: none;
        --btn-border: #0000;
        --btn-noise: none;
        --btn-fg: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
        }
        @media (hover: hover) {
          &:hover {
            pointer-events: none;
            background-color: var(--color-neutral);
            @supports (color: color-mix(in lab, red, red)) {
              background-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);
            }
            --btn-border: #0000;
            --btn-fg: var(--color-base-content);
            @supports (color: color-mix(in lab, red, red)) {
              --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
            }
          }
        }
      }
    }
    &[disabled] {
      @layer daisyui.modifier {
        &:not(.btn-link, .btn-ghost) {
          background-color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
          }
          box-shadow: none;
        }
        pointer-events: none;
        --btn-border: #0000;
        --btn-noise: none;
        --btn-fg: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
        }
        @media (hover: hover) {
          &:hover {
            pointer-events: none;
            background-color: var(--color-neutral);
            @supports (color: color-mix(in lab, red, red)) {
              background-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);
            }
            --btn-border: #0000;
            --btn-fg: var(--color-base-content);
            @supports (color: color-mix(in lab, red, red)) {
              --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
            }
          }
        }
      }
    }
  }
  .loading {
    @layer daisyui.component {
      pointer-events: none;
      display: inline-block;
      aspect-ratio: 1 / 1;
      background-color: currentcolor;
      vertical-align: middle;
      width: calc(var(--size-selector, 0.25rem) * 6);
      mask-size: 100%;
      mask-repeat: no-repeat;
      mask-position: center;
      mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
    }
  }
  .btn-disabled {
    @layer daisyui.modifier {
      &:not(.btn-link, .btn-ghost) {
        background-color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
        }
        box-shadow: none;
      }
      pointer-events: none;
      --btn-border: #0000;
      --btn-noise: none;
      --btn-fg: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
      }
      @media (hover: hover) {
        &:hover {
          pointer-events: none;
          background-color: var(--color-neutral);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);
          }
          --btn-border: #0000;
          --btn-fg: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
          }
        }
      }
    }
  }
  .tab-disabled {
    @layer daisyui.modifier {
      pointer-events: none;
      opacity: 40%;
    }
  }
  .pointer-events-auto {
    pointer-events: auto;
  }
  .pointer-events-none {
    pointer-events: none;
  }
  .react-day-picker {
    @layer daisyui.component {
      user-select: none;
      background-color: var(--color-base-100);
      border-radius: var(--radius-box);
      border: var(--border) solid var(--color-base-200);
      font-size: 0.75rem;
      display: inline-block;
      position: relative;
      overflow: clip;
      &[dir="rtl"] {
        .rdp-nav {
          .rdp-chevron {
            transform-origin: 50%;
            transform: rotate(180deg);
          }
        }
      }
      * {
        box-sizing: border-box;
      }
      .rdp-day {
        width: 2.25rem;
        height: 2.25rem;
        text-align: center;
      }
      .rdp-day_button {
        cursor: pointer;
        font: inherit;
        color: inherit;
        width: 2.25rem;
        height: 2.25rem;
        border: 2px solid #0000;
        border-radius: var(--radius-field);
        background: 0 0;
        justify-content: center;
        align-items: center;
        margin: 0;
        padding: 0;
        display: flex;
        &:disabled {
          cursor: revert;
        }
        &:hover {
          background-color: var(--color-base-200);
        }
      }
      .rdp-caption_label {
        z-index: 1;
        white-space: nowrap;
        border: 0;
        align-items: center;
        display: inline-flex;
        position: relative;
      }
      .rdp-button_next {
        border-radius: var(--radius-field);
        &:hover {
          background-color: var(--color-base-200);
        }
      }
      .rdp-button_previous {
        border-radius: var(--radius-field);
        &:hover {
          background-color: var(--color-base-200);
        }
      }
      .rdp-button_next, .rdp-button_previous {
        cursor: pointer;
        font: inherit;
        color: inherit;
        appearance: none;
        width: 2.25rem;
        height: 2.25rem;
        background: 0 0;
        border: none;
        justify-content: center;
        align-items: center;
        margin: 0;
        padding: 0;
        display: inline-flex;
        position: relative;
        &:disabled, &[aria-disabled="true"] {
          cursor: revert;
          opacity: 0.5;
        }
        &:disabled:hover, &[aria-disabled="true"]:hover {
          background-color: transparent;
        }
      }
      .rdp-chevron {
        fill: var(--color-base-content);
        width: 1rem;
        height: 1rem;
        display: inline-block;
      }
      .rdp-dropdowns {
        align-items: center;
        gap: 0.5rem;
        display: inline-flex;
        position: relative;
      }
      .rdp-dropdown {
        z-index: 2;
        opacity: 0;
        appearance: none;
        cursor: inherit;
        line-height: inherit;
        border: none;
        width: 100%;
        margin: 0;
        padding: 0;
        position: absolute;
        inset-block: 0;
        inset-inline-start: 0;
        &:focus-visible {
          ~ .rdp-caption_label {
            outline: 5px auto highlight;
            outline: 5px auto -webkit-focus-ring-color;
          }
        }
      }
      .rdp-dropdown_root {
        align-items: center;
        display: inline-flex;
        position: relative;
        &[data-disabled="true"] {
          .rdp-chevron {
            opacity: 0.5;
          }
        }
      }
      .rdp-month_caption {
        height: 2.75rem;
        font-size: 0.75rem;
        font-weight: inherit;
        place-content: center;
        display: flex;
      }
      .rdp-months {
        gap: 2rem;
        flex-wrap: wrap;
        max-width: fit-content;
        padding: 0.5rem;
        display: flex;
        position: relative;
      }
      .rdp-month_grid {
        border-collapse: collapse;
      }
      .rdp-nav {
        height: 2.75rem;
        inset-block-start: 0;
        inset-inline-end: 0;
        justify-content: space-between;
        align-items: center;
        width: 100%;
        padding-inline: 0.5rem;
        display: flex;
        position: absolute;
        top: 0.25rem;
      }
      .rdp-weekday {
        opacity: 0.6;
        padding: 0.5rem 0rem;
        text-align: center;
        font-size: smaller;
        font-weight: 500;
      }
      .rdp-week_number {
        opacity: 0.6;
        height: 2.25rem;
        width: 2.25rem;
        border: none;
        border-radius: 100%;
        text-align: center;
        font-size: small;
        font-weight: 400;
      }
      .rdp-today:not(.rdp-outside) {
        .rdp-day_button {
          background: var(--color-primary);
          color: var(--color-primary-content);
        }
      }
      .rdp-selected {
        font-weight: inherit;
        font-size: 0.75rem;
        .rdp-day_button {
          color: var(--color-base-100);
          background-color: var(--color-base-content);
          border-radius: var(--radius-field);
          border: none;
          &:hover {
            background-color: var(--color-base-content);
          }
        }
      }
      .rdp-outside {
        opacity: 0.75;
      }
      .rdp-disabled {
        opacity: 0.5;
      }
      .rdp-hidden {
        visibility: hidden;
        color: var(--color-base-content);
      }
      .rdp-range_start {
        .rdp-day_button {
          border-radius: var(--radius-field) 0 0 var(--radius-field);
        }
      }
      .rdp-range_start .rdp-day_button {
        background-color: var(--color-base-content);
        color: var(--color-base-100);
      }
      .rdp-range_middle {
        background-color: var(--color-base-200);
      }
      .rdp-range_middle .rdp-day_button {
        border: unset;
        border-radius: unset;
        color: inherit;
      }
      .rdp-range_end {
        color: var(--color-base-content);
        .rdp-day_button {
          border-radius: 0 var(--radius-field) var(--radius-field) 0;
        }
      }
      .rdp-range_end .rdp-day_button {
        background-color: var(--color-base-content);
        color: var(--color-base-100);
      }
      .rdp-range_start.rdp-range_end {
        background: revert;
      }
      .rdp-focusable {
        cursor: pointer;
      }
      .rdp-footer {
        border-top: var(--border) solid var(--color-base-200);
        padding: 0.5rem;
      }
    }
  }
  .countdown {
    &.countdown {
      line-height: 1em;
    }
    @layer daisyui.component {
      display: inline-flex;
      & > * {
        visibility: hidden;
        position: relative;
        display: inline-block;
        overflow-y: clip;
        transition: width 0.4s ease-out 0.2s;
        height: 1em;
        --value-v: calc(mod(max(0, var(--value)), 1000));
        --value-hundreds: calc(round(to-zero, var(--value-v) / 100, 1));
        --value-tens: calc(round(to-zero, mod(var(--value-v), 100) / 10, 1));
        --value-ones: calc(mod(var(--value-v), 100));
        --show-hundreds: clamp(clamp(0, var(--digits, 1) - 2, 1), var(--value-hundreds), 1);
        --show-tens: clamp(
        clamp(0, var(--digits, 1) - 1, 1),
        var(--value-tens) + var(--show-hundreds),
        1
      );
        --first-digits: calc(round(to-zero, var(--value-v) / 10, 1));
        width: calc(1ch + var(--show-tens) * 1ch + var(--show-hundreds) * 1ch);
        direction: ltr;
        &:before, &:after {
          visibility: visible;
          position: absolute;
          overflow-x: clip;
          --tw-content: "00\A 01\A 02\A 03\A 04\A 05\A 06\A 07\A 08\A 09\A 10\A 11\A 12\A 13\A 14\A 15\A 16\A 17\A 18\A 19\A 20\A 21\A 22\A 23\A 24\A 25\A 26\A 27\A 28\A 29\A 30\A 31\A 32\A 33\A 34\A 35\A 36\A 37\A 38\A 39\A 40\A 41\A 42\A 43\A 44\A 45\A 46\A 47\A 48\A 49\A 50\A 51\A 52\A 53\A 54\A 55\A 56\A 57\A 58\A 59\A 60\A 61\A 62\A 63\A 64\A 65\A 66\A 67\A 68\A 69\A 70\A 71\A 72\A 73\A 74\A 75\A 76\A 77\A 78\A 79\A 80\A 81\A 82\A 83\A 84\A 85\A 86\A 87\A 88\A 89\A 90\A 91\A 92\A 93\A 94\A 95\A 96\A 97\A 98\A 99\A";
          content: var(--tw-content);
          font-variant-numeric: tabular-nums;
          white-space: pre;
          text-align: end;
          direction: rtl;
          transition: all 1s cubic-bezier(1, 0, 0, 1), width 0.2s ease-out 0.2s, opacity 0.2s ease-out 0.2s;
        }
        &:before {
          width: calc(1ch + var(--show-hundreds) * 1ch);
          top: calc(var(--first-digits) * -1em);
          inset-inline-end: 0;
          opacity: var(--show-tens);
        }
        &:after {
          width: 1ch;
          top: calc(var(--value-ones) * -1em);
          inset-inline-start: 0;
        }
      }
    }
  }
  .collapse {
    &:not(td, tr, colgroup) {
      visibility: revert-layer;
    }
    @layer daisyui.component {
      display: grid;
      position: relative;
      overflow: hidden;
      border-radius: var(--radius-box, 1rem);
      width: 100%;
      grid-template-rows: max-content 0fr;
      grid-template-columns: minmax(0, 1fr);
      isolation: isolate;
      @media (prefers-reduced-motion: no-preference) {
        transition: grid-template-rows 0.2s;
      }
      > input:is([type="checkbox"], [type="radio"]) {
        grid-column-start: 1;
        grid-row-start: 1;
        appearance: none;
        opacity: 0;
        z-index: 1;
        width: 100%;
        padding: 1rem;
        padding-inline-end: 3rem;
        min-height: 1lh;
        transition: background-color 0.2s ease-out;
      }
      &:is( [open], [tabindex]:focus:not(.collapse-close), [tabindex]:focus-within:not(.collapse-close) ), &:not(.collapse-close):has(> input:is([type="checkbox"], [type="radio"]):checked) {
        grid-template-rows: max-content 1fr;
      }
      &:is( [open], [tabindex]:focus:not(.collapse-close), [tabindex]:focus-within:not(.collapse-close) ) > .collapse-content, &:not(.collapse-close) > :where(input:is([type="checkbox"], [type="radio"]):checked ~ .collapse-content) {
        content-visibility: visible;
        min-height: fit-content;
        @supports not (content-visibility: visible) {
          visibility: visible;
        }
      }
      &:focus-visible, &:has(> input:is([type="checkbox"], [type="radio"]):focus-visible), &:has(summary:focus-visible) {
        outline-color: var(--color-base-content);
        outline-style: solid;
        outline-width: 2px;
        outline-offset: 2px;
      }
      &:not(.collapse-close) {
        > input[type="checkbox"], > input[type="radio"]:not(:checked), > .collapse-title {
          cursor: pointer;
        }
      }
      &[tabindex]:focus:not(.collapse-close, .collapse[open]), &[tabindex]:focus-within:not(.collapse-close, .collapse[open]) {
        > .collapse-title {
          cursor: unset;
        }
      }
      &:is( [open], [tabindex]:focus:not(.collapse-close), [tabindex]:focus-within:not(.collapse-close) ) > :where(.collapse-content), &:not(.collapse-close) > :where(input:is([type="checkbox"], [type="radio"]):checked ~ .collapse-content) {
        padding-bottom: 1rem;
      }
    }
    @layer daisyui.modifier {
      &:is([open]) {
        &.collapse-arrow {
          > .collapse-title:after {
            @media (prefers-reduced-motion: no-preference) {
              transform: translateY(-50%) rotate(225deg);
            }
          }
        }
      }
      &.collapse-open {
        &.collapse-arrow {
          > .collapse-title:after {
            @media (prefers-reduced-motion: no-preference) {
              transform: translateY(-50%) rotate(225deg);
            }
          }
        }
        &.collapse-plus {
          > .collapse-title:after {
            --tw-content: "−";
            content: var(--tw-content);
          }
        }
      }
      &[tabindex].collapse-arrow:focus:not(.collapse-close), &.collapse-arrow[tabindex]:focus-within:not(.collapse-close) {
        > .collapse-title:after {
          transform: translateY(-50%) rotate(225deg);
        }
      }
      &.collapse-arrow:not(.collapse-close) {
        > input:is([type="checkbox"], [type="radio"]):checked ~ .collapse-title:after {
          transform: translateY(-50%) rotate(225deg);
        }
      }
      &[open] {
        &.collapse-plus {
          > .collapse-title:after {
            --tw-content: "−";
            content: var(--tw-content);
          }
        }
      }
      &[tabindex].collapse-plus:focus:not(.collapse-close) {
        > .collapse-title:after {
          --tw-content: "−";
          content: var(--tw-content);
        }
      }
      &.collapse-plus:not(.collapse-close) {
        > input:is([type="checkbox"], [type="radio"]):checked ~ .collapse-title:after {
          --tw-content: "−";
          content: var(--tw-content);
        }
      }
    }
    &:is(details) {
      @layer daisyui.component {
        width: 100%;
        @media (prefers-reduced-motion: no-preference) {
          &::details-content {
            transition: content-visibility 0.2s allow-discrete, visibility 0.2s allow-discrete, padding 0.2s ease-out, background-color 0.2s ease-out, height 0.2s;
            height: 0;
            interpolate-size: allow-keywords;
          }
          &:where([open])::details-content {
            height: auto;
          }
        }
        & summary {
          position: relative;
          display: block;
          &::-webkit-details-marker {
            display: none;
          }
        }
        & > .collapse-content {
          content-visibility: visible;
        }
      }
    }
    &:is(details) summary {
      @layer daisyui.component {
        outline: none;
      }
    }
  }
  .collapse-content {
    @layer daisyui.component {
      grid-column-start: 1;
      grid-row-start: 1;
    }
    @layer daisyui.component {
      content-visibility: hidden;
      grid-column-start: 1;
      grid-row-start: 2;
      min-height: 0;
      padding-left: 1rem;
      padding-right: 1rem;
      cursor: unset;
      @supports not (content-visibility: hidden) {
        visibility: hidden;
      }
      @media (prefers-reduced-motion: no-preference) {
        transition: content-visibility 0.2s allow-discrete, visibility 0.2s allow-discrete, padding 0.2s ease-out, background-color 0.2s ease-out;
      }
    }
  }
  .validator-hint {
    @layer daisyui.component {
      visibility: hidden;
      margin-top: calc(0.25rem * 2);
      font-size: 0.75rem;
    }
  }
  .validator {
    @layer daisyui.component {
      &:user-valid, &:has(:user-valid) {
        &, &:focus, &:checked, &[aria-checked="true"], &:focus-within {
          --input-color: var(--color-success);
        }
      }
      &:user-invalid, &:has(:user-invalid), &[aria-invalid]:not([aria-invalid="false"]), &:has([aria-invalid]:not([aria-invalid="false"])) {
        &, &:focus, &:checked, &[aria-checked="true"], &:focus-within {
          --input-color: var(--color-error);
        }
        & ~ .validator-hint {
          visibility: visible;
          color: var(--color-error);
        }
      }
    }
    &:user-invalid, &:has(:user-invalid), &[aria-invalid]:not([aria-invalid="false"]), &:has([aria-invalid]:not([aria-invalid="false"])) {
      & ~ .validator-hint {
        display: revert-layer;
      }
    }
  }
  .collapse-open {
    @layer daisyui.modifier {
      grid-template-rows: max-content 1fr;
      > .collapse-content {
        content-visibility: visible;
        min-height: fit-content;
        padding-bottom: 1rem;
        @supports not (content-visibility: visible) {
          visibility: visible;
        }
      }
    }
  }
  .collapse {
    visibility: collapse;
  }
  .invisible {
    visibility: hidden;
  }
  .visible {
    visibility: visible;
  }
  .tabs-lift {
    @layer daisyui.modifier {
      --tabs-height: auto;
      --tabs-direction: row;
      > .tab {
        --tab-border: 0 0 var(--border) 0;
        --tab-radius-ss: min(var(--radius-field), var(--tab-radius-min));
        --tab-radius-se: min(var(--radius-field), var(--tab-radius-min));
        --tab-radius-es: 0;
        --tab-radius-ee: 0;
        --tab-paddings: var(--border) var(--tab-p) 0 var(--tab-p);
        --tab-border-colors: #0000 #0000 var(--tab-border-color) #0000;
        --tab-corner-width: calc(100% + min(var(--radius-field), var(--tab-radius-min)) * 2);
        --tab-corner-height: min(var(--radius-field), var(--tab-radius-min));
        --tab-corner-position: top left, top right;
        border-width: var(--tab-border);
        border-start-start-radius: var(--tab-radius-ss);
        border-start-end-radius: var(--tab-radius-se);
        border-end-start-radius: var(--tab-radius-es);
        border-end-end-radius: var(--tab-radius-ee);
        padding: var(--tab-paddings);
        border-color: var(--tab-border-colors);
        &:is(.tab-active, [aria-selected="true"], [aria-current="true"], [aria-current="page"]):not( .tab-disabled, [disabled] ), &:is(input:checked, label:has(:checked)) {
          --tab-border: var(--border) var(--border) 0 var(--border);
          --tab-border-colors: var(--tab-border-color) var(--tab-border-color) #0000
          var(--tab-border-color);
          --tab-paddings: 0 calc(var(--tab-p) - var(--border)) var(--border)
          calc(var(--tab-p) - var(--border));
          --tab-inset: auto auto 0 auto;
          --tab-grad: calc(69% - var(--border));
          --radius-start: radial-gradient(
          circle at top left,
          #0000 var(--tab-grad),
          var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
          var(--tab-border-color) calc(var(--tab-grad) + var(--border)),
          var(--tab-bg) calc(var(--tab-grad) + var(--border) + 0.25px)
        );
          --radius-end: radial-gradient(
          circle at top right,
          #0000 var(--tab-grad),
          var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
          var(--tab-border-color) calc(var(--tab-grad) + var(--border)),
          var(--tab-bg) calc(var(--tab-grad) + var(--border) + 0.25px)
        );
          background-color: var(--tab-bg);
          &:before {
            z-index: 1;
            content: "";
            display: block;
            position: absolute;
            width: var(--tab-corner-width);
            height: var(--tab-corner-height);
            background-position: var(--tab-corner-position);
            background-image: var(--radius-start), var(--radius-end);
            background-size: min(var(--radius-field), var(--tab-radius-min)) min(var(--radius-field), var(--tab-radius-min));
            background-repeat: no-repeat;
            inset: var(--tab-inset);
          }
          &:first-child:before {
            --radius-start: none;
          }
          [dir="rtl"] &:first-child:before {
            transform: rotateY(180deg);
          }
          &:last-child:before {
            --radius-end: none;
          }
          [dir="rtl"] &:last-child:before {
            transform: rotateY(180deg);
          }
        }
      }
      &:has(> .tab-content) {
        > .tab:first-child {
          &:not(.tab-active, [aria-selected="true"], [aria-current="true"], [aria-current="page"]) {
            --tab-border-colors: var(--tab-border-color) var(--tab-border-color) #0000
            var(--tab-border-color);
          }
        }
      }
      > .tab-content {
        --tabcontent-margin: calc(-1 * var(--border)) 0 0 0;
        --tabcontent-radius-ss: 0;
        --tabcontent-radius-se: var(--radius-box);
        --tabcontent-radius-es: var(--radius-box);
        --tabcontent-radius-ee: var(--radius-box);
      }
      :checked, label:has(:checked), :is(.tab-active, [aria-selected="true"], [aria-current="true"], [aria-current="page"]) {
        & + .tab-content {
          &:nth-child(1), &:nth-child(n + 3) {
            --tabcontent-radius-ss: var(--radius-box);
          }
        }
      }
    }
  }
  .radial-progress {
    @layer daisyui.component {
      position: relative;
      display: inline-grid;
      height: var(--size);
      width: var(--size);
      place-content: center;
      border-radius: calc(infinity * 1px);
      background-color: transparent;
      vertical-align: middle;
      box-sizing: content-box;
      --value: 0;
      --size: 5rem;
      --thickness: calc(var(--size) / 10);
      --radialprogress: calc(var(--value) * 1%);
      transition: --radialprogress 0.3s linear;
      &:before {
        position: absolute;
        inset: calc(0.25rem * 0);
        border-radius: calc(infinity * 1px);
        content: "";
        background: radial-gradient(farthest-side, currentColor 98%, #0000) top/var(--thickness) var(--thickness) no-repeat, conic-gradient(currentColor var(--radialprogress), #0000 0);
        webkit-mask: radial-gradient( farthest-side, #0000 calc(100% - var(--thickness)), #000 calc(100% + 0.5px - var(--thickness)) );
        mask: radial-gradient( farthest-side, #0000 calc(100% - var(--thickness)), #000 calc(100% + 0.5px - var(--thickness)) );
      }
      &:after {
        position: absolute;
        border-radius: calc(infinity * 1px);
        background-color: currentcolor;
        transition: transform 0.3s linear;
        content: "";
        inset: calc(50% - var(--thickness) / 2);
        transform: rotate(calc(var(--value) * 3.6deg - 90deg)) translate(calc(var(--size) / 2 - 50%));
      }
    }
  }
  .list {
    @layer daisyui.component {
      display: flex;
      flex-direction: column;
      font-size: 0.875rem;
      .list-row {
        --list-grid-cols: minmax(0, auto) 1fr;
        position: relative;
        display: grid;
        grid-auto-flow: column;
        gap: calc(0.25rem * 4);
        border-radius: var(--radius-box);
        padding: calc(0.25rem * 4);
        word-break: break-word;
        grid-template-columns: var(--list-grid-cols);
      }
      & > :not(:last-child) {
        &.list-row, .list-row {
          &:after {
            content: "";
            border-bottom: var(--border) solid;
            inset-inline: var(--radius-box);
            position: absolute;
            bottom: calc(0.25rem * 0);
            border-color: var(--color-base-content);
            @supports (color: color-mix(in lab, red, red)) {
              border-color: color-mix(in oklab, var(--color-base-content) 5%, transparent);
            }
          }
        }
      }
    }
    @layer daisyui.modifier {
      .list-row {
        &:has(.list-col-grow:nth-child(1)) {
          --list-grid-cols: 1fr;
        }
        &:has(.list-col-grow:nth-child(2)) {
          --list-grid-cols: minmax(0, auto) 1fr;
        }
        &:has(.list-col-grow:nth-child(3)) {
          --list-grid-cols: minmax(0, auto) minmax(0, auto) 1fr;
        }
        &:has(.list-col-grow:nth-child(4)) {
          --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;
        }
        &:has(.list-col-grow:nth-child(5)) {
          --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;
        }
        &:has(.list-col-grow:nth-child(6)) {
          --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto)
          minmax(0, auto) 1fr;
        }
        :not(.list-col-wrap) {
          grid-row-start: 1;
        }
      }
    }
  }
  .toast {
    @layer daisyui.component {
      position: fixed;
      inset-inline-start: auto;
      inset-inline-end: calc(0.25rem * 4);
      top: auto;
      bottom: calc(0.25rem * 4);
      display: flex;
      flex-direction: column;
      gap: calc(0.25rem * 2);
      background-color: transparent;
      translate: var(--toast-x, 0) var(--toast-y, 0);
      width: max-content;
      max-width: calc(100vw - 2rem);
      & > * {
        @media (prefers-reduced-motion: no-preference) {
          animation: toast 0.25s ease-out;
        }
      }
    }
  }
  .toggle {
    @layer daisyui.component {
      border: var(--border) solid currentColor;
      color: var(--input-color);
      position: relative;
      display: inline-grid;
      flex-shrink: 0;
      cursor: pointer;
      appearance: none;
      place-content: center;
      vertical-align: middle;
      webkit-user-select: none;
      user-select: none;
      grid-template-columns: 0fr 1fr 1fr;
      --radius-selector-max: calc(
      var(--radius-selector) + var(--radius-selector) + var(--radius-selector)
    );
      border-radius: calc( var(--radius-selector) + min(var(--toggle-p), var(--radius-selector-max)) + min(var(--border), var(--radius-selector-max)) );
      padding: var(--toggle-p);
      box-shadow: 0 1px currentColor inset;
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000) inset;
      }
      transition: color 0.3s, grid-template-columns 0.2s;
      --input-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --input-color: color-mix(in oklab, var(--color-base-content) 50%, #0000);
      }
      --toggle-p: calc(var(--size) * 0.125);
      --size: calc(var(--size-selector, 0.25rem) * 6);
      width: calc((var(--size) * 2) - (var(--border) + var(--toggle-p)) * 2);
      height: var(--size);
      > * {
        z-index: 1;
        grid-column: span 1 / span 1;
        grid-column-start: 2;
        grid-row-start: 1;
        height: 100%;
        cursor: pointer;
        appearance: none;
        background-color: transparent;
        padding: calc(0.25rem * 0.5);
        transition: opacity 0.2s, rotate 0.4s;
        border: none;
        &:focus {
          --tw-outline-style: none;
          outline-style: none;
          @media (forced-colors: active) {
            outline: 2px solid transparent;
            outline-offset: 2px;
          }
        }
        &:nth-child(2) {
          color: var(--color-base-100);
          rotate: 0deg;
        }
        &:nth-child(3) {
          color: var(--color-base-100);
          opacity: 0%;
          rotate: -15deg;
        }
      }
      &:has(:checked) {
        > :nth-child(2) {
          opacity: 0%;
          rotate: 15deg;
        }
        > :nth-child(3) {
          opacity: 100%;
          rotate: 0deg;
        }
      }
      &:before {
        position: relative;
        inset-inline-start: calc(0.25rem * 0);
        grid-column-start: 2;
        grid-row-start: 1;
        aspect-ratio: 1 / 1;
        height: 100%;
        border-radius: var(--radius-selector);
        background-color: currentcolor;
        translate: 0;
        --tw-content: "";
        content: var(--tw-content);
        transition: background-color 0.1s, translate 0.2s, inset-inline-start 0.2s;
        box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px currentColor;
        @supports (color: color-mix(in lab, red, red)) {
          box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000);
        }
        background-size: auto, calc(var(--noise) * 100%);
        background-image: none, var(--fx-noise);
      }
      @media (forced-colors: active) {
        &:before {
          outline-style: var(--tw-outline-style);
          outline-width: 1px;
          outline-offset: calc(1px * -1);
        }
      }
      @media print {
        &:before {
          outline: 0.25rem solid;
          outline-offset: -1rem;
        }
      }
      &:focus-visible, &:has(:focus-visible) {
        outline: 2px solid currentColor;
        outline-offset: 2px;
      }
      &:checked, &[aria-checked="true"], &:has(> input:checked) {
        grid-template-columns: 1fr 1fr 0fr;
        background-color: var(--color-base-100);
        --input-color: var(--color-base-content);
        &:before {
          background-color: currentcolor;
        }
        @starting-style {
          &:before {
            opacity: 0;
          }
        }
      }
      &:indeterminate {
        grid-template-columns: 0.5fr 1fr 0.5fr;
      }
      &:disabled {
        cursor: not-allowed;
        opacity: 30%;
        &:before {
          background-color: transparent;
          border: var(--border) solid currentColor;
        }
      }
    }
  }
  .input {
    @layer daisyui.component {
      cursor: text;
      border: var(--border) solid #0000;
      position: relative;
      display: inline-flex;
      flex-shrink: 1;
      appearance: none;
      align-items: center;
      gap: calc(0.25rem * 2);
      background-color: var(--color-base-100);
      padding-inline: calc(0.25rem * 3);
      vertical-align: middle;
      white-space: nowrap;
      width: clamp(3rem, 20rem, 100%);
      height: var(--size);
      font-size: max(var(--font-size, 0.875rem), 0.875rem);
      touch-action: manipulation;
      border-start-start-radius: var(--join-ss, var(--radius-field));
      border-start-end-radius: var(--join-se, var(--radius-field));
      border-end-start-radius: var(--join-es, var(--radius-field));
      border-end-end-radius: var(--join-ee, var(--radius-field));
      border-color: var(--input-color);
      box-shadow: 0 1px var(--input-color) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
      }
      --size: calc(var(--size-field, 0.25rem) * 10);
      --input-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
      }
      &:where(input) {
        display: inline-flex;
      }
      :where(input) {
        display: inline-flex;
        height: 100%;
        width: 100%;
        appearance: none;
        background-color: transparent;
        border: none;
        &:focus, &:focus-within {
          --tw-outline-style: none;
          outline-style: none;
          @media (forced-colors: active) {
            outline: 2px solid transparent;
            outline-offset: 2px;
          }
        }
      }
      :where(input[type="url"]), :where(input[type="email"]) {
        direction: ltr;
      }
      :where(input[type="date"]) {
        display: inline-flex;
      }
      &:focus, &:focus-within {
        --input-color: var(--color-base-content);
        box-shadow: 0 1px var(--input-color);
        @supports (color: color-mix(in lab, red, red)) {
          box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
        }
        outline: 2px solid var(--input-color);
        outline-offset: 2px;
        isolation: isolate;
        z-index: 1;
      }
      @media (pointer: coarse) {
        @supports (-webkit-touch-callout: none) {
          &:focus, &:focus-within {
            --font-size: 1rem;
          }
        }
      }
      &:has(> input[disabled]), &:is(:disabled, [disabled]), fieldset:disabled & {
        cursor: not-allowed;
        border-color: var(--color-base-200);
        background-color: var(--color-base-200);
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
        }
        &::placeholder {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
          }
        }
        box-shadow: none;
      }
      &:has(> input[disabled]) > input[disabled] {
        cursor: not-allowed;
      }
      &::-webkit-date-and-time-value {
        text-align: inherit;
      }
      &[type="number"] {
        &::-webkit-inner-spin-button {
          margin-block: calc(0.25rem * -3);
          margin-inline-end: calc(0.25rem * -3);
        }
      }
      &::-webkit-calendar-picker-indicator {
        position: absolute;
        inset-inline-end: 0.75em;
      }
      &:has(> input[type="date"]) {
        :where(input[type="date"]) {
          display: inline-flex;
          webkit-appearance: none;
          appearance: none;
        }
        input[type="date"]::-webkit-calendar-picker-indicator {
          position: absolute;
          inset-inline-end: 0.75em;
          width: 1em;
          height: 1em;
          cursor: pointer;
        }
      }
    }
  }
  .indicator {
    @layer daisyui.component {
      position: relative;
      display: inline-flex;
      width: max-content;
      :where(.indicator-item) {
        z-index: 1;
        position: absolute;
        white-space: nowrap;
        top: var(--indicator-t, 0);
        bottom: var(--indicator-b, auto);
        left: var(--indicator-s, auto);
        right: var(--indicator-e, 0);
        translate: var(--indicator-x, 50%) var(--indicator-y, -50%);
      }
    }
  }
  .table {
    @layer daisyui.component {
      font-size: 0.875rem;
      position: relative;
      width: 100%;
      border-radius: var(--radius-box);
      text-align: left;
      &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
        text-align: right;
      }
      tr.row-hover {
        &, &:nth-child(even) {
          &:hover {
            @media (hover: hover) {
              background-color: var(--color-base-200);
            }
          }
        }
      }
      :where(th, td) {
        padding-inline: calc(0.25rem * 4);
        padding-block: calc(0.25rem * 3);
        vertical-align: middle;
      }
      :where(thead, tfoot) {
        white-space: nowrap;
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
        }
        font-size: 0.875rem;
        font-weight: 600;
      }
      :where(tfoot) {
        border-top: var(--border) solid var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          border-top: var(--border) solid color-mix(in oklch, var(--color-base-content) 5%, #0000);
        }
      }
      :where(.table-pin-rows thead tr) {
        position: sticky;
        top: calc(0.25rem * 0);
        z-index: 1;
        background-color: var(--color-base-100);
      }
      :where(.table-pin-rows tfoot tr) {
        position: sticky;
        bottom: calc(0.25rem * 0);
        z-index: 1;
        background-color: var(--color-base-100);
      }
      :where(.table-pin-cols tr th) {
        position: sticky;
        right: calc(0.25rem * 0);
        left: calc(0.25rem * 0);
        background-color: var(--color-base-100);
      }
      :where(thead tr, tbody tr:not(:last-child)) {
        border-bottom: var(--border) solid var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          border-bottom: var(--border) solid color-mix(in oklch, var(--color-base-content) 5%, #0000);
        }
      }
    }
  }
  .avatar-offline {
    @layer daisyui.modifier {
      &:before {
        content: "";
        position: absolute;
        z-index: 1;
        display: block;
        border-radius: calc(infinity * 1px);
        background-color: var(--color-base-300);
        outline: 2px solid var(--color-base-100);
        width: 15%;
        height: 15%;
        top: 7%;
        right: 7%;
      }
    }
  }
  .avatar-online {
    @layer daisyui.modifier {
      &:before {
        content: "";
        position: absolute;
        z-index: 1;
        display: block;
        border-radius: calc(infinity * 1px);
        background-color: var(--color-success);
        outline: 2px solid var(--color-base-100);
        width: 15%;
        height: 15%;
        top: 7%;
        right: 7%;
      }
    }
  }
  .steps {
    @layer daisyui.component {
      display: inline-grid;
      grid-auto-flow: column;
      overflow: hidden;
      overflow-x: auto;
      counter-reset: step;
      grid-auto-columns: 1fr;
      .step {
        display: grid;
        grid-template-columns: repeat(1, minmax(0, 1fr));
        grid-template-columns: auto;
        grid-template-rows: repeat(2, minmax(0, 1fr));
        grid-template-rows: 40px 1fr;
        place-items: center;
        text-align: center;
        min-width: 4rem;
        --step-bg: var(--color-base-300);
        --step-fg: var(--color-base-content);
        &:before {
          top: calc(0.25rem * 0);
          grid-column-start: 1;
          grid-row-start: 1;
          height: calc(0.25rem * 2);
          width: 100%;
          border: 1px solid;
          color: var(--step-bg);
          background-color: var(--step-bg);
          content: "";
          margin-inline-start: -100%;
        }
        > .step-icon, &:not(:has(.step-icon)):after {
          --tw-content: counter(step);
          content: var(--tw-content);
          counter-increment: step;
          z-index: 1;
          color: var(--step-fg);
          background-color: var(--step-bg);
          border: 1px solid var(--step-bg);
          position: relative;
          grid-column-start: 1;
          grid-row-start: 1;
          display: grid;
          height: calc(0.25rem * 8);
          width: calc(0.25rem * 8);
          place-items: center;
          place-self: center;
          border-radius: calc(infinity * 1px);
        }
        &:first-child:before {
          --tw-content: none;
          content: var(--tw-content);
        }
        &[data-content]:after {
          --tw-content: attr(data-content);
          content: var(--tw-content);
        }
      }
    }
    @layer daisyui.modifier {
      .step-neutral {
        + .step-neutral:before, &:after, > .step-icon {
          --step-bg: var(--color-neutral);
          --step-fg: var(--color-neutral-content);
        }
      }
      .step-primary {
        + .step-primary:before, &:after, > .step-icon {
          --step-bg: var(--color-primary);
          --step-fg: var(--color-primary-content);
        }
      }
      .step-secondary {
        + .step-secondary:before, &:after, > .step-icon {
          --step-bg: var(--color-secondary);
          --step-fg: var(--color-secondary-content);
        }
      }
      .step-accent {
        + .step-accent:before, &:after, > .step-icon {
          --step-bg: var(--color-accent);
          --step-fg: var(--color-accent-content);
        }
      }
      .step-info {
        + .step-info:before, &:after, > .step-icon {
          --step-bg: var(--color-info);
          --step-fg: var(--color-info-content);
        }
      }
      .step-success {
        + .step-success:before, &:after, > .step-icon {
          --step-bg: var(--color-success);
          --step-fg: var(--color-success-content);
        }
      }
      .step-warning {
        + .step-warning:before, &:after, > .step-icon {
          --step-bg: var(--color-warning);
          --step-fg: var(--color-warning-content);
        }
      }
      .step-error {
        + .step-error:before, &:after, > .step-icon {
          --step-bg: var(--color-error);
          --step-fg: var(--color-error-content);
        }
      }
    }
  }
  .range {
    @layer daisyui.component {
      appearance: none;
      webkit-appearance: none;
      --range-thumb: var(--color-base-100);
      --range-thumb-size: calc(var(--size-selector, 0.25rem) * 6);
      --range-progress: currentColor;
      --range-fill: 1;
      --range-p: 0.25rem;
      --range-bg: currentColor;
      @supports (color: color-mix(in lab, red, red)) {
        --range-bg: color-mix(in oklab, currentColor 10%, #0000);
      }
      cursor: pointer;
      overflow: hidden;
      background-color: transparent;
      vertical-align: middle;
      width: clamp(3rem, 20rem, 100%);
      --radius-selector-max: calc(
      var(--radius-selector) + var(--radius-selector) + var(--radius-selector)
    );
      border-radius: calc(var(--radius-selector) + min(var(--range-p), var(--radius-selector-max)));
      border: none;
      height: var(--range-thumb-size);
      [dir="rtl"] & {
        --range-dir: -1;
      }
      &:focus {
        outline: none;
      }
      &:focus-visible {
        outline: 2px solid;
        outline-offset: 2px;
      }
      &::-webkit-slider-runnable-track {
        width: 100%;
        background-color: var(--range-bg);
        border-radius: var(--radius-selector);
        height: calc(var(--range-thumb-size) * 0.5);
      }
      @media (forced-colors: active) {
        &::-webkit-slider-runnable-track {
          border: 1px solid;
        }
      }
      @media (forced-colors: active) {
        &::-moz-range-track {
          border: 1px solid;
        }
      }
      &::-webkit-slider-thumb {
        position: relative;
        box-sizing: border-box;
        border-radius: calc(var(--radius-selector) + min(var(--range-p), var(--radius-selector-max)));
        background-color: var(--range-thumb);
        height: var(--range-thumb-size);
        width: var(--range-thumb-size);
        border: var(--range-p) solid;
        appearance: none;
        webkit-appearance: none;
        top: 50%;
        color: var(--range-progress);
        transform: translateY(-50%);
        box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px currentColor, 0 0 0 2rem var(--range-thumb) inset, calc((var(--range-dir, 1) * -100rem) - (var(--range-dir, 1) * var(--range-thumb-size) / 2)) 0 0 calc(100rem * var(--range-fill));
        @supports (color: color-mix(in lab, red, red)) {
          box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000), 0 0 0 2rem var(--range-thumb) inset, calc((var(--range-dir, 1) * -100rem) - (var(--range-dir, 1) * var(--range-thumb-size) / 2)) 0 0 calc(100rem * var(--range-fill));
        }
      }
      &::-moz-range-track {
        width: 100%;
        background-color: var(--range-bg);
        border-radius: var(--radius-selector);
        height: calc(var(--range-thumb-size) * 0.5);
      }
      &::-moz-range-thumb {
        position: relative;
        box-sizing: border-box;
        border-radius: calc(var(--radius-selector) + min(var(--range-p), var(--radius-selector-max)));
        background-color: currentColor;
        height: var(--range-thumb-size);
        width: var(--range-thumb-size);
        border: var(--range-p) solid;
        top: 50%;
        color: var(--range-progress);
        box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px currentColor, 0 0 0 2rem var(--range-thumb) inset, calc((var(--range-dir, 1) * -100rem) - (var(--range-dir, 1) * var(--range-thumb-size) / 2)) 0 0 calc(100rem * var(--range-fill));
        @supports (color: color-mix(in lab, red, red)) {
          box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000), 0 0 0 2rem var(--range-thumb) inset, calc((var(--range-dir, 1) * -100rem) - (var(--range-dir, 1) * var(--range-thumb-size) / 2)) 0 0 calc(100rem * var(--range-fill));
        }
      }
      &:disabled {
        cursor: not-allowed;
        opacity: 30%;
      }
    }
  }
  .tabs-border {
    @layer daisyui.modifier {
      .tab {
        --tab-border-color: #0000 #0000 var(--tab-border-color) #0000;
        position: relative;
        border-radius: var(--radius-field);
        &:before {
          content: "";
          background-color: var(--tab-border-color);
          transition: background-color 0.2s ease;
          width: 80%;
          height: 3px;
          border-radius: var(--radius-field);
          bottom: 0;
          left: 10%;
          position: absolute;
        }
        &:is(.tab-active, [aria-selected="true"], [aria-current="true"], [aria-current="page"]):not( .tab-disabled, [disabled] ), &:is(input:checked), &:is(label:has(:checked)) {
          &:before {
            --tab-border-color: currentColor;
            border-top: 3px solid;
          }
        }
      }
    }
  }
  .chat-bubble {
    @layer daisyui.component {
      position: relative;
      display: block;
      width: fit-content;
      border-radius: var(--radius-field);
      background-color: var(--color-base-300);
      padding-inline: calc(0.25rem * 4);
      padding-block: calc(0.25rem * 2);
      color: var(--color-base-content);
      grid-row-end: 3;
      min-height: 2rem;
      min-width: 2.5rem;
      max-width: 90%;
      &:before {
        position: absolute;
        bottom: calc(0.25rem * 0);
        height: calc(0.25rem * 3);
        width: calc(0.25rem * 3);
        background-color: inherit;
        content: "";
        mask-repeat: no-repeat;
        mask-image: var(--mask-chat);
        mask-position: 0px -1px;
        mask-size: 0.8125rem;
      }
    }
  }
  .select {
    @layer daisyui.component {
      border: var(--border) solid #0000;
      position: relative;
      display: inline-flex;
      flex-shrink: 1;
      appearance: none;
      align-items: center;
      gap: calc(0.25rem * 1.5);
      background-color: var(--color-base-100);
      padding-inline-start: calc(0.25rem * 3);
      padding-inline-end: calc(0.25rem * 7);
      vertical-align: middle;
      width: clamp(3rem, 20rem, 100%);
      height: var(--size);
      font-size: 0.875rem;
      touch-action: manipulation;
      border-start-start-radius: var(--join-ss, var(--radius-field));
      border-start-end-radius: var(--join-se, var(--radius-field));
      border-end-start-radius: var(--join-es, var(--radius-field));
      border-end-end-radius: var(--join-ee, var(--radius-field));
      background-image: linear-gradient(45deg, #0000 50%, currentColor 50%), linear-gradient(135deg, currentColor 50%, #0000 50%);
      background-position: calc(100% - 20px) calc(1px + 50%), calc(100% - 16.1px) calc(1px + 50%);
      background-size: 4px 4px, 4px 4px;
      background-repeat: no-repeat;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      box-shadow: 0 1px var(--input-color) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
      }
      border-color: var(--input-color);
      --input-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
      }
      --size: calc(var(--size-field, 0.25rem) * 10);
      [dir="rtl"] & {
        background-position: calc(0% + 12px) calc(1px + 50%), calc(0% + 16px) calc(1px + 50%);
        &::picker(select), select::picker(select) {
          translate: 0.5rem 0;
        }
      }
      &[multiple] {
        height: auto;
        overflow: auto;
        padding-block: calc(0.25rem * 3);
        padding-inline-end: calc(0.25rem * 3);
        background-image: none;
      }
      select {
        margin-inline-start: calc(0.25rem * -3);
        margin-inline-end: calc(0.25rem * -7);
        width: calc(100% + 2.75rem);
        appearance: none;
        padding-inline-start: calc(0.25rem * 3);
        padding-inline-end: calc(0.25rem * 7);
        height: calc(100% - calc(var(--border) * 2));
        align-items: center;
        background: inherit;
        border-radius: inherit;
        border-style: none;
        &:focus, &:focus-within {
          --tw-outline-style: none;
          outline-style: none;
          @media (forced-colors: active) {
            outline: 2px solid transparent;
            outline-offset: 2px;
          }
        }
        &:not(:last-child) {
          margin-inline-end: calc(0.25rem * -5.5);
          background-image: none;
        }
      }
      &:focus, &:focus-within {
        --input-color: var(--color-base-content);
        box-shadow: 0 1px var(--input-color);
        @supports (color: color-mix(in lab, red, red)) {
          box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
        }
        outline: 2px solid var(--input-color);
        outline-offset: 2px;
        isolation: isolate;
        z-index: 1;
      }
      &:has(> select[disabled]), &:is(:disabled, [disabled]), fieldset:disabled & {
        cursor: not-allowed;
        border-color: var(--color-base-200);
        background-color: var(--color-base-200);
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
        }
        &::placeholder {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
          }
        }
      }
      &:has(> select[disabled]) > select[disabled] {
        cursor: not-allowed;
      }
      &, & select {
        @supports (appearance: base-select) {
          appearance: base-select;
        }
        @supports (appearance: base-select) {
          &::picker(select) {
            appearance: base-select;
          }
        }
        &::picker(select) {
          color: inherit;
          max-height: min(24rem, 70dvh);
          margin-inline: 0.5rem;
          translate: -0.5rem 0;
          border: var(--border) solid var(--color-base-200);
          margin-block: calc(0.25rem * 2);
          border-radius: var(--radius-box);
          padding: calc(0.25rem * 2);
          background-color: inherit;
          box-shadow: 0 2px calc(var(--depth) * 3px) -2px oklch(0% 0 0/0.2);
          box-shadow: 0 20px 25px -5px rgb(0 0 0 / calc(var(--depth) * 0.1)), 0 8px 10px -6px rgb(0 0 0 / calc(var(--depth) * 0.1));
        }
        &::picker-icon {
          display: none;
        }
        optgroup {
          padding-top: 0.5em;
          option {
            &:nth-child(1) {
              margin-top: 0.5em;
            }
          }
        }
        option {
          border-radius: var(--radius-field);
          padding-inline: calc(0.25rem * 3);
          padding-block: calc(0.25rem * 1.5);
          transition-property: color, background-color;
          transition-duration: 0.2s;
          transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
          white-space: normal;
          &:not(:disabled) {
            &:hover, &:focus-visible {
              cursor: pointer;
              background-color: var(--color-base-content);
              @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
              }
              --tw-outline-style: none;
              outline-style: none;
              @media (forced-colors: active) {
                outline: 2px solid transparent;
                outline-offset: 2px;
              }
            }
            &:active {
              background-color: var(--color-neutral);
              color: var(--color-neutral-content);
              box-shadow: 0 2px calc(var(--depth) * 3px) -2px var(--color-neutral);
            }
          }
        }
      }
    }
  }
  .diff-resizer {
    @layer daisyui.component {
      position: relative;
      z-index: 1;
      grid-column-start: 1;
      grid-row-start: 2;
      height: calc(0.25rem * 4);
      width: 50cqi;
      max-width: calc(100cqi - 1rem);
      min-width: 1rem;
      resize: horizontal;
      overflow: hidden;
      opacity: 0%;
      transform: scaleY(3) translate(0.35rem, 0.35rem);
      cursor: ew-resize;
      transform-origin: 100% 100%;
      clip-path: inset(calc(100% - 0.75rem) 0 0 calc(100% - 0.75rem));
      transition: min-width 0.3s ease-out, max-width 0.3s ease-out;
    }
  }
  .timeline {
    @layer daisyui.component {
      position: relative;
      display: flex;
      > li {
        position: relative;
        display: grid;
        flex-shrink: 0;
        align-items: center;
        grid-template-rows: var(--timeline-row-start, minmax(0, 1fr)) auto var( --timeline-row-end, minmax(0, 1fr) );
        grid-template-columns: var(--timeline-col-start, minmax(0, 1fr)) auto var( --timeline-col-end, minmax(0, 1fr) );
        > hr {
          border: none;
          width: 100%;
          &:first-child {
            grid-column-start: 1;
            grid-row-start: 2;
          }
          &:last-child {
            grid-column-start: 3;
            grid-column-end: none;
            grid-row-start: 2;
            grid-row-end: auto;
          }
          @media print {
            border: 0.1px solid var(--color-base-300);
          }
        }
      }
      :where(hr) {
        height: calc(0.25rem * 1);
        background-color: var(--color-base-300);
      }
      &:has(.timeline-middle hr) {
        &:first-child {
          border-start-start-radius: 0;
          border-end-start-radius: 0;
          border-start-end-radius: var(--radius-selector);
          border-end-end-radius: var(--radius-selector);
        }
        &:last-child {
          border-start-start-radius: var(--radius-selector);
          border-end-start-radius: var(--radius-selector);
          border-start-end-radius: 0;
          border-end-end-radius: 0;
        }
      }
      &:not(:has(.timeline-middle)) {
        :first-child hr:last-child {
          border-start-start-radius: var(--radius-selector);
          border-end-start-radius: var(--radius-selector);
          border-start-end-radius: 0;
          border-end-end-radius: 0;
        }
        :last-child hr:first-child {
          border-start-start-radius: 0;
          border-end-start-radius: 0;
          border-start-end-radius: var(--radius-selector);
          border-end-end-radius: var(--radius-selector);
        }
      }
    }
  }
  .image-full {
    @layer daisyui.modifier {
      display: grid;
      > * {
        grid-column-start: 1;
        grid-row-start: 1;
      }
      > .card-body {
        position: relative;
        color: var(--color-neutral-content);
      }
      :where(figure) {
        overflow: hidden;
        border-radius: inherit;
      }
      > figure img {
        height: 100%;
        object-fit: cover;
        filter: brightness(28%);
      }
    }
  }
  .swap {
    @layer daisyui.component {
      position: relative;
      display: inline-grid;
      cursor: pointer;
      place-content: center;
      vertical-align: middle;
      webkit-user-select: none;
      user-select: none;
      input {
        appearance: none;
        border: none;
      }
      > * {
        grid-column-start: 1;
        grid-row-start: 1;
        @media (prefers-reduced-motion: no-preference) {
          transition-property: transform, rotate, opacity;
          transition-duration: 0.2s;
          transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
        }
      }
      .swap-on, .swap-indeterminate, input:indeterminate ~ .swap-on {
        opacity: 0%;
      }
      input:is(:checked, :indeterminate) {
        & ~ .swap-off {
          opacity: 0%;
        }
      }
      input:checked ~ .swap-on, input:indeterminate ~ .swap-indeterminate {
        opacity: 100%;
        backface-visibility: visible;
      }
    }
  }
  .collapse-title {
    @layer daisyui.component {
      grid-column-start: 1;
      grid-row-start: 1;
    }
    @layer daisyui.component {
      position: relative;
      width: 100%;
      padding: 1rem;
      padding-inline-end: 3rem;
      min-height: 1lh;
      transition: background-color 0.2s ease-out;
    }
  }
  .mockup-browser {
    @layer daisyui.component {
      position: relative;
      overflow: hidden;
      overflow-x: auto;
      border-radius: var(--radius-box);
      pre[data-prefix] {
        &:before {
          --tw-content: attr(data-prefix);
          content: var(--tw-content);
          display: inline-block;
          text-align: right;
        }
      }
      .mockup-browser-toolbar {
        margin-block: calc(0.25rem * 3);
        display: inline-flex;
        width: 100%;
        align-items: center;
        padding-right: 1.4em;
        &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
          flex-direction: row-reverse;
        }
        &:before {
          content: "";
          margin-right: 4.8rem;
          display: inline-block;
          aspect-ratio: 1 / 1;
          height: calc(0.25rem * 3);
          border-radius: calc(infinity * 1px);
          opacity: 30%;
          box-shadow: 1.4em 0, 2.8em 0, 4.2em 0;
        }
        .input {
          margin-inline: auto;
          display: flex;
          height: 100%;
          align-items: center;
          gap: calc(0.25rem * 2);
          overflow: hidden;
          background-color: var(--color-base-200);
          text-overflow: ellipsis;
          white-space: nowrap;
          font-size: 0.75rem;
          direction: ltr;
          &:before {
            content: "";
            width: calc(0.25rem * 4);
            height: calc(0.25rem * 4);
            opacity: 50%;
            background-color: currentColor;
            mask: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath fill-rule='evenodd' d='M9.965 11.026a5 5 0 1 1 1.06-1.06l2.755 2.754a.75.75 0 1 1-1.06 1.06l-2.755-2.754ZM10.5 7a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0Z' clip-rule='evenodd' /%3E%3C/svg%3E") no-repeat center;
            mask-size: contain;
          }
        }
      }
    }
  }
  .menu-horizontal {
    @layer daisyui.modifier {
      display: inline-flex;
      flex-direction: row;
      & > li:not(.menu-title) > details > ul {
        position: absolute;
        margin-inline-start: calc(0.25rem * 0);
        margin-top: calc(0.25rem * 4);
        padding-block: calc(0.25rem * 2);
        padding-inline-end: calc(0.25rem * 2);
      }
      & > li > details > ul {
        &:before {
          --tw-content: none;
          content: var(--tw-content);
        }
      }
      :where(& > li:not(.menu-title) > details > ul) {
        border-radius: var(--radius-box);
        background-color: var(--color-base-100);
        box-shadow: 0 1px 3px 0 oklch(0% 0 0/0.1), 0 1px 2px -1px oklch(0% 0 0/0.1);
      }
    }
  }
  .menu-vertical {
    @layer daisyui.modifier {
      display: inline-flex;
      flex-direction: column;
      & > li:not(.menu-title) > details > ul {
        position: relative;
        margin-inline-start: calc(0.25rem * 4);
        margin-top: calc(0.25rem * 0);
        padding-block: calc(0.25rem * 0);
        padding-inline-end: calc(0.25rem * 0);
      }
    }
  }
  .mockup-code {
    @layer daisyui.component {
      position: relative;
      overflow: hidden;
      overflow-x: auto;
      border-radius: var(--radius-box);
      background-color: var(--color-neutral);
      padding-block: calc(0.25rem * 5);
      color: var(--color-neutral-content);
      font-size: 0.875rem;
      direction: ltr;
      &:before {
        content: "";
        margin-bottom: calc(0.25rem * 4);
        display: block;
        height: calc(0.25rem * 3);
        width: calc(0.25rem * 3);
        border-radius: calc(infinity * 1px);
        opacity: 30%;
        box-shadow: 1.4em 0, 2.8em 0, 4.2em 0;
      }
      pre {
        padding-right: calc(0.25rem * 5);
        &:before {
          content: "";
          margin-right: 2ch;
        }
        &[data-prefix] {
          &:before {
            --tw-content: attr(data-prefix);
            content: var(--tw-content);
            display: inline-block;
            width: calc(0.25rem * 8);
            text-align: right;
            opacity: 50%;
          }
        }
      }
    }
  }
  .mockup-window {
    @layer daisyui.component {
      position: relative;
      display: flex;
      flex-direction: column;
      overflow: hidden;
      overflow-x: auto;
      border-radius: var(--radius-box);
      padding-top: calc(0.25rem * 5);
      &:before {
        content: "";
        margin-bottom: calc(0.25rem * 4);
        display: block;
        aspect-ratio: 1 / 1;
        height: calc(0.25rem * 3);
        flex-shrink: 0;
        align-self: flex-start;
        border-radius: calc(infinity * 1px);
        opacity: 30%;
        box-shadow: 1.4em 0, 2.8em 0, 4.2em 0;
      }
      [dir="rtl"] &:before {
        align-self: flex-end;
      }
      pre[data-prefix] {
        &:before {
          --tw-content: attr(data-prefix);
          content: var(--tw-content);
          display: inline-block;
          text-align: right;
        }
      }
    }
  }
  .avatar {
    @layer daisyui.component {
      position: relative;
      display: inline-flex;
      vertical-align: middle;
      & > div {
        display: block;
        aspect-ratio: 1 / 1;
        overflow: hidden;
      }
      img {
        height: 100%;
        width: 100%;
        object-fit: cover;
      }
    }
  }
  .checkbox {
    @layer daisyui.component {
      border: var(--border) solid var(--input-color, var(--color-base-content));
      @supports (color: color-mix(in lab, red, red)) {
        border: var(--border) solid var(--input-color, color-mix(in oklab, var(--color-base-content) 20%, #0000));
      }
      position: relative;
      display: inline-block;
      flex-shrink: 0;
      cursor: pointer;
      appearance: none;
      border-radius: var(--radius-selector);
      padding: calc(0.25rem * 1);
      vertical-align: middle;
      color: var(--color-base-content);
      box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 0 #0000 inset, 0 0 #0000;
      transition: background-color 0.2s, box-shadow 0.2s;
      --size: calc(var(--size-selector, 0.25rem) * 6);
      width: var(--size);
      height: var(--size);
      background-size: auto, calc(var(--noise) * 100%);
      background-image: none, var(--fx-noise);
      &:before {
        --tw-content: "";
        content: var(--tw-content);
        display: block;
        width: 100%;
        height: 100%;
        rotate: 45deg;
        background-color: currentcolor;
        opacity: 0%;
        transition: clip-path 0.3s, opacity 0.1s, rotate 0.3s, translate 0.3s;
        transition-delay: 0.1s;
        clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 70% 80%, 70% 100%);
        box-shadow: 0px 3px 0 0px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
        font-size: 1rem;
        line-height: 0.75;
      }
      &:focus-visible {
        outline: 2px solid var(--input-color, currentColor);
        outline-offset: 2px;
      }
      &:checked, &[aria-checked="true"] {
        background-color: var(--input-color, #0000);
        box-shadow: 0 0 #0000 inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));
        &:before {
          clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 0%, 70% 0%, 70% 100%);
          opacity: 100%;
        }
        @media (forced-colors: active) {
          &:before {
            rotate: 0deg;
            background-color: transparent;
            --tw-content: "✔︎";
            clip-path: none;
          }
        }
        @media print {
          &:before {
            rotate: 0deg;
            background-color: transparent;
            --tw-content: "✔︎";
            clip-path: none;
          }
        }
      }
      &:indeterminate {
        background-color: var( --input-color, var(--color-base-content) );
        @supports (color: color-mix(in lab, red, red)) {
          background-color: var( --input-color, color-mix(in oklab, var(--color-base-content) 20%, #0000) );
        }
        &:before {
          rotate: 0deg;
          opacity: 100%;
          translate: 0 -35%;
          clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 80% 80%, 80% 100%);
        }
      }
    }
    &:disabled {
      @layer daisyui.modifier {
        cursor: not-allowed;
        opacity: 20%;
      }
    }
  }
  .radio {
    @layer daisyui.component {
      position: relative;
      display: inline-block;
      flex-shrink: 0;
      cursor: pointer;
      appearance: none;
      border-radius: calc(infinity * 1px);
      padding: calc(0.25rem * 1);
      vertical-align: middle;
      border: var(--border) solid var(--input-color, currentColor);
      @supports (color: color-mix(in lab, red, red)) {
        border: var(--border) solid var(--input-color, color-mix(in srgb, currentColor 20%, #0000));
      }
      box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset;
      --size: calc(var(--size-selector, 0.25rem) * 6);
      width: var(--size);
      height: var(--size);
      color: var(--input-color, currentColor);
      &:before {
        display: block;
        width: 100%;
        height: 100%;
        border-radius: calc(infinity * 1px);
        --tw-content: "";
        content: var(--tw-content);
        background-size: auto, calc(var(--noise) * 100%);
        background-image: none, var(--fx-noise);
      }
      &:focus-visible {
        outline: 2px solid currentColor;
      }
      &:checked, &[aria-checked="true"] {
        border-color: currentcolor;
        background-color: var(--color-base-100);
        @media (prefers-reduced-motion: no-preference) {
          animation: radio 0.2s ease-out;
        }
        &:before {
          background-color: currentcolor;
          box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));
        }
        @media (forced-colors: active) {
          &:before {
            outline-style: var(--tw-outline-style);
            outline-width: 1px;
            outline-offset: calc(1px * -1);
          }
        }
        @media print {
          &:before {
            outline: 0.25rem solid;
            outline-offset: -1rem;
          }
        }
      }
    }
    &:disabled {
      @layer daisyui.modifier {
        cursor: not-allowed;
        opacity: 20%;
      }
    }
  }
  .rating {
    @layer daisyui.component {
      position: relative;
      display: inline-flex;
      vertical-align: middle;
      & input {
        border: none;
        appearance: none;
      }
      :where(*) {
        height: calc(0.25rem * 6);
        width: calc(0.25rem * 6);
        border-radius: 0;
        background-color: var(--color-base-content);
        opacity: 20%;
        @media (prefers-reduced-motion: no-preference) {
          animation: rating 0.25s ease-out;
        }
        &:is(input) {
          cursor: pointer;
        }
      }
      & .rating-hidden {
        width: calc(0.25rem * 2);
        background-color: transparent;
      }
      input[type="radio"]:checked {
        background-image: none;
      }
      * {
        &:checked, &[aria-checked="true"], &[aria-current="true"], &:has(~ *:checked, ~ *[aria-checked="true"], ~ *[aria-current="true"]) {
          opacity: 100%;
        }
        &:focus-visible {
          scale: 1.1;
          @media (prefers-reduced-motion: no-preference) {
            transition: scale 0.2s ease-out;
          }
        }
      }
      & *:active:focus {
        animation: none;
        scale: 1.1;
      }
    }
    @layer daisyui.modifier {
      &.rating-xs :where(*:not(.rating-hidden)) {
        width: calc(0.25rem * 4);
        height: calc(0.25rem * 4);
      }
      &.rating-sm :where(*:not(.rating-hidden)) {
        width: calc(0.25rem * 5);
        height: calc(0.25rem * 5);
      }
      &.rating-md :where(*:not(.rating-hidden)) {
        width: calc(0.25rem * 6);
        height: calc(0.25rem * 6);
      }
      &.rating-lg :where(*:not(.rating-hidden)) {
        width: calc(0.25rem * 7);
        height: calc(0.25rem * 7);
      }
      &.rating-xl :where(*:not(.rating-hidden)) {
        width: calc(0.25rem * 8);
        height: calc(0.25rem * 8);
      }
    }
  }
  .navbar {
    @layer daisyui.component {
      display: flex;
      width: 100%;
      align-items: center;
      padding: 0.5rem;
      min-height: 4rem;
    }
    :where(&) {
      @layer daisyui.modifier {
        position: relative;
      }
    }
  }
  .drawer {
    @layer daisyui.component {
      position: relative;
      display: grid;
      width: 100%;
      grid-auto-columns: max-content auto;
    }
  }
  .card {
    @layer daisyui.component {
      position: relative;
      display: flex;
      flex-direction: column;
      border-radius: var(--radius-box);
      outline-width: 2px;
      transition: outline 0.2s ease-in-out;
      outline: 0 solid #0000;
      outline-offset: 2px;
      &:focus {
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
      }
      &:focus-visible {
        outline-color: currentColor;
      }
      :where(figure:first-child) {
        overflow: hidden;
        border-start-start-radius: inherit;
        border-start-end-radius: inherit;
        border-end-start-radius: unset;
        border-end-end-radius: unset;
      }
      :where(figure:last-child) {
        overflow: hidden;
        border-start-start-radius: unset;
        border-start-end-radius: unset;
        border-end-start-radius: inherit;
        border-end-end-radius: inherit;
      }
      figure {
        display: flex;
        align-items: center;
        justify-content: center;
      }
      &:has(> input:is(input[type="checkbox"], input[type="radio"])) {
        cursor: pointer;
        user-select: none;
      }
      &:has(> :checked) {
        outline: 2px solid currentColor;
      }
    }
  }
  .stats {
    @layer daisyui.component {
      position: relative;
      display: inline-grid;
      grid-auto-flow: column;
      overflow-x: auto;
      border-radius: var(--radius-box);
    }
  }
  .slider {
    overflow: hidden;
    contain: layout;
    position: relative;
    aspect-ratio: var(--slider-mobile-aspect);
    clip-path: var(--slider-mobile-clip);
    @media (width >= 48rem) {
      max-height: 700px;
      contain-intrinsic-height: 700px;
      content-visibility: auto;
      aspect-ratio: var(--slider-desktop-aspect);
      transform: translate3d(0, 0, 0);
      clip-path: var(--slider-desktop-clip);
    }
  }
  .progress {
    @layer daisyui.component {
      position: relative;
      height: calc(0.25rem * 2);
      width: 100%;
      appearance: none;
      overflow: hidden;
      border-radius: var(--radius-box);
      background-color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, currentcolor 20%, transparent);
      }
      color: var(--color-base-content);
      &:indeterminate {
        background-image: repeating-linear-gradient( 90deg, currentColor -1%, currentColor 10%, #0000 10%, #0000 90% );
        background-size: 200%;
        background-position-x: 15%;
        @media (prefers-reduced-motion: no-preference) {
          animation: progress 5s ease-in-out infinite;
        }
        @supports (-moz-appearance: none) {
          &::-moz-progress-bar {
            background-color: transparent;
            @media (prefers-reduced-motion: no-preference) {
              animation: progress 5s ease-in-out infinite;
              background-image: repeating-linear-gradient( 90deg, currentColor -1%, currentColor 10%, #0000 10%, #0000 90% );
              background-size: 200%;
              background-position-x: 15%;
            }
          }
        }
      }
      @supports (-moz-appearance: none) {
        &::-moz-progress-bar {
          border-radius: var(--radius-box);
          background-color: currentcolor;
        }
      }
      @supports (-webkit-appearance: none) {
        &::-webkit-progress-bar {
          border-radius: var(--radius-box);
          background-color: transparent;
        }
        &::-webkit-progress-value {
          border-radius: var(--radius-box);
          background-color: currentColor;
        }
      }
    }
  }
  .modal-toggle {
    @layer daisyui.component {
      position: fixed;
      height: calc(0.25rem * 0);
      width: calc(0.25rem * 0);
      appearance: none;
      opacity: 0%;
    }
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .sticky {
    position: sticky;
  }
  .tooltip-bottom {
    @layer daisyui.modifier {
      > .tooltip-content, &[data-tip]:before {
        transform: translateX(-50%) translateY(var(--tt-pos, -0.25rem));
        inset: var(--tt-off) auto auto 50%;
      }
      &:after {
        transform: translateX(-50%) translateY(var(--tt-pos, -0.25rem)) rotate(180deg);
        inset: var(--tt-tail) auto auto 50%;
      }
    }
  }
  .tooltip-left {
    @layer daisyui.modifier {
      > .tooltip-content, &[data-tip]:before {
        transform: translateX(calc(var(--tt-pos, 0.25rem) - 0.25rem)) translateY(-50%);
        inset: 50% var(--tt-off) auto auto;
      }
      &:after {
        transform: translateX(var(--tt-pos, 0.25rem)) translateY(-50%) rotate(-90deg);
        inset: 50% calc(var(--tt-tail) + 1px) auto auto;
      }
    }
  }
  .tooltip-right {
    @layer daisyui.modifier {
      > .tooltip-content, &[data-tip]:before {
        transform: translateX(calc(var(--tt-pos, -0.25rem) + 0.25rem)) translateY(-50%);
        inset: 50% auto auto var(--tt-off);
      }
      &:after {
        transform: translateX(var(--tt-pos, -0.25rem)) translateY(-50%) rotate(90deg);
        inset: 50% auto auto calc(var(--tt-tail) + 1px);
      }
    }
  }
  .tooltip-top {
    @layer daisyui.modifier {
      > .tooltip-content, &[data-tip]:before {
        transform: translateX(-50%) translateY(var(--tt-pos, 0.25rem));
        inset: auto auto var(--tt-off) 50%;
      }
      &:after {
        transform: translateX(-50%) translateY(var(--tt-pos, 0.25rem));
        inset: auto auto var(--tt-tail) 50%;
      }
    }
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .inset-0\.5 {
    inset: calc(var(--spacing) * 0.5);
  }
  .inset-0\.75 {
    inset: calc(var(--spacing) * 0.75);
  }
  .toast-center {
    @layer daisyui.modifier {
      inset-inline-start: calc(1/2 * 100%);
      inset-inline-end: calc(1/2 * 100%);
      --toast-x: -50%;
    }
  }
  .toast-end {
    @layer daisyui.modifier {
      inset-inline-start: auto;
      inset-inline-end: calc(0.25rem * 4);
      --toast-x: 0;
    }
  }
  .toast-start {
    @layer daisyui.modifier {
      inset-inline-start: calc(0.25rem * 4);
      inset-inline-end: auto;
      --toast-x: 0;
    }
  }
  .dropdown-right {
    @layer daisyui.modifier {
      --anchor-h: right;
      --anchor-v: span-bottom;
      .dropdown-content {
        inset-inline-start: 100%;
        top: calc(0.25rem * 0);
        bottom: auto;
        transform-origin: 0;
      }
    }
  }
  .chat-end {
    @layer daisyui.modifier {
      place-items: end;
      grid-template-columns: 1fr auto;
      .chat-header {
        grid-column-start: 1;
      }
      .chat-footer {
        grid-column-start: 1;
      }
      .chat-image {
        grid-column-start: 2;
      }
      .chat-bubble {
        grid-column-start: 1;
        border-end-end-radius: 0;
        &:before {
          transform: rotateY(180deg);
          inset-inline-start: 100%;
        }
        [dir="rtl"] &:before {
          transform: rotateY(0deg);
        }
      }
    }
  }
  .chat-start {
    @layer daisyui.modifier {
      place-items: start;
      grid-template-columns: auto 1fr;
      .chat-header {
        grid-column-start: 2;
      }
      .chat-footer {
        grid-column-start: 2;
      }
      .chat-image {
        grid-column-start: 1;
      }
      .chat-bubble {
        grid-column-start: 2;
        border-end-start-radius: 0;
        &:before {
          transform: rotateY(0deg);
          inset-inline-start: -0.75rem;
        }
        [dir="rtl"] &:before {
          transform: rotateY(180deg);
        }
      }
    }
  }
  .dropdown-left {
    @layer daisyui.modifier {
      --anchor-h: left;
      --anchor-v: span-bottom;
      .dropdown-content {
        inset-inline-end: 100%;
        top: calc(0.25rem * 0);
        bottom: auto;
        transform-origin: 100%;
      }
    }
  }
  .dropdown-center {
    @layer daisyui.modifier {
      --anchor-h: center;
      :where(.dropdown-content) {
        inset-inline-end: calc(1/2 * 100%);
        translate: 50% 0;
        [dir="rtl"] & {
          translate: -50% 0;
        }
      }
      &.dropdown-left {
        --anchor-h: left;
        --anchor-v: center;
        .dropdown-content {
          top: auto;
          bottom: calc(1/2 * 100%);
          translate: 0 50%;
        }
      }
      &.dropdown-right {
        --anchor-h: right;
        --anchor-v: center;
        .dropdown-content {
          top: auto;
          bottom: calc(1/2 * 100%);
          translate: 0 50%;
        }
      }
    }
  }
  .dropdown-end {
    @layer daisyui.modifier {
      --anchor-h: span-left;
      :where(.dropdown-content) {
        inset-inline-end: calc(0.25rem * 0);
        translate: 0 0;
        [dir="rtl"] & {
          translate: 0 0;
        }
      }
      &.dropdown-left {
        --anchor-h: left;
        --anchor-v: span-top;
        .dropdown-content {
          top: auto;
          bottom: calc(0.25rem * 0);
        }
      }
      &.dropdown-right {
        --anchor-h: right;
        --anchor-v: span-top;
        .dropdown-content {
          top: auto;
          bottom: calc(0.25rem * 0);
        }
      }
    }
  }
  .dropdown-start {
    @layer daisyui.modifier {
      --anchor-h: span-right;
      :where(.dropdown-content) {
        inset-inline-end: auto;
        translate: 0 0;
        [dir="rtl"] & {
          translate: 0 0;
        }
      }
      &.dropdown-left {
        --anchor-h: left;
        --anchor-v: span-bottom;
        .dropdown-content {
          top: calc(0.25rem * 0);
          bottom: auto;
        }
      }
      &.dropdown-right {
        --anchor-h: right;
        --anchor-v: span-bottom;
        .dropdown-content {
          top: calc(0.25rem * 0);
          bottom: auto;
        }
      }
    }
  }
  .dropdown-bottom {
    @layer daisyui.modifier {
      --anchor-v: bottom;
      .dropdown-content {
        top: 100%;
        bottom: auto;
        transform-origin: top;
      }
    }
  }
  .dropdown-top {
    @layer daisyui.modifier {
      --anchor-v: top;
      .dropdown-content {
        top: auto;
        bottom: 100%;
        transform-origin: bottom;
      }
    }
  }
  .toast-bottom {
    @layer daisyui.modifier {
      top: auto;
      bottom: calc(0.25rem * 4);
      --toast-y: 0;
    }
  }
  .toast-middle {
    @layer daisyui.modifier {
      top: calc(1/2 * 100%);
      bottom: auto;
      --toast-y: -50%;
    }
  }
  .toast-top {
    @layer daisyui.modifier {
      top: calc(0.25rem * 4);
      bottom: auto;
      --toast-y: 0;
    }
  }
  .-top-6 {
    top: calc(var(--spacing) * -6);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-1\/2 {
    top: calc(1/2 * 100%);
  }
  .top-3\/5 {
    top: calc(3/5 * 100%);
  }
  .top-4 {
    top: calc(var(--spacing) * 4);
  }
  .top-4\/9 {
    top: calc(4/9 * 100%);
  }
  .top-5 {
    top: calc(var(--spacing) * 5);
  }
  .top-\[2\.75rem\] {
    top: 2.75rem;
  }
  .-right-6 {
    right: calc(var(--spacing) * -6);
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .right-1\.5 {
    right: calc(var(--spacing) * 1.5);
  }
  .right-4 {
    right: calc(var(--spacing) * 4);
  }
  .right-5 {
    right: calc(var(--spacing) * 5);
  }
  .dock-sm {
    @layer daisyui.modifier {
      height: calc(0.25rem * 14);
      height: 3.5rem;
      height: calc(3.5rem + env(safe-area-inset-bottom));
      .dock-active {
        &:after {
          bottom: -0.1rem;
        }
      }
      .dock-label {
        font-size: 0.625rem;
      }
    }
  }
  .dock-lg {
    @layer daisyui.modifier {
      height: 4.5rem;
      height: calc(4.5rem + env(safe-area-inset-bottom));
      .dock-active {
        &:after {
          bottom: 0.4rem;
        }
      }
      .dock-label {
        font-size: 0.6875rem;
      }
    }
  }
  .dock-xl {
    @layer daisyui.modifier {
      height: 5rem;
      height: calc(5rem + env(safe-area-inset-bottom));
      .dock-active {
        &:after {
          bottom: 0.4rem;
        }
      }
      .dock-label {
        font-size: 0.75rem;
      }
    }
  }
  .dock-xs {
    @layer daisyui.modifier {
      height: 3rem;
      height: calc(3rem + env(safe-area-inset-bottom));
      .dock-active {
        &:after {
          bottom: -0.1rem;
        }
      }
      .dock-label {
        font-size: 0.625rem;
      }
    }
  }
  .-bottom-6 {
    bottom: calc(var(--spacing) * -6);
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .bottom-5 {
    bottom: calc(var(--spacing) * 5);
  }
  .-left-6 {
    left: calc(var(--spacing) * -6);
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-1\.5 {
    left: calc(var(--spacing) * 1.5);
  }
  .file-input {
    @layer daisyui.component {
      cursor: pointer;
      cursor: pointer;
      border: var(--border) solid #0000;
      display: inline-flex;
      appearance: none;
      align-items: center;
      background-color: var(--color-base-100);
      vertical-align: middle;
      webkit-user-select: none;
      user-select: none;
      width: clamp(3rem, 20rem, 100%);
      height: var(--size);
      padding-inline-end: 0.75rem;
      font-size: 0.875rem;
      line-height: 2;
      border-start-start-radius: var(--join-ss, var(--radius-field));
      border-start-end-radius: var(--join-se, var(--radius-field));
      border-end-start-radius: var(--join-es, var(--radius-field));
      border-end-end-radius: var(--join-ee, var(--radius-field));
      border-color: var(--input-color);
      box-shadow: 0 1px var(--input-color) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
      }
      --size: calc(var(--size-field, 0.25rem) * 10);
      --input-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
      }
      &::file-selector-button {
        margin-inline-end: calc(0.25rem * 4);
        cursor: pointer;
        padding-inline: calc(0.25rem * 4);
        webkit-user-select: none;
        user-select: none;
        height: calc(100% + var(--border) * 2);
        margin-block: calc(var(--border) * -1);
        margin-inline-start: calc(var(--border) * -1);
        font-size: 0.875rem;
        color: var(--btn-fg);
        border-width: var(--border);
        border-style: solid;
        border-color: var(--btn-border);
        border-start-start-radius: calc(var(--join-ss, var(--radius-field) - var(--border)));
        border-end-start-radius: calc(var(--join-es, var(--radius-field) - var(--border)));
        font-weight: 600;
        background-color: var(--btn-bg);
        background-size: calc(var(--noise) * 100%);
        background-image: var(--btn-noise);
        text-shadow: 0 0.5px oklch(1 0 0 / calc(var(--depth) * 0.15));
        box-shadow: 0 0.5px 0 0.5px white inset, var(--btn-shadow);
        @supports (color: color-mix(in lab, red, red)) {
          box-shadow: 0 0.5px 0 0.5px color-mix( in oklab, color-mix(in oklab, white 30%, var(--btn-bg)) calc(var(--depth) * 20%), #0000 ) inset, var(--btn-shadow);
        }
        --size: calc(var(--size-field, 0.25rem) * 10);
        --btn-bg: var(--btn-color, var(--color-base-200));
        --btn-fg: var(--color-base-content);
        --btn-border: var(--btn-bg);
        @supports (color: color-mix(in lab, red, red)) {
          --btn-border: color-mix(in oklab, var(--btn-bg), #000 5%);
        }
        --btn-shadow: 0 3px 2px -2px var(--btn-bg),
        0 4px 3px -2px var(--btn-bg);
        @supports (color: color-mix(in lab, red, red)) {
          --btn-shadow: 0 3px 2px -2px color-mix(in oklab, var(--btn-bg) 30%, #0000),
        0 4px 3px -2px color-mix(in oklab, var(--btn-bg) 30%, #0000);
        }
        --btn-noise: var(--fx-noise);
      }
      &:focus {
        --input-color: var(--color-base-content);
        box-shadow: 0 1px var(--input-color);
        @supports (color: color-mix(in lab, red, red)) {
          box-shadow: 0 1px color-mix(in oklab, var(--input-color) 10%, #0000);
        }
        outline: 2px solid var(--input-color);
        outline-offset: 2px;
        isolation: isolate;
      }
      &:has(> input[disabled]), &:is(:disabled, [disabled]) {
        cursor: not-allowed;
        border-color: var(--color-base-200);
        background-color: var(--color-base-200);
        &::placeholder {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
          }
        }
        box-shadow: none;
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklch, var(--color-base-content) 20%, #0000);
        }
        &::file-selector-button {
          cursor: not-allowed;
          border-color: var(--color-base-200);
          background-color: var(--color-base-200);
          --btn-border: #0000;
          --btn-noise: none;
          --btn-fg: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
          }
        }
      }
    }
  }
  .hero-content {
    @layer daisyui.component {
      isolation: isolate;
      display: flex;
      max-width: 80rem;
      align-items: center;
      justify-content: center;
      gap: calc(0.25rem * 4);
      padding: calc(0.25rem * 4);
    }
  }
  .textarea {
    @layer daisyui.component {
      border: var(--border) solid #0000;
      min-height: calc(0.25rem * 20);
      flex-shrink: 1;
      appearance: none;
      border-radius: var(--radius-field);
      background-color: var(--color-base-100);
      padding-block: calc(0.25rem * 2);
      vertical-align: middle;
      width: clamp(3rem, 20rem, 100%);
      padding-inline-start: 0.75rem;
      padding-inline-end: 0.75rem;
      font-size: max(var(--font-size, 0.875rem), 0.875rem);
      touch-action: manipulation;
      border-color: var(--input-color);
      box-shadow: 0 1px var(--input-color) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
      }
      --input-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
      }
      textarea {
        appearance: none;
        background-color: transparent;
        border: none;
        &:focus, &:focus-within {
          --tw-outline-style: none;
          outline-style: none;
          @media (forced-colors: active) {
            outline: 2px solid transparent;
            outline-offset: 2px;
          }
        }
      }
      &:focus, &:focus-within {
        --input-color: var(--color-base-content);
        box-shadow: 0 1px var(--input-color);
        @supports (color: color-mix(in lab, red, red)) {
          box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
        }
        outline: 2px solid var(--input-color);
        outline-offset: 2px;
        isolation: isolate;
      }
      @media (pointer: coarse) {
        @supports (-webkit-touch-callout: none) {
          &:focus, &:focus-within {
            --font-size: 1rem;
          }
        }
      }
      &:has(> textarea[disabled]), &:is(:disabled, [disabled]) {
        cursor: not-allowed;
        border-color: var(--color-base-200);
        background-color: var(--color-base-200);
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
        }
        &::placeholder {
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
          }
        }
        box-shadow: none;
      }
      &:has(> textarea[disabled]) > textarea[disabled] {
        cursor: not-allowed;
      }
    }
  }
  .btn-active {
    @layer daisyui.modifier {
      --btn-bg: var(--btn-color, var(--color-base-200));
      @supports (color: color-mix(in lab, red, red)) {
        --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
      }
      --btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
      isolation: isolate;
    }
  }
  .isolate {
    isolation: isolate;
  }
  .mockup-phone-camera {
    @layer daisyui.component {
      grid-column: 1/1;
      grid-row: 1/1;
      background: #000;
      height: 3.7%;
      width: 28%;
      border-radius: 17px;
      z-index: 1;
      margin-top: 3%;
    }
  }
  .stack {
    @layer daisyui.component {
      display: inline-grid;
      grid-template-columns: 3px 4px 1fr 4px 3px;
      grid-template-rows: 3px 4px 1fr 4px 3px;
      & > * {
        height: 100%;
        width: 100%;
        &:nth-child(n + 2) {
          width: 100%;
          opacity: 70%;
        }
        &:nth-child(2) {
          z-index: 2;
          opacity: 90%;
        }
        &:nth-child(1) {
          z-index: 3;
          width: 100%;
        }
      }
    }
    @layer daisyui.modifier {
      &, &.stack-bottom {
        > * {
          grid-column: 3 / 4;
          grid-row: 3 / 6;
          &:nth-child(2) {
            grid-column: 2 / 5;
            grid-row: 2 / 5;
          }
          &:nth-child(1) {
            grid-column: 1 / 6;
            grid-row: 1 / 4;
          }
        }
      }
      &.stack-top {
        > * {
          grid-column: 3 / 4;
          grid-row: 1 / 4;
          &:nth-child(2) {
            grid-column: 2 / 5;
            grid-row: 2 / 5;
          }
          &:nth-child(1) {
            grid-column: 1 / 6;
            grid-row: 3 / 6;
          }
        }
      }
      &.stack-start {
        > * {
          grid-column: 1 / 4;
          grid-row: 3 / 4;
          &:nth-child(2) {
            grid-column: 2 / 5;
            grid-row: 2 / 5;
          }
          &:nth-child(1) {
            grid-column: 3 / 6;
            grid-row: 1 / 6;
          }
        }
      }
      &.stack-end {
        > * {
          grid-column: 3 / 6;
          grid-row: 3 / 4;
          &:nth-child(2) {
            grid-column: 2 / 5;
            grid-row: 2 / 5;
          }
          &:nth-child(1) {
            grid-column: 1 / 4;
            grid-row: 1 / 6;
          }
        }
      }
    }
  }
  .modal-backdrop {
    @layer daisyui.component {
      grid-column-start: 1;
      grid-row-start: 1;
      display: grid;
      align-self: stretch;
      justify-self: stretch;
      color: transparent;
      z-index: -1;
      button {
        cursor: pointer;
      }
    }
  }
  .mobile-drawer {
    backdrop-filter: blur(13px);
    z-index: 9999;
  }
  .-z-1 {
    z-index: calc(1 * -1);
  }
  .cardcontent {
    z-index: 141;
  }
  .z-1 {
    z-index: 1;
  }
  .z-8 {
    z-index: 8;
  }
  .z-9 {
    z-index: 9;
  }
  .z-10 {
    z-index: 10;
  }
  .z-12 {
    z-index: 12;
  }
  .z-20 {
    z-index: 20;
  }
  .z-50 {
    z-index: 50;
  }
  .z-100 {
    z-index: 100;
  }
  .z-140 {
    z-index: 140;
  }
  .z-200 {
    z-index: 200;
  }
  .z-310 {
    z-index: 310;
  }
  .z-810 {
    z-index: 810;
  }
  .z-999 {
    z-index: 999;
  }
  .z-9997 {
    z-index: 9997;
  }
  .z-9999 {
    z-index: 9999;
  }
  .z-99997 {
    z-index: 99997;
  }
  .z-99998 {
    z-index: 99998;
  }
  .z-99999 {
    z-index: 99999;
  }
  .tab-content {
    @layer daisyui.component {
      order: var(--tabcontent-order);
      display: none;
      border-color: transparent;
      --tabcontent-radius-ss: var(--radius-box);
      --tabcontent-radius-se: var(--radius-box);
      --tabcontent-radius-es: var(--radius-box);
      --tabcontent-radius-ee: var(--radius-box);
      --tabcontent-order: 1;
      width: 100%;
      margin: var(--tabcontent-margin);
      border-width: var(--border);
      border-start-start-radius: var(--tabcontent-radius-ss);
      border-start-end-radius: var(--tabcontent-radius-se);
      border-end-start-radius: var(--tabcontent-radius-es);
      border-end-end-radius: var(--tabcontent-radius-ee);
    }
  }
  .hover-gallery {
    @layer daisyui.component {
      --items: 1;
      grid-template-columns: repeat(var(--items), 1fr);
      width: 100%;
      gap: 1px;
      overflow: hidden;
      &, &:is(figure) {
        display: inline-grid;
      }
      &:has(> :nth-child(3)) {
        --items: 2;
      }
      &:has(> :nth-child(4)) {
        --items: 3;
      }
      &:has(> :nth-child(5)) {
        --items: 4;
      }
      &:has(> :nth-child(6)) {
        --items: 5;
      }
      &:has(> :nth-child(7)) {
        --items: 6;
      }
      &:has(> :nth-child(8)) {
        --items: 7;
      }
      &:has(> :nth-child(9)) {
        --items: 8;
      }
      &:has(> :nth-child(10)) {
        --items: 9;
      }
      > * {
        opacity: 0;
        height: 100%;
        grid-row: 1;
        object-fit: cover;
        width: 100%;
        &:nth-child(1) {
          grid-column: 1 / -1;
          opacity: 1;
        }
        &:nth-child(2) {
          grid-column: 1;
        }
        &:nth-child(3) {
          grid-column: 2;
        }
        &:nth-child(4) {
          grid-column: 3;
        }
        &:nth-child(5) {
          grid-column: 4;
        }
        &:nth-child(6) {
          grid-column: 5;
        }
        &:nth-child(7) {
          grid-column: 6;
        }
        &:nth-child(8) {
          grid-column: 7;
        }
        &:nth-child(9) {
          grid-column: 8;
        }
        &:nth-child(10) {
          grid-column: 9;
        }
        &:nth-child(n + 11) {
          display: none;
        }
      }
      > *:hover {
        grid-column: 1 / -1;
        opacity: 1;
      }
      &:has(*:hover) {
        > :nth-child(1) {
          display: none;
        }
      }
    }
  }
  .mockup-phone-display {
    @layer daisyui.component {
      border-radius: 54px;
      grid-column: 1/1;
      grid-row: 1/1;
      overflow: hidden;
      width: 100%;
      height: 100%;
      @supports (corner-shape: superellipse(1.87)) {
        border-radius: 101px;
        corner-shape: superellipse(1.87);
      }
      & > img {
        width: 100%;
        height: 100%;
        object-fit: cover;
      }
    }
  }
  .col-span-1 {
    grid-column: span 1 / span 1;
  }
  .col-span-2 {
    grid-column: span 2 / span 2;
  }
  .col-span-3 {
    grid-column: span 3 / span 3;
  }
  .col-span-4 {
    grid-column: span 4 / span 4;
  }
  .timeline-end {
    @layer daisyui.component {
      grid-column-start: 1;
      grid-column-end: 4;
      grid-row-start: 3;
      grid-row-end: 4;
      margin: calc(0.25rem * 1);
      align-self: flex-start;
      justify-self: center;
    }
  }
  .timeline-start {
    @layer daisyui.component {
      grid-column-start: 1;
      grid-column-end: 4;
      grid-row-start: 1;
      grid-row-end: 2;
      margin: calc(0.25rem * 1);
      align-self: flex-end;
      justify-self: center;
    }
  }
  .timeline-horizontal {
    @layer daisyui.modifier {
      flex-direction: row;
      > li {
        align-items: center;
        > hr {
          height: calc(0.25rem * 1);
          width: 100%;
          &:first-child {
            grid-column-start: 1;
            grid-row-start: 2;
          }
          &:last-child {
            grid-column-start: 3;
            grid-column-end: none;
            grid-row-start: 2;
            grid-row-end: auto;
          }
        }
      }
      .timeline-start {
        grid-column-start: 1;
        grid-column-end: 4;
        grid-row-start: 1;
        grid-row-end: 2;
        align-self: flex-end;
        justify-self: center;
      }
      .timeline-end {
        grid-column-start: 1;
        grid-column-end: 4;
        grid-row-start: 3;
        grid-row-end: 4;
        align-self: flex-start;
        justify-self: center;
      }
      &:has(.timeline-middle) {
        > li {
          > hr {
            &:first-child {
              border-start-start-radius: 0;
              border-end-start-radius: 0;
              border-start-end-radius: var(--radius-selector);
              border-end-end-radius: var(--radius-selector);
            }
            &:last-child {
              border-start-start-radius: var(--radius-selector);
              border-end-start-radius: var(--radius-selector);
              border-start-end-radius: 0;
              border-end-end-radius: 0;
            }
          }
        }
      }
      &:not(:has(.timeline-middle)) {
        :first-child {
          > hr:last-child {
            border-start-start-radius: var(--radius-selector);
            border-end-start-radius: var(--radius-selector);
            border-start-end-radius: 0;
            border-end-end-radius: 0;
          }
        }
        :last-child {
          > hr:first-child {
            border-start-start-radius: 0;
            border-end-start-radius: 0;
            border-start-end-radius: var(--radius-selector);
            border-end-end-radius: var(--radius-selector);
          }
        }
      }
    }
  }
  .timeline-vertical {
    @layer daisyui.modifier {
      flex-direction: column;
      > li {
        justify-items: center;
        --timeline-row-start: minmax(0, 1fr);
        --timeline-row-end: minmax(0, 1fr);
        > hr {
          height: 100%;
          width: calc(0.25rem * 1);
          &:first-child {
            grid-column-start: 2;
            grid-row-start: 1;
          }
          &:last-child {
            grid-column-start: 2;
            grid-column-end: auto;
            grid-row-start: 3;
            grid-row-end: none;
          }
        }
      }
      .timeline-start {
        grid-column-start: 1;
        grid-column-end: 2;
        grid-row-start: 1;
        grid-row-end: 4;
        align-self: center;
        justify-self: flex-end;
      }
      .timeline-end {
        grid-column-start: 3;
        grid-column-end: 4;
        grid-row-start: 1;
        grid-row-end: 4;
        align-self: center;
        justify-self: flex-start;
      }
      &:has(.timeline-middle) {
        > li {
          > hr {
            &:first-child {
              border-top-left-radius: 0;
              border-top-right-radius: 0;
              border-bottom-right-radius: var(--radius-selector);
              border-bottom-left-radius: var(--radius-selector);
            }
            &:last-child {
              border-top-left-radius: var(--radius-selector);
              border-top-right-radius: var(--radius-selector);
              border-bottom-right-radius: 0;
              border-bottom-left-radius: 0;
            }
          }
        }
      }
      &:not(:has(.timeline-middle)) {
        :first-child {
          > hr:last-child {
            border-top-left-radius: var(--radius-selector);
            border-top-right-radius: var(--radius-selector);
            border-bottom-right-radius: 0;
            border-bottom-left-radius: 0;
          }
        }
        :last-child {
          > hr:first-child {
            border-top-left-radius: 0;
            border-top-right-radius: 0;
            border-bottom-right-radius: var(--radius-selector);
            border-bottom-left-radius: var(--radius-selector);
          }
        }
      }
      &.timeline-snap-icon {
        > li {
          --timeline-col-start: minmax(0, 1fr);
          --timeline-row-start: 0.5rem;
        }
      }
    }
  }
  .timeline-compact {
    @layer daisyui.modifier {
      --timeline-row-start: 0;
      .timeline-start {
        grid-column-start: 1;
        grid-column-end: 4;
        grid-row-start: 3;
        grid-row-end: 4;
        align-self: flex-start;
        justify-self: center;
      }
      li:has(.timeline-start) {
        .timeline-end {
          grid-column-start: none;
          grid-row-start: auto;
        }
      }
      &.timeline-vertical {
        > li {
          --timeline-col-start: 0;
        }
        .timeline-start {
          grid-column-start: 3;
          grid-column-end: 4;
          grid-row-start: 1;
          grid-row-end: 4;
          align-self: center;
          justify-self: flex-start;
        }
        li:has(.timeline-start) {
          .timeline-end {
            grid-column-start: auto;
            grid-row-start: none;
          }
        }
      }
    }
  }
  .stat-figure {
    @layer daisyui.component {
      grid-column-start: 2;
      grid-row: span 3 / span 3;
      grid-row-start: 1;
      place-self: center;
      justify-self: flex-end;
    }
  }
  .hero {
    @layer daisyui.component {
      display: grid;
      width: 100%;
      place-items: center;
      background-size: cover;
      background-position: center;
      & > * {
        grid-column-start: 1;
        grid-row-start: 1;
      }
    }
  }
  .hero-overlay {
    @layer daisyui.component {
      grid-column-start: 1;
      grid-row-start: 1;
      height: 100%;
      width: 100%;
      background-color: var(--color-neutral);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral) 50%, transparent);
      }
    }
  }
  .modal-box {
    @layer daisyui.component {
      grid-column-start: 1;
      grid-row-start: 1;
      max-height: 100vh;
      width: calc(11/12 * 100%);
      max-width: 32rem;
      background-color: var(--color-base-100);
      padding: calc(0.25rem * 6);
      transition: translate 0.3s ease-out, scale 0.3s ease-out, opacity 0.2s ease-out 0.05s, box-shadow 0.3s ease-out;
      border-top-left-radius: var(--modal-tl, var(--radius-box));
      border-top-right-radius: var(--modal-tr, var(--radius-box));
      border-bottom-left-radius: var(--modal-bl, var(--radius-box));
      border-bottom-right-radius: var(--modal-br, var(--radius-box));
      scale: 95%;
      opacity: 0;
      box-shadow: oklch(0% 0 0/ 0.25) 0px 25px 50px -12px;
      overflow-y: auto;
      overscroll-behavior: contain;
    }
  }
  .drawer-content {
    @layer daisyui.component {
      grid-column-start: 2;
      grid-row-start: 1;
      min-width: calc(0.25rem * 0);
    }
  }
  .timeline-middle {
    @layer daisyui.component {
      grid-column-start: 2;
      grid-row-start: 2;
    }
  }
  .drawer-end {
    @layer daisyui.modifier.placement {
      grid-auto-columns: auto max-content;
      > .drawer-toggle {
        & ~ .drawer-content {
          grid-column-start: 1;
        }
        & ~ .drawer-side {
          grid-column-start: 2;
          justify-items: end;
        }
        & ~ .drawer-side > *:not(.drawer-overlay) {
          translate: 100%;
          [dir="rtl"] & {
            translate: -100%;
          }
        }
        &:checked ~ .drawer-side > *:not(.drawer-overlay) {
          translate: 0%;
        }
      }
    }
  }
  .stat-value {
    @layer daisyui.component {
      grid-column-start: 1;
      white-space: nowrap;
      font-size: 2rem;
      font-weight: 800;
    }
  }
  .stat-desc {
    @layer daisyui.component {
      grid-column-start: 1;
      white-space: nowrap;
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
      }
      font-size: 0.75rem;
    }
  }
  .stat-title {
    @layer daisyui.component {
      grid-column-start: 1;
      white-space: nowrap;
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
      }
      font-size: 0.75rem;
    }
  }
  .stat-actions {
    @layer daisyui.component {
      grid-column-start: 1;
      white-space: nowrap;
    }
  }
  .chat-image {
    @layer daisyui.component {
      grid-row: span 2 / span 2;
      align-self: flex-end;
    }
  }
  .row-span-1 {
    grid-row: span 1 / span 1;
  }
  .row-span-2 {
    grid-row: span 2 / span 2;
  }
  .row-span-3 {
    grid-row: span 3 / span 3;
  }
  .chat-footer {
    @layer daisyui.component {
      grid-row-start: 3;
      display: flex;
      gap: calc(0.25rem * 1);
      font-size: 0.6875rem;
    }
  }
  .chat-header {
    @layer daisyui.component {
      grid-row-start: 1;
      display: flex;
      gap: calc(0.25rem * 1);
      font-size: 0.6875rem;
    }
  }
  .list-col-wrap {
    @layer daisyui.modifier {
      grid-row-start: 2;
    }
  }
  .row-start-1 {
    grid-row-start: 1;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .divider {
    @layer daisyui.component {
      display: flex;
      height: calc(0.25rem * 4);
      flex-direction: row;
      align-items: center;
      align-self: stretch;
      white-space: nowrap;
      margin: var(--divider-m, 1rem 0);
      --divider-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --divider-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
      }
      &:before, &:after {
        content: "";
        height: calc(0.25rem * 0.5);
        width: 100%;
        flex-grow: 1;
        background-color: var(--divider-color);
      }
      @media print {
        &:before, &:after {
          border: 0.5px solid;
        }
      }
      &:not(:empty) {
        gap: calc(0.25rem * 4);
      }
    }
  }
  .m-auto {
    margin: auto;
  }
  .filter {
    @layer daisyui.component {
      display: flex;
      flex-wrap: wrap;
      input[type="radio"] {
        width: auto;
      }
      input {
        overflow: hidden;
        opacity: 100%;
        scale: 1;
        transition: margin 0.1s, opacity 0.3s, padding 0.3s, border-width 0.1s;
        &:not(:last-child) {
          margin-inline-end: calc(0.25rem * 1);
        }
        &.filter-reset {
          aspect-ratio: 1 / 1;
          &::after {
            --tw-content: "×";
            content: var(--tw-content);
          }
        }
      }
      &:not(:has(input:checked:not(.filter-reset))) {
        .filter-reset, input[type="reset"] {
          scale: 0;
          border-width: 0;
          margin-inline: calc(0.25rem * 0);
          width: calc(0.25rem * 0);
          padding-inline: calc(0.25rem * 0);
          opacity: 0%;
        }
      }
      &:has(input:checked:not(.filter-reset)) {
        input:not(:checked, .filter-reset, input[type="reset"]) {
          scale: 0;
          border-width: 0;
          margin-inline: calc(0.25rem * 0);
          width: calc(0.25rem * 0);
          padding-inline: calc(0.25rem * 0);
          opacity: 0%;
        }
      }
    }
  }
  .mx-2 {
    margin-inline: calc(var(--spacing) * 2);
  }
  .mx-12 {
    margin-inline: calc(var(--spacing) * 12);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .file-input-ghost {
    @layer daisyui.modifier {
      background-color: transparent;
      transition: background-color 0.2s;
      box-shadow: none;
      border-color: #0000;
      &::file-selector-button {
        margin-inline-start: calc(0.25rem * 0);
        margin-inline-end: calc(0.25rem * 4);
        height: 100%;
        cursor: pointer;
        padding-inline: calc(0.25rem * 4);
        webkit-user-select: none;
        user-select: none;
        margin-block: 0;
        border-start-end-radius: calc(var(--join-ss, var(--radius-field) - var(--border)));
        border-end-end-radius: calc(var(--join-es, var(--radius-field) - var(--border)));
      }
      &:focus, &:focus-within {
        background-color: var(--color-base-100);
        color: var(--color-base-content);
        border-color: #0000;
        box-shadow: none;
      }
    }
  }
  .input-lg {
    @layer daisyui.modifier {
      --size: calc(var(--size-field, 0.25rem) * 12);
      font-size: max(var(--font-size, 1.125rem), 1.125rem);
      &[type="number"] {
        &::-webkit-inner-spin-button {
          margin-block: calc(0.25rem * -3);
          margin-inline-end: calc(0.25rem * -3);
        }
      }
    }
  }
  .input-md {
    @layer daisyui.modifier {
      --size: calc(var(--size-field, 0.25rem) * 10);
      font-size: max(var(--font-size, 0.875rem), 0.875rem);
      &[type="number"] {
        &::-webkit-inner-spin-button {
          margin-block: calc(0.25rem * -3);
          margin-inline-end: calc(0.25rem * -3);
        }
      }
    }
  }
  .input-sm {
    @layer daisyui.modifier {
      --size: calc(var(--size-field, 0.25rem) * 8);
      font-size: max(var(--font-size, 0.75rem), 0.75rem);
      &[type="number"] {
        &::-webkit-inner-spin-button {
          margin-block: calc(0.25rem * -2);
          margin-inline-end: calc(0.25rem * -3);
        }
      }
    }
  }
  .input-xl {
    @layer daisyui.modifier {
      --size: calc(var(--size-field, 0.25rem) * 14);
      font-size: max(var(--font-size, 1.375rem), 1.375rem);
      &[type="number"] {
        &::-webkit-inner-spin-button {
          margin-block: calc(0.25rem * -4);
          margin-inline-end: calc(0.25rem * -3);
        }
      }
    }
  }
  .input-xs {
    @layer daisyui.modifier {
      --size: calc(var(--size-field, 0.25rem) * 6);
      font-size: max(var(--font-size, 0.6875rem), 0.6875rem);
      &[type="number"] {
        &::-webkit-inner-spin-button {
          margin-block: calc(0.25rem * -1);
          margin-inline-end: calc(0.25rem * -3);
        }
      }
    }
  }
  .my-0\.5 {
    margin-block: calc(var(--spacing) * 0.5);
  }
  .my-1 {
    margin-block: calc(var(--spacing) * 1);
  }
  .my-8 {
    margin-block: calc(var(--spacing) * 8);
  }
  .my-11 {
    margin-block: calc(var(--spacing) * 11);
  }
  .my-20 {
    margin-block: calc(var(--spacing) * 20);
  }
  .my-auto {
    margin-block: auto;
  }
  .label {
    @layer daisyui.component {
      display: inline-flex;
      align-items: center;
      gap: calc(0.25rem * 1.5);
      white-space: nowrap;
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 60%, transparent);
      }
      &:has(input) {
        cursor: pointer;
      }
      &:is(.input > *, .select > *) {
        display: flex;
        height: calc(100% - 0.5rem);
        align-items: center;
        padding-inline: calc(0.25rem * 3);
        white-space: nowrap;
        font-size: inherit;
        &:first-child {
          margin-inline-start: calc(0.25rem * -3);
          margin-inline-end: calc(0.25rem * 3);
          border-inline-end: var(--border) solid currentColor;
          @supports (color: color-mix(in lab, red, red)) {
            border-inline-end: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
          }
        }
        &:last-child {
          margin-inline-start: calc(0.25rem * 3);
          margin-inline-end: calc(0.25rem * -3);
          border-inline-start: var(--border) solid currentColor;
          @supports (color: color-mix(in lab, red, red)) {
            border-inline-start: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
          }
        }
      }
    }
  }
  .steps-vertical {
    @layer daisyui.modifier {
      grid-auto-rows: 1fr;
      grid-auto-flow: row;
      .step {
        display: grid;
        grid-template-columns: repeat(2, minmax(0, 1fr));
        grid-template-columns: 40px 1fr;
        grid-template-rows: repeat(1, minmax(0, 1fr));
        grid-template-rows: auto;
        gap: 0.5rem;
        min-height: 4rem;
        justify-items: start;
        &:before {
          height: 100%;
          width: calc(0.25rem * 2);
          translate: -50% -50%;
          margin-inline-start: 50%;
        }
        [dir="rtl"] &:before {
          translate: 50% -50%;
        }
      }
    }
  }
  .steps-horizontal {
    @layer daisyui.modifier {
      grid-auto-columns: 1fr;
      display: inline-grid;
      grid-auto-flow: column;
      overflow: hidden;
      overflow-x: auto;
      .step {
        display: grid;
        grid-template-columns: repeat(1, minmax(0, 1fr));
        grid-template-columns: auto;
        grid-template-rows: repeat(2, minmax(0, 1fr));
        grid-template-rows: 40px 1fr;
        place-items: center;
        text-align: center;
        min-width: 4rem;
        &:before {
          height: calc(0.25rem * 2);
          width: 100%;
          translate: 0;
          margin-inline-start: -100%;
        }
        [dir="rtl"] &:before {
          translate: 0;
        }
      }
    }
  }
  .join-horizontal {
    flex-direction: row;
    > .join-item:first-child {
      --join-ss: var(--radius-field);
      --join-se: 0;
      --join-es: var(--radius-field);
      --join-ee: 0;
    }
    :first-child:not(:last-child) {
      .join-item {
        --join-ss: var(--radius-field);
        --join-se: 0;
        --join-es: var(--radius-field);
        --join-ee: 0;
      }
    }
    > .join-item:last-child {
      --join-ss: 0;
      --join-se: var(--radius-field);
      --join-es: 0;
      --join-ee: var(--radius-field);
    }
    :last-child:not(:first-child) {
      .join-item {
        --join-ss: 0;
        --join-se: var(--radius-field);
        --join-es: 0;
        --join-ee: var(--radius-field);
      }
    }
    > .join-item:only-child {
      --join-ss: var(--radius-field);
      --join-se: var(--radius-field);
      --join-es: var(--radius-field);
      --join-ee: var(--radius-field);
    }
    :only-child {
      .join-item {
        --join-ss: var(--radius-field);
        --join-se: var(--radius-field);
        --join-es: var(--radius-field);
        --join-ee: var(--radius-field);
      }
    }
    .join-item {
      &:where(*:not(:first-child)) {
        margin-inline-start: calc(var(--border, 1px) * -1);
        margin-block-start: 0;
      }
    }
  }
  .join-vertical {
    flex-direction: column;
    > .join-item:first-child {
      --join-ss: var(--radius-field);
      --join-se: var(--radius-field);
      --join-es: 0;
      --join-ee: 0;
    }
    :first-child:not(:last-child) {
      .join-item {
        --join-ss: var(--radius-field);
        --join-se: var(--radius-field);
        --join-es: 0;
        --join-ee: 0;
      }
    }
    > .join-item:last-child {
      --join-ss: 0;
      --join-se: 0;
      --join-es: var(--radius-field);
      --join-ee: var(--radius-field);
    }
    :last-child:not(:first-child) {
      .join-item {
        --join-ss: 0;
        --join-se: 0;
        --join-es: var(--radius-field);
        --join-ee: var(--radius-field);
      }
    }
    > .join-item:only-child {
      --join-ss: var(--radius-field);
      --join-se: var(--radius-field);
      --join-es: var(--radius-field);
      --join-ee: var(--radius-field);
    }
    :only-child {
      .join-item {
        --join-ss: var(--radius-field);
        --join-se: var(--radius-field);
        --join-es: var(--radius-field);
        --join-ee: var(--radius-field);
      }
    }
    .join-item {
      &:where(*:not(:first-child)) {
        margin-inline-start: 0;
        margin-block-start: calc(var(--border, 1px) * -1);
      }
    }
  }
  .join-item {
    &:where(*:not(:first-child, :disabled, [disabled], .btn-disabled)) {
      margin-inline-start: calc(var(--border, 1px) * -1);
      margin-block-start: 0;
    }
    &:where(*:is(:disabled, [disabled], .btn-disabled)) {
      border-width: var(--border, 1px) 0 var(--border, 1px) var(--border, 1px);
    }
  }
  .ms-6 {
    margin-inline-start: calc(var(--spacing) * 6);
  }
  .modal-action {
    @layer daisyui.component {
      margin-top: calc(0.25rem * 6);
      display: flex;
      justify-content: flex-end;
      gap: calc(0.25rem * 2);
    }
  }
  .tabs-box {
    @layer daisyui.modifier {
      background-color: var(--color-base-200);
      padding: calc(0.25rem * 1);
      --tabs-box-radius: calc(var(--radius-field) + var(--radius-field) + var(--radius-field));
      border-radius: calc( min(calc(var(--tab-height) / 2), var(--radius-field)) + min(0.25rem, var(--tabs-box-radius)) );
      box-shadow: 0 -0.5px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 0.5px oklch(0% 0 0 / calc(var(--depth) * 0.05)) inset;
      .tab {
        border-radius: var(--radius-field);
        border-style: none;
        &:focus-visible, &:is(label:has(:checked:focus-visible)) {
          outline-offset: 2px;
        }
      }
      > :is(.tab-active, [aria-selected="true"], [aria-current="true"], [aria-current="page"]):not( .tab-disabled, [disabled] ), > :is(input:checked), > :is(label:has(:checked)) {
        background-color: var(--tab-bg, var(--color-base-100));
        box-shadow: 0 1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px 1px -1px var(--color-neutral), 0 1px 6px -4px var(--color-neutral);
        @supports (color: color-mix(in lab, red, red)) {
          box-shadow: 0 1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px 1px -1px color-mix(in oklab, var(--color-neutral) calc(var(--depth) * 50%), #0000), 0 1px 6px -4px color-mix(in oklab, var(--color-neutral) calc(var(--depth) * 100%), #0000);
        }
        @media (forced-colors: active) {
          border: 1px solid;
        }
      }
      .tab-content {
        margin-top: calc(0.25rem * 1);
        border-radius: calc( min(calc(var(--tab-height) / 2), var(--radius-field)) + min(0.25rem, var(--tabs-box-radius)) - var(--border) );
      }
    }
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-5 {
    margin-top: calc(var(--spacing) * 5);
  }
  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }
  .mt-28 {
    margin-top: calc(var(--spacing) * 28);
  }
  .breadcrumbs {
    @layer daisyui.component {
      max-width: 100%;
      overflow-x: auto;
      padding-block: calc(0.25rem * 2);
      > menu, > ul, > ol {
        display: flex;
        min-height: min-content;
        align-items: center;
        white-space: nowrap;
        > li {
          display: flex;
          align-items: center;
          > * {
            display: flex;
            cursor: pointer;
            align-items: center;
            gap: calc(0.25rem * 2);
            &:hover {
              @media (hover: hover) {
                text-decoration-line: underline;
              }
            }
            &:focus {
              --tw-outline-style: none;
              outline-style: none;
              @media (forced-colors: active) {
                outline: 2px solid transparent;
                outline-offset: 2px;
              }
            }
            &:focus-visible {
              outline: 2px solid currentColor;
              outline-offset: 2px;
            }
          }
          & + *:before {
            content: "";
            margin-right: calc(0.25rem * 3);
            margin-left: calc(0.25rem * 2);
            display: block;
            height: calc(0.25rem * 1.5);
            width: calc(0.25rem * 1.5);
            opacity: 40%;
            rotate: 45deg;
            border-top: 1px solid;
            border-right: 1px solid;
            background-color: #0000;
          }
          [dir="rtl"] & + *:before {
            rotate: -135deg;
          }
        }
      }
    }
  }
  .fieldset-legend {
    @layer daisyui.component {
      margin-bottom: calc(0.25rem * -1);
      display: flex;
      align-items: center;
      justify-content: space-between;
      gap: calc(0.25rem * 2);
      padding-block: calc(0.25rem * 2);
      color: var(--color-base-content);
      font-weight: 600;
    }
  }
  .footer-title {
    @layer daisyui.component {
      margin-bottom: calc(0.25rem * 2);
      text-transform: uppercase;
      opacity: 60%;
      font-weight: 600;
    }
  }
  .-mb-12 {
    margin-bottom: calc(var(--spacing) * -12);
  }
  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }
  .mb-1\.5 {
    margin-bottom: calc(var(--spacing) * 1.5);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .mb-5 {
    margin-bottom: calc(var(--spacing) * 5);
  }
  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }
  .mb-7 {
    margin-bottom: calc(var(--spacing) * 7);
  }
  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }
  .mb-9 {
    margin-bottom: calc(var(--spacing) * 9);
  }
  .mb-10 {
    margin-bottom: calc(var(--spacing) * 10);
  }
  .mb-12 {
    margin-bottom: calc(var(--spacing) * 12);
  }
  .mb-16 {
    margin-bottom: calc(var(--spacing) * 16);
  }
  .mb-20 {
    margin-bottom: calc(var(--spacing) * 20);
  }
  .mb-24 {
    margin-bottom: calc(var(--spacing) * 24);
  }
  .mb-28 {
    margin-bottom: calc(var(--spacing) * 28);
  }
  .mb-36 {
    margin-bottom: calc(var(--spacing) * 36);
  }
  .mb-auto {
    margin-bottom: auto;
  }
  .ml-1 {
    margin-left: calc(var(--spacing) * 1);
  }
  .carousel-item {
    @layer daisyui.component {
      box-sizing: content-box;
      display: flex;
      flex: none;
      scroll-snap-align: start;
    }
  }
  .status {
    @layer daisyui.component {
      display: inline-block;
      aspect-ratio: 1 / 1;
      width: calc(0.25rem * 2);
      height: calc(0.25rem * 2);
      border-radius: var(--radius-selector);
      background-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
      }
      background-position: center;
      background-repeat: no-repeat;
      vertical-align: middle;
      color: color-mix(in srgb, #000 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-black) 30%, transparent);
      }
      background-image: radial-gradient( circle at 35% 30%, oklch(1 0 0 / calc(var(--depth) * 0.5)), #0000 );
      box-shadow: 0 2px 3px -1px currentColor;
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 2px 3px -1px color-mix(in oklab, currentColor calc(var(--depth) * 100%), #0000);
      }
    }
  }
  .mockup-phone {
    @layer daisyui.component {
      display: inline-grid;
      justify-items: center;
      border: 5px solid #6b6b6b;
      border-radius: 65px;
      background-color: #000;
      padding: 6px;
      overflow: hidden;
      width: 100%;
      max-width: 462px;
      aspect-ratio: 462 / 978;
      @supports (corner-shape: superellipse(1.45)) {
        border-radius: 90px;
        corner-shape: superellipse(1.45);
      }
    }
  }
  .badge {
    @layer daisyui.component {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      gap: calc(0.25rem * 2);
      border-radius: var(--radius-selector);
      vertical-align: middle;
      color: var(--badge-fg);
      border: var(--border) solid var(--badge-color, var(--color-base-200));
      font-size: 0.875rem;
      width: fit-content;
      padding-inline: calc(0.25rem * 3 - var(--border));
      background-size: auto, calc(var(--noise) * 100%);
      background-image: none, var(--fx-noise);
      background-color: var(--badge-bg);
      --badge-bg: var(--badge-color, var(--color-base-100));
      --badge-fg: var(--color-base-content);
      --size: calc(var(--size-selector, 0.25rem) * 6);
      height: var(--size);
    }
  }
  .kbd {
    @layer daisyui.component {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      border-radius: var(--radius-field);
      background-color: var(--color-base-200);
      vertical-align: middle;
      padding-left: 0.5em;
      padding-right: 0.5em;
      border: var(--border) solid var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border: var(--border) solid color-mix(in srgb, var(--color-base-content) 20%, #0000);
      }
      border-bottom: calc(var(--border) + 1px) solid var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        border-bottom: calc(var(--border) + 1px) solid color-mix(in srgb, var(--color-base-content) 20%, #0000);
      }
      --size: calc(var(--size-selector, 0.25rem) * 6);
      font-size: 0.875rem;
      height: var(--size);
      min-width: var(--size);
      box-shadow: none;
    }
  }
  .tabs {
    @layer daisyui.component {
      display: flex;
      flex-wrap: wrap;
      --tabs-height: auto;
      --tabs-direction: row;
      --tab-height: calc(var(--size-field, 0.25rem) * 10);
      height: var(--tabs-height);
      flex-direction: var(--tabs-direction);
    }
  }
  .blog-grid {
    width: 100%;
    display: grid;
    grid-template-columns: repeat(2, auto);
    grid-auto-rows: minmax(120px, 1fr);
    grid-auto-flow: columns;
    grid-row-gap: .5em;
    grid-column-gap: 1em;
    & article {
      width: calc(1/2 * 100%);
    }
  }
  .footer {
    @layer daisyui.component {
      display: grid;
      width: 100%;
      grid-auto-flow: row;
      place-items: start;
      column-gap: calc(0.25rem * 4);
      row-gap: calc(0.25rem * 10);
      font-size: 0.875rem;
      line-height: 1.25rem;
      & > * {
        display: grid;
        place-items: start;
        gap: calc(0.25rem * 2);
      }
      &.footer-center {
        grid-auto-flow: column dense;
        place-items: center;
        text-align: center;
        & > * {
          place-items: center;
        }
      }
    }
  }
  .stat {
    @layer daisyui.component {
      display: inline-grid;
      width: 100%;
      column-gap: calc(0.25rem * 4);
      padding-inline: calc(0.25rem * 6);
      padding-block: calc(0.25rem * 4);
      grid-template-columns: repeat(1, 1fr);
      &:not(:last-child) {
        border-inline-end: var(--border) dashed currentColor;
        @supports (color: color-mix(in lab, red, red)) {
          border-inline-end: var(--border) dashed color-mix(in oklab, currentColor 10%, #0000);
        }
        border-block-end: none;
      }
    }
  }
  .navbar-end {
    @layer daisyui.component {
      display: inline-flex;
      align-items: center;
      width: 50%;
      justify-content: flex-end;
    }
  }
  .navbar-start {
    @layer daisyui.component {
      display: inline-flex;
      align-items: center;
      width: 50%;
      justify-content: flex-start;
    }
  }
  .card-body {
    @layer daisyui.component {
      display: flex;
      flex: auto;
      flex-direction: column;
      gap: calc(0.25rem * 2);
      padding: var(--card-p, 1.5rem);
      font-size: var(--card-fs, 0.875rem);
      :where(p) {
        flex-grow: 1;
      }
    }
  }
  .navbar-center {
    @layer daisyui.component {
      display: inline-flex;
      align-items: center;
      flex-shrink: 0;
    }
  }
  .fab-flower {
    @layer daisyui.component {
      display: grid;
      --position: 0rem;
      > *:nth-child(-n + 2) {
        --position: 0rem;
      }
      > * {
        grid-area: 1/1;
        --degree: 180deg;
        --flip-degree: calc(180deg - var(--degree));
        transform: translateX(calc(cos(var(--degree)) * var(--position))) translateY(calc(sin(var(--degree)) * calc(-1 * var(--position))));
        [dir="rtl"] & {
          transform: translateX(calc(cos(var(--flip-degree)) * var(--position))) translateY(calc(sin(var(--flip-degree)) * calc(-1 * var(--position))));
        }
      }
      > :nth-child(n + 7) {
        display: none;
      }
      &:has(:nth-child(3)) {
        --position: 140%;
        > :nth-child(3) {
          --degree: 135deg;
        }
      }
      &:has(:nth-child(4)) {
        --position: 140%;
        > :nth-child(3) {
          --degree: 165deg;
        }
        > :nth-child(4) {
          --degree: 105deg;
        }
      }
      &:has(:nth-child(5)) {
        --position: 180%;
        > :nth-child(3) {
          --degree: 180deg;
        }
        > :nth-child(4) {
          --degree: 135deg;
        }
        > :nth-child(5) {
          --degree: 90deg;
        }
      }
      &:has(:nth-child(6)) {
        --position: 220%;
        > :nth-child(3) {
          --degree: 180deg;
        }
        > :nth-child(4) {
          --degree: 150deg;
        }
        > :nth-child(5) {
          --degree: 120deg;
        }
        > :nth-child(6) {
          --degree: 90deg;
        }
      }
    }
  }
  .fieldset-label {
    @layer daisyui.component {
      display: flex;
      align-items: center;
      gap: calc(0.25rem * 1.5);
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
      }
      &:has(input) {
        cursor: pointer;
      }
    }
  }
  .carousel {
    @layer daisyui.component {
      display: inline-flex;
      overflow-x: scroll;
      scroll-snap-type: x mandatory;
      scrollbar-width: none;
      @media (prefers-reduced-motion: no-preference) {
        scroll-behavior: smooth;
      }
      &::-webkit-scrollbar {
        display: none;
      }
    }
  }
  .alert {
    border-width: var(--border);
    border-color: var(--alert-border-color, var(--color-base-200));
    @layer daisyui.component {
      border-style: solid;
      --alert-border-color: var(--color-base-200);
      display: grid;
      align-items: center;
      gap: calc(0.25rem * 4);
      border-radius: var(--radius-box);
      padding-inline: calc(0.25rem * 4);
      padding-block: calc(0.25rem * 3);
      color: var(--color-base-content);
      background-color: var(--alert-color, var(--color-base-200));
      justify-content: start;
      justify-items: start;
      grid-auto-flow: column;
      grid-template-columns: auto;
      text-align: start;
      font-size: 0.875rem;
      line-height: 1.25rem;
      background-size: auto, calc(var(--noise) * 100%);
      background-image: none, var(--fx-noise);
      box-shadow: 0 3px 0 -2px oklch(100% 0 0 / calc(var(--depth) * 0.08)) inset, 0 1px #000, 0 4px 3px -2px oklch(0% 0 0 / calc(var(--depth) * 0.08));
      @supports (color: color-mix(in lab, red, red)) {
        box-shadow: 0 3px 0 -2px oklch(100% 0 0 / calc(var(--depth) * 0.08)) inset, 0 1px color-mix( in oklab, color-mix(in oklab, #000 20%, var(--alert-color, var(--color-base-200))) calc(var(--depth) * 20%), #0000 ), 0 4px 3px -2px oklch(0% 0 0 / calc(var(--depth) * 0.08));
      }
      &:has(:nth-child(2)) {
        grid-template-columns: auto minmax(auto, 1fr);
      }
    }
  }
  .fieldset {
    @layer daisyui.component {
      display: grid;
      gap: calc(0.25rem * 1.5);
      padding-block: calc(0.25rem * 1);
      font-size: 0.75rem;
      grid-template-columns: 1fr;
      grid-auto-rows: max-content;
    }
  }
  .card-actions {
    @layer daisyui.component {
      display: flex;
      flex-wrap: wrap;
      align-items: flex-start;
      gap: calc(0.25rem * 2);
    }
  }
  .kolumna {
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: transparent;
    background-image: none;
    padding: 2.3561944902px;
    contain: layout paint;
  }
  .cloth-border {
    padding: 2.3561944902px;
    padding-right: 1.5707963268px;
    display: flex;
    align-items: safe center;
    justify-content: safe center;
    clip-path: polygon( 4.167037rem 0rem, calc(100% - 4.167037rem) 0rem, calc(100% - 3.917025rem) 0.000347rem, calc(100% - 3.667025rem) 0.002717rem, calc(100% - 3.4171rem) 0.009112rem, calc(100% - 3.167409rem) 0.02153rem, calc(100% - 2.918255rem) 0.041962rem, calc(100% - 2.670135rem) 0.072374rem, calc(100% - 2.423782rem) 0.114689rem, calc(100% - 2.180214rem) 0.170762rem, calc(100% - 1.940767rem) 0.242331rem, calc(100% - 1.707134rem) 0.330972rem, calc(100% - 1.481384rem) 0.43803rem, calc(100% - 1.265977rem) 0.564537rem, calc(100% - 1.063758rem) 0.711127rem, calc(100% - 0.877925rem) 0.877925rem, calc(100% - 0.711127rem) 1.063758rem, calc(100% - 0.564537rem) 1.265977rem, calc(100% - 0.43803rem) 1.481384rem, calc(100% - 0.330972rem) 1.707134rem, calc(100% - 0.242331rem) 1.940767rem, calc(100% - 0.170762rem) 2.180214rem, calc(100% - 0.114689rem) 2.423782rem, calc(100% - 0.072374rem) 2.670135rem, calc(100% - 0.041962rem) 2.918255rem, calc(100% - 0.02153rem) 3.167409rem, calc(100% - 0.009112rem) 3.4171rem, calc(100% - 0.002717rem) 3.667025rem, calc(100% - 0.000347rem) 3.917025rem, 100% 4.167037rem, 100% calc(100% - 4.167037rem), calc(100% - 0.000347rem) calc(100% - 3.917025rem), calc(100% - 0.002717rem) calc(100% - 3.667025rem), calc(100% - 0.009112rem) calc(100% - 3.4171rem), calc(100% - 0.02153rem) calc(100% - 3.167409rem), calc(100% - 0.041962rem) calc(100% - 2.918255rem), calc(100% - 0.072374rem) calc(100% - 2.670135rem), calc(100% - 0.114689rem) calc(100% - 2.423782rem), calc(100% - 0.170762rem) calc(100% - 2.180214rem), calc(100% - 0.242331rem) calc(100% - 1.940767rem), calc(100% - 0.330972rem) calc(100% - 1.707134rem), calc(100% - 0.43803rem) calc(100% - 1.481384rem), calc(100% - 0.564537rem) calc(100% - 1.265977rem), calc(100% - 0.711127rem) calc(100% - 1.063758rem), calc(100% - 0.877925rem) calc(100% - 0.877925rem), calc(100% - 1.063758rem) calc(100% - 0.711127rem), calc(100% - 1.265977rem) calc(100% - 0.564537rem), calc(100% - 1.481384rem) calc(100% - 0.43803rem), calc(100% - 1.707134rem) calc(100% - 0.330972rem), calc(100% - 1.940767rem) calc(100% - 0.242331rem), calc(100% - 2.180214rem) calc(100% - 0.170762rem), calc(100% - 2.423782rem) calc(100% - 0.114689rem), calc(100% - 2.670135rem) calc(100% - 0.072374rem), calc(100% - 2.918255rem) calc(100% - 0.041962rem), calc(100% - 3.167409rem) calc(100% - 0.02153rem), calc(100% - 3.4171rem) calc(100% - 0.009112rem), calc(100% - 3.667025rem) calc(100% - 0.002717rem), calc(100% - 3.917025rem) calc(100% - 0.000347rem), calc(100% - 4.167037rem) 100%, 4.167037rem 100%, 3.917025rem calc(100% - 0.000347rem), 3.667025rem calc(100% - 0.002717rem), 3.4171rem calc(100% - 0.009112rem), 3.167409rem calc(100% - 0.02153rem), 2.918255rem calc(100% - 0.041962rem), 2.670135rem calc(100% - 0.072374rem), 2.423782rem calc(100% - 0.114689rem), 2.180214rem calc(100% - 0.170762rem), 1.940767rem calc(100% - 0.242331rem), 1.707134rem calc(100% - 0.330972rem), 1.481384rem calc(100% - 0.43803rem), 1.265977rem calc(100% - 0.564537rem), 1.063758rem calc(100% - 0.711127rem), 0.877925rem calc(100% - 0.877925rem), 0.711127rem calc(100% - 1.063758rem), 0.564537rem calc(100% - 1.265977rem), 0.43803rem calc(100% - 1.481384rem), 0.330972rem calc(100% - 1.707134rem), 0.242331rem calc(100% - 1.940767rem), 0.170762rem calc(100% - 2.180214rem), 0.114689rem calc(100% - 2.423782rem), 0.072374rem calc(100% - 2.670135rem), 0.041962rem calc(100% - 2.918255rem), 0.02153rem calc(100% - 3.167409rem), 0.009112rem calc(100% - 3.4171rem), 0.002717rem calc(100% - 3.667025rem), 0.000347rem calc(100% - 3.917025rem), 0rem calc(100% - 4.167037rem), 0rem 4.167037rem, 0.000347rem 3.917025rem, 0.002717rem 3.667025rem, 0.009112rem 3.4171rem, 0.02153rem 3.167409rem, 0.041962rem 2.918255rem, 0.072374rem 2.670135rem, 0.114689rem 2.423782rem, 0.170762rem 2.180214rem, 0.242331rem 1.940767rem, 0.330972rem 1.707134rem, 0.43803rem 1.481384rem, 0.564537rem 1.265977rem, 0.711127rem 1.063758rem, 0.877925rem 0.877925rem, 1.063758rem 0.711127rem, 1.265977rem 0.564537rem, 1.481384rem 0.43803rem, 1.707134rem 0.330972rem, 1.940767rem 0.242331rem, 2.180214rem 0.170762rem, 2.423782rem 0.114689rem, 2.670135rem 0.072374rem, 2.918255rem 0.041962rem, 3.167409rem 0.02153rem, 3.4171rem 0.009112rem, 3.667025rem 0.002717rem, 3.917025rem 0.000347rem, 4.167037rem 0rem );
    background: #3e374ee4;
    background-image: radial-gradient(circle at 15% 20%, rgba(187,169,246,0.4), transparent 30%), radial-gradient(circle at 90% 80%, rgba(192,114,209,0.1), transparent 30%);
  }
  .avatar-placeholder {
    @layer daisyui.modifier {
      & > div {
        display: flex;
        align-items: center;
        justify-content: center;
      }
    }
  }
  .card-title {
    @layer daisyui.component {
      display: flex;
      align-items: center;
      gap: calc(0.25rem * 2);
      font-size: var(--cardtitle-fs, 1.125rem);
      font-weight: 600;
    }
  }
  .join {
    display: inline-flex;
    align-items: stretch;
    --join-ss: 0;
    --join-se: 0;
    --join-es: 0;
    --join-ee: 0;
    :where(.join-item) {
      border-start-start-radius: var(--join-ss, 0);
      border-start-end-radius: var(--join-se, 0);
      border-end-start-radius: var(--join-es, 0);
      border-end-end-radius: var(--join-ee, 0);
      * {
        --join-ss: var(--radius-field);
        --join-se: var(--radius-field);
        --join-es: var(--radius-field);
        --join-ee: var(--radius-field);
      }
    }
    > .join-item:where(:first-child) {
      --join-ss: var(--radius-field);
      --join-se: 0;
      --join-es: var(--radius-field);
      --join-ee: 0;
    }
    :first-child:not(:last-child) {
      :where(.join-item) {
        --join-ss: var(--radius-field);
        --join-se: 0;
        --join-es: var(--radius-field);
        --join-ee: 0;
      }
    }
    > .join-item:where(:last-child) {
      --join-ss: 0;
      --join-se: var(--radius-field);
      --join-es: 0;
      --join-ee: var(--radius-field);
    }
    :last-child:not(:first-child) {
      :where(.join-item) {
        --join-ss: 0;
        --join-se: var(--radius-field);
        --join-es: 0;
        --join-ee: var(--radius-field);
      }
    }
    > .join-item:where(:only-child) {
      --join-ss: var(--radius-field);
      --join-se: var(--radius-field);
      --join-es: var(--radius-field);
      --join-ee: var(--radius-field);
    }
    :only-child {
      :where(.join-item) {
        --join-ss: var(--radius-field);
        --join-se: var(--radius-field);
        --join-es: var(--radius-field);
        --join-ee: var(--radius-field);
      }
    }
  }
  .chat {
    @layer daisyui.component {
      display: grid;
      column-gap: calc(0.25rem * 3);
      padding-block: calc(0.25rem * 1);
      --mask-chat: url("data:image/svg+xml,%3csvg width='13' height='13' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M0 11.5004C0 13.0004 2 13.0004 2 13.0004H12H13V0.00036329L12.5 0C12.5 0 11.977 2.09572 11.8581 2.50033C11.6075 3.35237 10.9149 4.22374 9 5.50036C6 7.50036 0 10.0004 0 11.5004Z'/%3e%3c/svg%3e");
    }
  }
  .avatar-group {
    @layer daisyui.component {
      display: flex;
      overflow: hidden;
      .avatar {
        overflow: hidden;
        border-radius: calc(infinity * 1px);
        border: 4px solid var(--color-base-100);
      }
    }
  }
  .prose {
    :root & {
      --tw-prose-body: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-body: color-mix(in oklab, var(--color-base-content) 80%, #0000);
      }
      --tw-prose-headings: var(--color-base-content);
      --tw-prose-lead: var(--color-base-content);
      --tw-prose-links: var(--color-base-content);
      --tw-prose-bold: var(--color-base-content);
      --tw-prose-counters: var(--color-base-content);
      --tw-prose-bullets: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-bullets: color-mix(in oklab, var(--color-base-content) 50%, #0000);
      }
      --tw-prose-hr: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-hr: color-mix(in oklab, var(--color-base-content) 20%, #0000);
      }
      --tw-prose-quotes: var(--color-base-content);
      --tw-prose-quote-borders: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-quote-borders: color-mix(in oklab, var(--color-base-content) 20%, #0000);
      }
      --tw-prose-captions: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-captions: color-mix(in oklab, var(--color-base-content) 50%, #0000);
      }
      --tw-prose-code: var(--color-base-content);
      --tw-prose-pre-code: var(--color-neutral-content);
      --tw-prose-pre-bg: var(--color-neutral);
      --tw-prose-th-borders: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-th-borders: color-mix(in oklab, var(--color-base-content) 50%, #0000);
      }
      --tw-prose-td-borders: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-td-borders: color-mix(in oklab, var(--color-base-content) 20%, #0000);
      }
      --tw-prose-kbd: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-kbd: color-mix(in oklab, var(--color-base-content) 80%, #0000);
      }
      :where(code):not(pre > code) {
        background-color: var(--color-base-200);
        border-radius: var(--radius-selector);
        border: var(--border) solid var(--color-base-300);
        padding-inline: 0.5em;
        font-weight: inherit;
        &:before, &:after {
          display: none;
        }
      }
    }
  }
  .mask {
    @layer daisyui.component {
      display: inline-block;
      vertical-align: middle;
      mask-size: contain;
      mask-repeat: no-repeat;
      mask-position: center;
    }
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline {
    display: inline;
  }
  .inline-block {
    display: inline-block;
  }
  .inline-flex {
    display: inline-flex;
  }
  .inline-grid {
    display: inline-grid;
  }
  .table {
    display: table;
  }
  .cloth-title {
    aspect-ratio: 2.56;
    clip-path: shape(from 100% 22.62%,curve to 98.8% 3.73% with 100% 12.25%/100% 7.06%,curve to 98.54% 3.08% with 98.72% 3.5%/98.63% 3.29%,curve to 91.16% 0% with 97.24% 0%/95.22% 0%,hline to 8.84%,curve to 1.46% 3.08% with 4.78% 0%/2.76% 0%,curve to 1.2% 3.73% with 1.37% 3.29%/1.28% 3.5%,curve to 0% 22.62% with 0% 7.06%/0% 12.25%,vline to 57.61%,curve to 1.2% 76.51% with 0% 67.99%/0% 73.17%,curve to 1.46% 77.15% with 1.28% 76.73%/1.37% 76.95%,curve to 8.84% 80.23% with 2.76% 80.23%/4.78% 80.23%,line to 38.39% 80.23%,curve to 40.58% 80.53% with 39.51% 80.23%/40.08% 80.23%,curve to 43.24% 85.06% with 41.65% 81.17%/42.59% 82.78%,curve to 44.19% 90.12% with 43.54% 86.13%/43.76% 87.46%,curve to 45.14% 95.18% with 44.62% 92.77%/44.84% 94.1%,curve to 47.8% 99.7% with 45.79% 97.46%/46.73% 99.07%,curve to 49.99% 100% with 48.3% 100%/48.87% 100%,hline to 91.16%,curve to 98.54% 96.92% with 95.22% 100%/97.24% 100%,curve to 98.8% 96.27% with 98.63% 96.71%/98.72% 96.5%,curve to 100% 77.38% with 100% 92.94%/100% 87.75%,vline to 22.62%,close);
  }
  .aspect-\(--slider-desktop-aspect\) {
    aspect-ratio: var(--slider-desktop-aspect);
  }
  .aspect-774\/425 {
    aspect-ratio: 774/425;
  }
  .aspect-774\/636 {
    aspect-ratio: 774/636;
  }
  .aspect-774\/637 {
    aspect-ratio: 774/637;
  }
  .aspect-square {
    aspect-ratio: 1 / 1;
  }
  .modal-bottom {
    @layer daisyui.modifier {
      place-items: end;
      .modal-box {
        height: auto;
        width: 100%;
        max-width: none;
        max-height: calc(100vh - 5em);
        translate: 0 100%;
        scale: 1;
        --modal-tl: var(--radius-box);
        --modal-tr: var(--radius-box);
        --modal-bl: 0;
        --modal-br: 0;
      }
    }
  }
  .modal-end {
    @layer daisyui.modifier {
      place-items: end;
      .modal-box {
        height: 100vh;
        max-height: none;
        width: auto;
        max-width: none;
        translate: 100% 0;
        scale: 1;
        --modal-tl: var(--radius-box);
        --modal-tr: 0;
        --modal-bl: var(--radius-box);
        --modal-br: 0;
      }
    }
  }
  .modal-middle {
    @layer daisyui.modifier {
      place-items: center;
      .modal-box {
        height: auto;
        width: calc(11/12 * 100%);
        max-width: 32rem;
        max-height: calc(100vh - 5em);
        translate: 0 2%;
        scale: 98%;
        --modal-tl: var(--radius-box);
        --modal-tr: var(--radius-box);
        --modal-bl: var(--radius-box);
        --modal-br: var(--radius-box);
      }
    }
  }
  .modal-start {
    @layer daisyui.modifier {
      place-items: start;
      .modal-box {
        height: 100vh;
        max-height: none;
        width: auto;
        max-width: none;
        translate: -100% 0;
        scale: 1;
        --modal-tl: 0;
        --modal-tr: var(--radius-box);
        --modal-bl: 0;
        --modal-br: var(--radius-box);
      }
    }
  }
  .modal-top {
    @layer daisyui.modifier {
      place-items: start;
      .modal-box {
        height: auto;
        width: 100%;
        max-width: none;
        max-height: calc(100vh - 5em);
        translate: 0 -100%;
        scale: 1;
        --modal-tl: 0;
        --modal-tr: 0;
        --modal-bl: var(--radius-box);
        --modal-br: var(--radius-box);
      }
    }
  }
  .card-side {
    @layer daisyui.modifier {
      align-items: stretch;
      flex-direction: row;
      :where(figure:first-child) {
        overflow: hidden;
        border-start-start-radius: inherit;
        border-start-end-radius: unset;
        border-end-start-radius: inherit;
        border-end-end-radius: unset;
      }
      :where(figure:last-child) {
        overflow: hidden;
        border-start-start-radius: unset;
        border-start-end-radius: inherit;
        border-end-start-radius: unset;
        border-end-end-radius: inherit;
      }
      figure > * {
        max-width: unset;
      }
      :where(figure > *) {
        width: 100%;
        height: 100%;
        object-fit: cover;
      }
    }
  }
  .divider-horizontal {
    @layer daisyui.modifier {
      --divider-m: 0 1rem;
      &.divider {
        height: auto;
        width: calc(0.25rem * 4);
        flex-direction: column;
        &:before {
          height: 100%;
          width: calc(0.25rem * 0.5);
        }
        &:after {
          height: 100%;
          width: calc(0.25rem * 0.5);
        }
      }
    }
  }
  .divider-vertical {
    @layer daisyui.modifier {
      --divider-m: 1rem 0;
      &.divider {
        height: calc(0.25rem * 4);
        width: auto;
        flex-direction: row;
        &:before {
          height: calc(0.25rem * 0.5);
          width: 100%;
        }
        &:after {
          height: calc(0.25rem * 0.5);
          width: 100%;
        }
      }
    }
  }
  .btn-circle {
    @layer daisyui.modifier {
      border-radius: calc(infinity * 1px);
      padding-inline: calc(0.25rem * 0);
      width: var(--size);
      height: var(--size);
    }
  }
  .btn-square {
    @layer daisyui.modifier {
      padding-inline: calc(0.25rem * 0);
      width: var(--size);
      height: var(--size);
    }
  }
  .size-6 {
    width: calc(var(--spacing) * 6);
    height: calc(var(--spacing) * 6);
  }
  .size-8 {
    width: calc(var(--spacing) * 8);
    height: calc(var(--spacing) * 8);
  }
  .size-fit {
    width: fit-content;
    height: fit-content;
  }
  .size-full {
    width: 100%;
    height: 100%;
  }
  .status-lg {
    @layer daisyui.modifier {
      width: calc(0.25rem * 3);
      height: calc(0.25rem * 3);
    }
  }
  .status-md {
    @layer daisyui.modifier {
      width: calc(0.25rem * 2);
      height: calc(0.25rem * 2);
    }
  }
  .status-sm {
    @layer daisyui.modifier {
      width: calc(0.25rem * 1);
      height: calc(0.25rem * 1);
    }
  }
  .status-xl {
    @layer daisyui.modifier {
      width: calc(0.25rem * 4);
      height: calc(0.25rem * 4);
    }
  }
  .status-xs {
    @layer daisyui.modifier {
      width: calc(0.25rem * 0.5);
      height: calc(0.25rem * 0.5);
    }
  }
  .dock-md {
    @layer daisyui.modifier {
      height: 4rem;
      height: calc(4rem + env(safe-area-inset-bottom));
      .dock-label {
        font-size: 0.6875rem;
      }
    }
  }
  .h-1 {
    height: calc(var(--spacing) * 1);
  }
  .h-2 {
    height: calc(var(--spacing) * 2);
  }
  .h-3 {
    height: calc(var(--spacing) * 3);
  }
  .h-5 {
    height: calc(var(--spacing) * 5);
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-7 {
    height: calc(var(--spacing) * 7);
  }
  .h-8 {
    height: calc(var(--spacing) * 8);
  }
  .h-9 {
    height: calc(var(--spacing) * 9);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-12 {
    height: calc(var(--spacing) * 12);
  }
  .h-20 {
    height: calc(var(--spacing) * 20);
  }
  .h-\[100px\] {
    height: 100px;
  }
  .h-\[270px\] {
    height: 270px;
  }
  .h-\[300px\] {
    height: 300px;
  }
  .h-\[381px\] {
    height: 381px;
  }
  .h-\[455px\] {
    height: 455px;
  }
  .h-\[480px\] {
    height: 480px;
  }
  .h-\[500px\] {
    height: 500px;
  }
  .h-\[551px\] {
    height: 551px;
  }
  .h-\[620px\] {
    height: 620px;
  }
  .h-\[850px\] {
    height: 850px;
  }
  .h-\[900px\] {
    height: 900px;
  }
  .h-\[1050px\] {
    height: 1050px;
  }
  .h-\[1560px\] {
    height: 1560px;
  }
  .h-\[1700px\] {
    height: 1700px;
  }
  .h-\[2000px\] {
    height: 2000px;
  }
  .h-auto {
    height: auto;
  }
  .h-full {
    height: 100%;
  }
  .max-h-svh {
    max-height: 100svh;
  }
  .max-h-svw {
    max-height: 100svw;
  }
  .mobile-ul-drawer {
    min-height: 100%;
    width: fit-content;
    justify-content: center;
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .min-h-96 {
    min-height: calc(var(--spacing) * 96);
  }
  .min-h-\[135px\] {
    min-height: 135px;
  }
  .min-h-\[152px\] {
    min-height: 152px;
  }
  .min-h-\[480px\] {
    min-height: 480px;
  }
  .min-h-\[530px\] {
    min-height: 530px;
  }
  .min-h-\[630px\] {
    min-height: 630px;
  }
  .min-h-\[750px\] {
    min-height: 750px;
  }
  .btn-wide {
    @layer daisyui.modifier {
      width: 100%;
      max-width: calc(0.25rem * 64);
    }
  }
  .cally {
    @layer daisyui.component {
      font-size: 0.7rem;
      &::part(container) {
        padding: 0.5rem 1rem;
        user-select: none;
      }
      ::part(th) {
        font-weight: normal;
        block-size: auto;
      }
      &::part(header) {
        direction: ltr;
      }
      ::part(head) {
        opacity: 0.5;
        font-size: 0.7rem;
      }
      &::part(button) {
        border-radius: var(--radius-field);
        border: none;
        padding: 0.5rem;
        background: #0000;
      }
      &::part(button):hover {
        background: var(--color-base-200);
      }
      ::part(day) {
        border-radius: var(--radius-field);
        font-size: 0.7rem;
      }
      ::part(day):hover {
        &:not(selected, today) {
          background: var(--color-base-200);
        }
      }
      ::part(button day today) {
        background: var(--color-primary);
        color: var(--color-primary-content);
      }
      ::part(selected) {
        color: var(--color-base-100);
        background: var(--color-base-content);
        border-radius: var(--radius-field);
      }
      ::part(range-inner) {
        border-radius: 0;
      }
      ::part(range-start) {
        border-start-end-radius: 0;
        border-end-end-radius: 0;
      }
      ::part(range-end) {
        border-start-start-radius: 0;
        border-end-start-radius: 0;
      }
      ::part(range-start range-end) {
        border-radius: var(--radius-field);
      }
      calendar-month {
        width: 100%;
      }
    }
  }
  .dock-active {
    @layer daisyui.modifier {
      &:after {
        width: calc(0.25rem * 10);
        background-color: currentcolor;
        color: currentcolor;
      }
    }
  }
  .rating-half {
    @layer daisyui.modifier {
      &.rating-xs *:not(.rating-hidden) {
        width: calc(0.25rem * 2);
      }
      &.rating-sm *:not(.rating-hidden) {
        width: calc(0.25rem * 2.5);
      }
      &.rating-md *:not(.rating-hidden) {
        width: calc(0.25rem * 3);
      }
      &.rating-lg *:not(.rating-hidden) {
        width: .875rem;
      }
      &.rating-xl *:not(.rating-hidden) {
        width: calc(0.25rem * 4);
      }
    }
  }
  .btn-block {
    @layer daisyui.modifier {
      width: 100%;
    }
  }
  .loading-lg {
    @layer daisyui.modifier {
      width: calc(var(--size-selector, 0.25rem) * 7);
    }
  }
  .loading-md {
    @layer daisyui.modifier {
      width: calc(var(--size-selector, 0.25rem) * 6);
    }
  }
  .loading-sm {
    @layer daisyui.modifier {
      width: calc(var(--size-selector, 0.25rem) * 5);
    }
  }
  .loading-xl {
    @layer daisyui.modifier {
      width: calc(var(--size-selector, 0.25rem) * 8);
    }
  }
  .loading-xs {
    @layer daisyui.modifier {
      width: calc(var(--size-selector, 0.25rem) * 4);
    }
  }
  .w-1 {
    width: calc(var(--spacing) * 1);
  }
  .w-1\/2 {
    width: calc(1/2 * 100%);
  }
  .w-2 {
    width: calc(var(--spacing) * 2);
  }
  .w-3 {
    width: calc(var(--spacing) * 3);
  }
  .w-5 {
    width: calc(var(--spacing) * 5);
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-6\/7 {
    width: calc(6/7 * 100%);
  }
  .w-7 {
    width: calc(var(--spacing) * 7);
  }
  .w-10 {
    width: calc(var(--spacing) * 10);
  }
  .w-12 {
    width: calc(var(--spacing) * 12);
  }
  .w-20 {
    width: calc(var(--spacing) * 20);
  }
  .w-\[90\%\] {
    width: 90%;
  }
  .w-\[90px\] {
    width: 90px;
  }
  .w-\[110px\] {
    width: 110px;
  }
  .w-\[454px\] {
    width: 454px;
  }
  .w-\[calc\(100\%-2rem\)\] {
    width: calc(100% - 2rem);
  }
  .w-full {
    width: 100%;
  }
  .w-max {
    width: max-content;
  }
  .max-w-2xl {
    max-width: var(--container-2xl);
  }
  .max-w-4xl {
    max-width: var(--container-4xl);
  }
  .max-w-6xl {
    max-width: var(--container-6xl);
  }
  .max-w-7xl {
    max-width: var(--container-7xl);
  }
  .max-w-8xl {
    max-width: var(--container-8xl);
  }
  .max-w-screen {
    max-width: 100vw;
  }
  .max-w-svw {
    max-width: 100svw;
  }
  .min-w-full {
    min-width: 100%;
  }
  .min-w-max {
    min-width: max-content;
  }
  .min-w-screen {
    min-width: 100vw;
  }
  .flex-none {
    flex: none;
  }
  .flex-shrink {
    flex-shrink: 1;
  }
  .shrink-0 {
    flex-shrink: 0;
  }
  .flex-grow {
    flex-grow: 1;
  }
  .grow {
    flex-grow: 1;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .btn {
    background-color: color-mix(in srgb, #fff 8%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 8%, transparent);
    }
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
    color: color-mix(in srgb, #000 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-black) 40%, transparent);
    }
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
    outline-offset: 2px;
    outline-color: color-mix(in srgb, #fff 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      outline-color: color-mix(in oklab, var(--color-white) 15%, transparent);
    }
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 200ms;
    transition-duration: 200ms;
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 105%;
        --tw-scale-y: 105%;
        --tw-scale-z: 105%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
        background-color: color-mix(in srgb, #fff 30%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 30%, transparent);
        }
        color: color-mix(in srgb, #fff 70%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-white) 70%, transparent);
        }
        outline-style: var(--tw-outline-style);
        outline-width: 2px;
        outline-offset: 2px;
        outline-color: color-mix(in srgb, #fff 15%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          outline-color: color-mix(in oklab, var(--color-white) 15%, transparent);
        }
      }
    }
    &:focus {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
      outline-offset: 2px;
      outline-color: color-mix(in srgb, #fff 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        outline-color: color-mix(in oklab, var(--color-white) 20%, transparent);
      }
    }
    &:active {
      --tw-scale-x: 95%;
      --tw-scale-y: 95%;
      --tw-scale-z: 95%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
      background-color: color-mix(in srgb, #fff 12%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 12%, transparent);
      }
      color: color-mix(in srgb, #fff 60%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-white) 60%, transparent);
      }
      outline-style: var(--tw-outline-style);
      outline-width: 3px;
      outline-offset: 4px;
      outline-color: color-mix(in srgb, #fff 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        outline-color: color-mix(in oklab, var(--color-white) 25%, transparent);
      }
    }
    &:disabled {
      cursor: not-allowed;
      background-color: color-mix(in srgb, #fff 2%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 2%, transparent);
      }
      color: color-mix(in srgb, #000 12%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-black) 12%, transparent);
      }
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
      outline-offset: 3px;
      outline-color: color-mix(in srgb, #fff 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        outline-color: color-mix(in oklab, var(--color-white) 5%, transparent);
      }
    }
  }
  .scale-95 {
    --tw-scale-x: 95%;
    --tw-scale-y: 95%;
    --tw-scale-z: 95%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-105 {
    --tw-scale-x: 105%;
    --tw-scale-y: 105%;
    --tw-scale-z: 105%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .swap-rotate {
    @layer daisyui.modifier {
      .swap-on, input:indeterminate ~ .swap-on {
        rotate: 45deg;
      }
      input:is(:checked, :indeterminate) ~ .swap-on, &.swap-active .swap-on {
        rotate: 0deg;
      }
      input:is(:checked, :indeterminate) ~ .swap-off, &.swap-active .swap-off {
        rotate: calc(45deg * -1);
      }
    }
  }
  .swap-flip {
    @layer daisyui.modifier {
      transform-style: preserve-3d;
      perspective: 20rem;
      .swap-on, .swap-indeterminate, input:indeterminate ~ .swap-on {
        transform: rotateY(180deg);
        backface-visibility: hidden;
      }
      input:is(:checked, :indeterminate) ~ .swap-on, &.swap-active .swap-on {
        transform: rotateY(0deg);
      }
      input:is(:checked, :indeterminate) ~ .swap-off, &.swap-active .swap-off {
        transform: rotateY(-180deg);
        backface-visibility: hidden;
        opacity: 100%;
      }
    }
  }
  .gpu {
    transform: translate3d(0, 0, 0);
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .transform-gpu {
    transform: translateZ(0) var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .skeleton {
    @layer daisyui.component {
      border-radius: var(--radius-box);
      background-color: var(--color-base-300);
      @media (prefers-reduced-motion: reduce) {
        transition-duration: 15s;
      }
      will-change: background-position;
      background-image: linear-gradient( 105deg, #0000 0% 40%, var(--color-base-100) 50%, #0000 60% 100% );
      background-size: 200% auto;
      background-repeat: no-repeat;
      background-position-x: -50%;
      @media (prefers-reduced-motion: no-preference) {
        animation: skeleton 1.8s ease-in-out infinite;
      }
    }
  }
  .reduced-motion {
    animation: none !important;
    transition: none !important;
  }
  .stopped {
    animation: none !important;
  }
  .link {
    @layer daisyui.component {
      cursor: pointer;
      text-decoration-line: underline;
      &:focus {
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
      }
      &:focus-visible {
        outline: 2px solid currentColor;
        outline-offset: 2px;
      }
    }
  }
  .cursor-not-allowed {
    cursor: not-allowed;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .resize {
    resize: both;
  }
  .resize-none {
    resize: none;
  }
  .carousel-horizontal {
    @layer daisyui.modifier {
      flex-direction: row;
      overflow-x: scroll;
      scroll-snap-type: x mandatory;
    }
  }
  .carousel-vertical {
    @layer daisyui.modifier {
      flex-direction: column;
      overflow-y: scroll;
      scroll-snap-type: y mandatory;
    }
  }
  .carousel-center {
    @layer daisyui.modifier {
      .carousel-item {
        scroll-snap-align: center;
      }
    }
  }
  .carousel-end {
    @layer daisyui.modifier {
      .carousel-item {
        scroll-snap-align: end;
      }
    }
  }
  .carousel-start {
    @layer daisyui.modifier {
      .carousel-item {
        scroll-snap-align: start;
      }
    }
  }
  .scroll-ms-4 {
    scroll-margin-inline-start: calc(var(--spacing) * 4);
  }
  .scroll-ms-6 {
    scroll-margin-inline-start: calc(var(--spacing) * 6);
  }
  .alert-horizontal {
    @layer daisyui.modifier {
      justify-content: start;
      justify-items: start;
      grid-auto-flow: column;
      grid-template-columns: auto;
      text-align: start;
      &:has(:nth-child(2)) {
        grid-template-columns: auto minmax(auto, 1fr);
      }
    }
  }
  .alert-vertical {
    @layer daisyui.modifier {
      justify-content: center;
      justify-items: center;
      grid-auto-flow: row;
      grid-template-columns: auto;
      text-align: center;
      &:has(:nth-child(2)) {
        grid-template-columns: auto;
      }
    }
  }
  .stats-horizontal {
    @layer daisyui.modifier {
      grid-auto-flow: column;
      overflow-x: auto;
      .stat:not(:last-child) {
        border-inline-end: var(--border) dashed currentColor;
        @supports (color: color-mix(in lab, red, red)) {
          border-inline-end: var(--border) dashed color-mix(in oklab, currentColor 10%, #0000);
        }
        border-block-end: none;
      }
    }
  }
  .stats-vertical {
    @layer daisyui.modifier {
      grid-auto-flow: row;
      overflow-y: auto;
      .stat:not(:last-child) {
        border-inline-end: none;
        border-block-end: var(--border) dashed currentColor;
        @supports (color: color-mix(in lab, red, red)) {
          border-block-end: var(--border) dashed color-mix(in oklab, currentColor 10%, #0000);
        }
      }
    }
  }
  .footer-horizontal {
    @layer daisyui.modifier {
      grid-auto-flow: column;
      &.footer-center {
        grid-auto-flow: row dense;
      }
    }
  }
  .footer-vertical {
    @layer daisyui.modifier {
      grid-auto-flow: row;
      &.footer-center {
        grid-auto-flow: column dense;
      }
    }
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  .grid-rows-3 {
    grid-template-rows: repeat(3, minmax(0, 1fr));
  }
  .grid-rows-15 {
    grid-template-rows: repeat(15, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-row {
    flex-direction: row;
  }
  .flex-row-reverse {
    flex-direction: row-reverse;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .place-content-between {
    place-content: space-between;
  }
  .content-between {
    align-content: space-between;
  }
  .content-center {
    align-content: center;
  }
  .content-center-safe {
    align-content: safe center;
  }
  .content-stretch {
    align-content: stretch;
  }
  .items-center {
    align-items: center;
  }
  .items-center-safe {
    align-items: safe center;
  }
  .items-end {
    align-items: flex-end;
  }
  .items-start {
    align-items: flex-start;
  }
  .items-stretch {
    align-items: stretch;
  }
  .justify-baseline {
    justify-content: baseline;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-center-safe {
    justify-content: safe center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .justify-stretch {
    justify-content: stretch;
  }
  .gap-0 {
    gap: calc(var(--spacing) * 0);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .gap-12 {
    gap: calc(var(--spacing) * 12);
  }
  .gap-14 {
    gap: calc(var(--spacing) * 14);
  }
  .gap-16 {
    gap: calc(var(--spacing) * 16);
  }
  .gap-24 {
    gap: calc(var(--spacing) * 24);
  }
  .space-y-4 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-6 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-8 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .gap-x-2 {
    column-gap: calc(var(--spacing) * 2);
  }
  .gap-x-4 {
    column-gap: calc(var(--spacing) * 4);
  }
  .gap-x-6 {
    column-gap: calc(var(--spacing) * 6);
  }
  .gap-y-3 {
    row-gap: calc(var(--spacing) * 3);
  }
  .gap-y-12 {
    row-gap: calc(var(--spacing) * 12);
  }
  .self-center {
    align-self: center;
  }
  .self-center-safe {
    align-self: safe center;
  }
  .self-end {
    align-self: flex-end;
  }
  .self-start {
    align-self: flex-start;
  }
  .self-stretch {
    align-self: stretch;
  }
  .overflow-clip {
    overflow: clip;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-visible {
    overflow: visible;
  }
  .overflow-x-clip {
    overflow-x: clip;
  }
  .overflow-y-clip {
    overflow-y: clip;
  }
  .overscroll-x-none {
    overscroll-behavior-x: none;
  }
  .timeline-box {
    @layer daisyui.component {
      border: var(--border) solid;
      border-radius: var(--radius-box);
      border-color: var(--color-base-300);
      background-color: var(--color-base-100);
      padding-inline: calc(0.25rem * 4);
      padding-block: calc(0.25rem * 2);
      font-size: 0.75rem;
      box-shadow: 0 1px 2px 0 oklch(0% 0 0/0.05);
    }
  }
  .menu-lg {
    @layer daisyui.modifier {
      :where(li:not(.menu-title) > *:not(ul, details, .menu-title)), :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
        border-radius: var(--radius-field);
        padding-inline: calc(0.25rem * 4);
        padding-block: calc(0.25rem * 1.5);
        font-size: 1.125rem;
      }
      .menu-title {
        padding-inline: calc(0.25rem * 6);
        padding-block: calc(0.25rem * 3);
      }
    }
  }
  .menu-md {
    @layer daisyui.modifier {
      :where(li:not(.menu-title) > *:not(ul, details, .menu-title)), :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
        border-radius: var(--radius-field);
        padding-inline: calc(0.25rem * 3);
        padding-block: calc(0.25rem * 1.5);
        font-size: 0.875rem;
      }
      .menu-title {
        padding-inline: calc(0.25rem * 3);
        padding-block: calc(0.25rem * 2);
      }
    }
  }
  .menu-sm {
    @layer daisyui.modifier {
      :where(li:not(.menu-title) > *:not(ul, details, .menu-title)), :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
        border-radius: var(--radius-field);
        padding-inline: calc(0.25rem * 2.5);
        padding-block: calc(0.25rem * 1);
        font-size: 0.75rem;
      }
      .menu-title {
        padding-inline: calc(0.25rem * 3);
        padding-block: calc(0.25rem * 2);
      }
    }
  }
  .menu-xl {
    @layer daisyui.modifier {
      :where(li:not(.menu-title) > *:not(ul, details, .menu-title)), :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
        border-radius: var(--radius-field);
        padding-inline: calc(0.25rem * 5);
        padding-block: calc(0.25rem * 1.5);
        font-size: 1.375rem;
      }
      .menu-title {
        padding-inline: calc(0.25rem * 6);
        padding-block: calc(0.25rem * 3);
      }
    }
  }
  .menu-xs {
    @layer daisyui.modifier {
      :where(li:not(.menu-title) > *:not(ul, details, .menu-title)), :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
        border-radius: var(--radius-field);
        padding-inline: calc(0.25rem * 2);
        padding-block: calc(0.25rem * 1);
        font-size: 0.6875rem;
      }
      .menu-title {
        padding-inline: calc(0.25rem * 2);
        padding-block: calc(0.25rem * 1);
      }
    }
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-box {
    border-radius: var(--radius-box);
  }
  .rounded-box {
    border-radius: var(--radius-box);
  }
  .rounded-field {
    border-radius: var(--radius-field);
  }
  .rounded-field {
    border-radius: var(--radius-field);
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-selector {
    border-radius: var(--radius-selector);
  }
  .rounded-selector {
    border-radius: var(--radius-selector);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .rounded-t-box {
    border-top-left-radius: var(--radius-box);
    border-top-right-radius: var(--radius-box);
  }
  .rounded-t-box {
    border-top-left-radius: var(--radius-box);
    border-top-right-radius: var(--radius-box);
  }
  .rounded-t-field {
    border-top-left-radius: var(--radius-field);
    border-top-right-radius: var(--radius-field);
  }
  .rounded-t-field {
    border-top-left-radius: var(--radius-field);
    border-top-right-radius: var(--radius-field);
  }
  .rounded-t-selector {
    border-top-left-radius: var(--radius-selector);
    border-top-right-radius: var(--radius-selector);
  }
  .rounded-t-selector {
    border-top-left-radius: var(--radius-selector);
    border-top-right-radius: var(--radius-selector);
  }
  .rounded-l-box {
    border-top-left-radius: var(--radius-box);
    border-bottom-left-radius: var(--radius-box);
  }
  .rounded-l-box {
    border-top-left-radius: var(--radius-box);
    border-bottom-left-radius: var(--radius-box);
  }
  .rounded-l-field {
    border-top-left-radius: var(--radius-field);
    border-bottom-left-radius: var(--radius-field);
  }
  .rounded-l-field {
    border-top-left-radius: var(--radius-field);
    border-bottom-left-radius: var(--radius-field);
  }
  .rounded-l-selector {
    border-top-left-radius: var(--radius-selector);
    border-bottom-left-radius: var(--radius-selector);
  }
  .rounded-l-selector {
    border-top-left-radius: var(--radius-selector);
    border-bottom-left-radius: var(--radius-selector);
  }
  .rounded-tl-box {
    border-top-left-radius: var(--radius-box);
  }
  .rounded-tl-box {
    border-top-left-radius: var(--radius-box);
  }
  .rounded-tl-field {
    border-top-left-radius: var(--radius-field);
  }
  .rounded-tl-field {
    border-top-left-radius: var(--radius-field);
  }
  .rounded-tl-selector {
    border-top-left-radius: var(--radius-selector);
  }
  .rounded-tl-selector {
    border-top-left-radius: var(--radius-selector);
  }
  .rounded-r-box {
    border-top-right-radius: var(--radius-box);
    border-bottom-right-radius: var(--radius-box);
  }
  .rounded-r-box {
    border-top-right-radius: var(--radius-box);
    border-bottom-right-radius: var(--radius-box);
  }
  .rounded-r-field {
    border-top-right-radius: var(--radius-field);
    border-bottom-right-radius: var(--radius-field);
  }
  .rounded-r-field {
    border-top-right-radius: var(--radius-field);
    border-bottom-right-radius: var(--radius-field);
  }
  .rounded-r-selector {
    border-top-right-radius: var(--radius-selector);
    border-bottom-right-radius: var(--radius-selector);
  }
  .rounded-r-selector {
    border-top-right-radius: var(--radius-selector);
    border-bottom-right-radius: var(--radius-selector);
  }
  .rounded-tr-box {
    border-top-right-radius: var(--radius-box);
  }
  .rounded-tr-box {
    border-top-right-radius: var(--radius-box);
  }
  .rounded-tr-field {
    border-top-right-radius: var(--radius-field);
  }
  .rounded-tr-field {
    border-top-right-radius: var(--radius-field);
  }
  .rounded-tr-selector {
    border-top-right-radius: var(--radius-selector);
  }
  .rounded-tr-selector {
    border-top-right-radius: var(--radius-selector);
  }
  .rounded-b-box {
    border-bottom-left-radius: var(--radius-box);
    border-bottom-right-radius: var(--radius-box);
  }
  .rounded-b-box {
    border-bottom-right-radius: var(--radius-box);
    border-bottom-left-radius: var(--radius-box);
  }
  .rounded-b-field {
    border-bottom-left-radius: var(--radius-field);
    border-bottom-right-radius: var(--radius-field);
  }
  .rounded-b-field {
    border-bottom-right-radius: var(--radius-field);
    border-bottom-left-radius: var(--radius-field);
  }
  .rounded-b-selector {
    border-bottom-left-radius: var(--radius-selector);
    border-bottom-right-radius: var(--radius-selector);
  }
  .rounded-b-selector {
    border-bottom-right-radius: var(--radius-selector);
    border-bottom-left-radius: var(--radius-selector);
  }
  .rounded-br-box {
    border-bottom-right-radius: var(--radius-box);
  }
  .rounded-br-box {
    border-bottom-right-radius: var(--radius-box);
  }
  .rounded-br-field {
    border-bottom-right-radius: var(--radius-field);
  }
  .rounded-br-field {
    border-bottom-right-radius: var(--radius-field);
  }
  .rounded-br-selector {
    border-bottom-right-radius: var(--radius-selector);
  }
  .rounded-br-selector {
    border-bottom-right-radius: var(--radius-selector);
  }
  .rounded-bl-box {
    border-bottom-left-radius: var(--radius-box);
  }
  .rounded-bl-box {
    border-bottom-left-radius: var(--radius-box);
  }
  .rounded-bl-field {
    border-bottom-left-radius: var(--radius-field);
  }
  .rounded-bl-field {
    border-bottom-left-radius: var(--radius-field);
  }
  .rounded-bl-selector {
    border-bottom-left-radius: var(--radius-selector);
  }
  .rounded-bl-selector {
    border-bottom-left-radius: var(--radius-selector);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-0 {
    border-style: var(--tw-border-style);
    border-width: 0px;
  }
  .border-t-2 {
    border-top-style: var(--tw-border-style);
    border-top-width: 2px;
  }
  .border-r {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-l-2 {
    border-left-style: var(--tw-border-style);
    border-left-width: 2px;
  }
  .border-l-4 {
    border-left-style: var(--tw-border-style);
    border-left-width: 4px;
  }
  .badge-dash {
    @layer daisyui.modifier {
      color: var(--badge-color);
      --badge-bg: #0000;
      background-image: none;
      border-color: currentColor;
      border-style: dashed;
    }
  }
  .alert-dash {
    @layer daisyui.style {
      background-color: transparent;
      color: var(--alert-color);
      border-style: dashed;
      box-shadow: none;
      background-image: none;
    }
  }
  .btn-dash {
    @layer daisyui.modifier {
      &:not( .btn-active, :hover, :active:focus, :focus-visible, :disabled, [disabled], .btn-disabled, :checked ) {
        --btn-shadow: "";
        border-style: dashed;
        --btn-bg: #0000;
        --btn-fg: var(--btn-color);
        --btn-border: var(--btn-color);
        --btn-noise: none;
      }
      @media (hover: none) {
        &:hover:not( .btn-active, :active, :focus-visible, :disabled, [disabled], .btn-disabled, :checked ) {
          --btn-shadow: "";
          border-style: dashed;
          --btn-bg: #0000;
          --btn-fg: var(--btn-color);
          --btn-border: var(--btn-color);
          --btn-noise: none;
        }
      }
    }
  }
  .badge-ghost {
    @layer daisyui.modifier {
      border-color: var(--color-base-200);
      background-color: var(--color-base-200);
      color: var(--color-base-content);
      background-image: none;
    }
  }
  .badge-soft {
    @layer daisyui.modifier {
      color: var(--badge-color, var(--color-base-content));
      background-color: var(--badge-color, var(--color-base-content));
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix( in oklab, var(--badge-color, var(--color-base-content)) 8%, var(--color-base-100) );
      }
      border-color: var(--badge-color, var(--color-base-content));
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix( in oklab, var(--badge-color, var(--color-base-content)) 10%, var(--color-base-100) );
      }
      background-image: none;
    }
  }
  .select-ghost {
    @layer daisyui.modifier {
      background-color: transparent;
      transition: background-color 0.2s;
      box-shadow: none;
      border-color: #0000;
      &:focus, &:focus-within {
        background-color: var(--color-base-100);
        color: var(--color-base-content);
        border-color: #0000;
        box-shadow: none;
      }
    }
  }
  .input-ghost {
    @layer daisyui.modifier {
      background-color: transparent;
      box-shadow: none;
      border-color: #0000;
      &:focus, &:focus-within {
        background-color: var(--color-base-100);
        color: var(--color-base-content);
        border-color: #0000;
        box-shadow: none;
      }
    }
  }
  .textarea-ghost {
    @layer daisyui.modifier {
      background-color: transparent;
      box-shadow: none;
      border-color: #0000;
      &:focus, &:focus-within {
        background-color: var(--color-base-100);
        color: var(--color-base-content);
        border-color: #0000;
        box-shadow: none;
      }
    }
  }
  .badge-outline {
    @layer daisyui.modifier {
      color: var(--badge-color);
      --badge-bg: #0000;
      background-image: none;
      border-color: currentColor;
    }
  }
  .border-\(--bg\) {
    border-color: var(--bg);
  }
  .border-\(--danger-2\) {
    border-color: var(--danger-2);
  }
  .border-\(--primary\) {
    border-color: var(--primary);
  }
  .border-\(--secondary-3\) {
    border-color: var(--secondary-3);
  }
  .border-\[\#AAD9FF\] {
    border-color: #AAD9FF;
  }
  .menu-active {
    :where(:not(ul, details, .menu-title, .btn))& {
      @layer daisyui.modifier {
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
        color: var(--menu-active-fg);
        background-color: var(--menu-active-bg);
        background-size: auto, calc(var(--noise) * 100%);
        background-image: none, var(--fx-noise);
      }
    }
  }
  .alert-outline {
    @layer daisyui.style {
      background-color: transparent;
      color: var(--alert-color);
      box-shadow: none;
      background-image: none;
    }
  }
  .glass {
    border: none;
    backdrop-filter: blur(var(--glass-blur, 40px));
    background-color: #0000;
    background-image: linear-gradient( 135deg, oklch(100% 0 0 / var(--glass-opacity, 30%)) 0%, oklch(0% 0 0 / 0%) 100% ), linear-gradient( var(--glass-reflect-degree, 100deg), oklch(100% 0 0 / var(--glass-reflect-opacity, 5%)) 25%, oklch(0% 0 0 / 0%) 25% );
    box-shadow: 0 0 0 1px oklch(100% 0 0 / var(--glass-border-opacity, 20%)) inset, 0 0 0 2px oklch(0% 0 0 / 5%);
    text-shadow: 0 1px oklch(0% 0 0 / var(--glass-text-shadow-opacity, 5%));
  }
  .chat-bubble-accent {
    @layer daisyui.modifier {
      background-color: var(--color-accent);
      color: var(--color-accent-content);
    }
  }
  .chat-bubble-error {
    @layer daisyui.modifier {
      background-color: var(--color-error);
      color: var(--color-error-content);
    }
  }
  .chat-bubble-info {
    @layer daisyui.modifier {
      background-color: var(--color-info);
      color: var(--color-info-content);
    }
  }
  .chat-bubble-neutral {
    @layer daisyui.modifier {
      background-color: var(--color-neutral);
      color: var(--color-neutral-content);
    }
  }
  .chat-bubble-primary {
    @layer daisyui.modifier {
      background-color: var(--color-primary);
      color: var(--color-primary-content);
    }
  }
  .chat-bubble-secondary {
    @layer daisyui.modifier {
      background-color: var(--color-secondary);
      color: var(--color-secondary-content);
    }
  }
  .chat-bubble-success {
    @layer daisyui.modifier {
      background-color: var(--color-success);
      color: var(--color-success-content);
    }
  }
  .chat-bubble-warning {
    @layer daisyui.modifier {
      background-color: var(--color-warning);
      color: var(--color-warning-content);
    }
  }
  .status-accent {
    @layer daisyui.modifier {
      background-color: var(--color-accent);
      color: var(--color-accent);
    }
  }
  .status-error {
    @layer daisyui.modifier {
      background-color: var(--color-error);
      color: var(--color-error);
    }
  }
  .status-info {
    @layer daisyui.modifier {
      background-color: var(--color-info);
      color: var(--color-info);
    }
  }
  .status-neutral {
    @layer daisyui.modifier {
      background-color: var(--color-neutral);
      color: var(--color-neutral);
    }
  }
  .status-primary {
    @layer daisyui.modifier {
      background-color: var(--color-primary);
      color: var(--color-primary);
    }
  }
  .status-secondary {
    @layer daisyui.modifier {
      background-color: var(--color-secondary);
      color: var(--color-secondary);
    }
  }
  .status-success {
    @layer daisyui.modifier {
      background-color: var(--color-success);
      color: var(--color-success);
    }
  }
  .status-warning {
    @layer daisyui.modifier {
      background-color: var(--color-warning);
      color: var(--color-warning);
    }
  }
  .table-zebra {
    @layer daisyui.modifier {
      tbody {
        tr {
          &:where(:nth-child(even)) {
            background-color: var(--color-base-200);
            :where(.table-pin-cols tr th) {
              background-color: var(--color-base-200);
            }
          }
          &.row-hover {
            &, &:where(:nth-child(even)) {
              &:hover {
                @media (hover: hover) {
                  background-color: var(--color-base-300);
                }
              }
            }
          }
        }
      }
    }
  }
  .bg-\(--card\) {
    background-color: var(--card);
  }
  .bg-bg {
    background-color: var(--bg);
  }
  .bg-bg-light {
    background-color: var(--bg-light);
  }
  .bg-card {
    background-color: var(--card);
  }
  .bg-primary {
    background-color: var(--color-primary);
  }
  .bg-surface {
    background-color: var(--surface);
  }
  .bg-surface-dark {
    background-color: var(--surface-dark);
  }
  .bg-transparent {
    background-color: transparent;
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-white\/8 {
    background-color: color-mix(in srgb, #fff 8%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 8%, transparent);
    }
  }
  .bg-white\/18 {
    background-color: color-mix(in srgb, #fff 18%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 18%, transparent);
    }
  }
  .bg-white\/20 {
    background-color: color-mix(in srgb, #fff 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }
  .bg-white\/30 {
    background-color: color-mix(in srgb, #fff 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 30%, transparent);
    }
  }
  .bg-white\/50 {
    background-color: color-mix(in srgb, #fff 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 50%, transparent);
    }
  }
  .divider-accent {
    @layer daisyui.modifier {
      &:before, &:after {
        background-color: var(--color-accent);
      }
    }
  }
  .divider-error {
    @layer daisyui.modifier {
      &:before, &:after {
        background-color: var(--color-error);
      }
    }
  }
  .divider-info {
    @layer daisyui.modifier {
      &:before, &:after {
        background-color: var(--color-info);
      }
    }
  }
  .divider-neutral {
    @layer daisyui.modifier {
      &:before, &:after {
        background-color: var(--color-neutral);
      }
    }
  }
  .divider-primary {
    @layer daisyui.modifier {
      &:before, &:after {
        background-color: var(--color-primary);
      }
    }
  }
  .divider-secondary {
    @layer daisyui.modifier {
      &:before, &:after {
        background-color: var(--color-secondary);
      }
    }
  }
  .divider-success {
    @layer daisyui.modifier {
      &:before, &:after {
        background-color: var(--color-success);
      }
    }
  }
  .divider-warning {
    @layer daisyui.modifier {
      &:before, &:after {
        background-color: var(--color-warning);
      }
    }
  }
  .bg-linear-135 {
    --tw-gradient-position: 135deg;
    @supports (background-image: linear-gradient(in lab, red, red)) {
      --tw-gradient-position: 135deg in oklab;
    }
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-linear-to-br {
    --tw-gradient-position: to bottom right;
    @supports (background-image: linear-gradient(in lab, red, red)) {
      --tw-gradient-position: to bottom right in oklab;
    }
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .alert-soft {
    @layer daisyui.style {
      color: var(--alert-color, var(--color-base-content));
      background: var(--alert-color, var(--color-base-content));
      @supports (color: color-mix(in lab, red, red)) {
        background: color-mix( in oklab, var(--alert-color, var(--color-base-content)) 8%, var(--color-base-100) );
      }
      --alert-border-color: var(--alert-color, var(--color-base-content));
      @supports (color: color-mix(in lab, red, red)) {
        --alert-border-color: color-mix(
      in oklab,
      var(--alert-color, var(--color-base-content)) 10%,
      var(--color-base-100)
    );
      }
      box-shadow: none;
      background-image: none;
    }
  }
  .from-\[\#8dffdf\] {
    --tw-gradient-from: #8dffdf;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-\[\#bedffb\] {
    --tw-gradient-from: #bedffb;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-primary {
    --tw-gradient-from: var(--color-primary);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-secondary {
    --tw-gradient-from: var(--color-secondary);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-40\% {
    --tw-gradient-from-position: 40%;
  }
  .to-\[\#8a70e1\] {
    --tw-gradient-to: #8a70e1;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-\[\#84b7e1\] {
    --tw-gradient-to: #84b7e1;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-accent {
    --tw-gradient-to: var(--color-accent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-secondary {
    --tw-gradient-to: var(--color-secondary);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-70\% {
    --tw-gradient-to-position: 70%;
  }
  .loading-ball {
    @layer daisyui.modifier {
      mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cellipse cx='12' cy='5' rx='4' ry='4'%3E%3Canimate attributeName='cy' values='5;20;20.5;20;5' keyTimes='0;0.469;0.5;0.531;1' dur='.8s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1'/%3E%3Canimate attributeName='rx' values='4;4;4.8;4;4' keyTimes='0;0.469;0.5;0.531;1' dur='.8s' repeatCount='indefinite'/%3E%3Canimate attributeName='ry' values='4;4;3;4;4' keyTimes='0;0.469;0.5;0.531;1' dur='.8s' repeatCount='indefinite'/%3E%3C/ellipse%3E%3C/svg%3E");
    }
  }
  .loading-bars {
    @layer daisyui.modifier {
      mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Crect x='1' y='1' width='6' height='22'%3E%3Canimate attributeName='y' values='1;5;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite'/%3E%3Canimate attributeName='height' values='22;14;22' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite'/%3E%3Canimate attributeName='opacity' values='1;0.2;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite'/%3E%3C/rect%3E%3Crect x='9' y='1' width='6' height='22'%3E%3Canimate attributeName='y' values='1;5;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.65s'/%3E%3Canimate attributeName='height' values='22;14;22' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.65s'/%3E%3Canimate attributeName='opacity' values='1;0.2;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.65s'/%3E%3C/rect%3E%3Crect x='17' y='1' width='6' height='22'%3E%3Canimate attributeName='y' values='1;5;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.5s'/%3E%3Canimate attributeName='height' values='22;14;22' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.5s'/%3E%3Canimate attributeName='opacity' values='1;0.2;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.5s'/%3E%3C/rect%3E%3C/svg%3E");
    }
  }
  .loading-dots {
    @layer daisyui.modifier {
      mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='4' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1'/%3E%3C/circle%3E%3Ccircle cx='12' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1' begin='0.1s'/%3E%3C/circle%3E%3Ccircle cx='20' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1' begin='0.2s'/%3E%3C/circle%3E%3C/svg%3E");
    }
  }
  .loading-infinity {
    @layer daisyui.modifier {
      mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' style='shape-rendering:auto;' width='200px' height='200px' viewBox='0 0 100 100' preserveAspectRatio='xMidYMid'%3E%3Cpath fill='none' stroke='black' stroke-width='10' stroke-dasharray='205.271 51.318' d='M24.3 30C11.4 30 5 43.3 5 50s6.4 20 19.3 20c19.3 0 32.1-40 51.4-40C88.6 30 95 43.3 95 50s-6.4 20-19.3 20C56.4 70 43.6 30 24.3 30z' stroke-linecap='round' style='transform:scale(0.8);transform-origin:50px 50px'%3E%3Canimate attributeName='stroke-dashoffset' repeatCount='indefinite' dur='2s' keyTimes='0;1' values='0;256.589'/%3E%3C/path%3E%3C/svg%3E");
    }
  }
  .loading-ring {
    @layer daisyui.modifier {
      mask-image: url("data:image/svg+xml,%3Csvg width='44' height='44' viewBox='0 0 44 44' xmlns='http://www.w3.org/2000/svg' stroke='white'%3E%3Cg fill='none' fill-rule='evenodd' stroke-width='2'%3E%3Ccircle cx='22' cy='22' r='1'%3E%3Canimate attributeName='r' begin='0s' dur='1.8s' values='1;20' calcMode='spline' keyTimes='0;1' keySplines='0.165,0.84,0.44,1' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-opacity' begin='0s' dur='1.8s' values='1;0' calcMode='spline' keyTimes='0;1' keySplines='0.3,0.61,0.355,1' repeatCount='indefinite'/%3E%3C/circle%3E%3Ccircle cx='22' cy='22' r='1'%3E%3Canimate attributeName='r' begin='-0.9s' dur='1.8s' values='1;20' calcMode='spline' keyTimes='0;1' keySplines='0.165,0.84,0.44,1' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-opacity' begin='-0.9s' dur='1.8s' values='1;0' calcMode='spline' keyTimes='0;1' keySplines='0.3,0.61,0.355,1' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
    }
  }
  .loading-spinner {
    @layer daisyui.modifier {
      mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
    }
  }
  .mask-circle {
    @layer daisyui.modifier {
      mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle fill='black' cx='100' cy='100' r='100' fill-rule='evenodd'/%3e%3c/svg%3e");
    }
  }
  .mask-decagon {
    @layer daisyui.modifier {
      mask-image: url("data:image/svg+xml,%3csvg width='192' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 0 58.779 19.098 36.327 50v61.804l-36.327 50L96 200l-58.779-19.098-36.327-50V69.098l36.327-50z' fill-rule='evenodd'/%3e%3c/svg%3e");
    }
  }
  .mask-diamond {
    @layer daisyui.modifier {
      mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m100 0 100 100-100 100L0 100z' fill-rule='evenodd'/%3e%3c/svg%3e");
    }
  }
  .mask-heart {
    @layer daisyui.modifier {
      mask-image: url("data:image/svg+xml,%3csvg width='200' height='185' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M100 184.606a15.384 15.384 0 0 1-8.653-2.678C53.565 156.28 37.205 138.695 28.182 127.7 8.952 104.264-.254 80.202.005 54.146.308 24.287 24.264 0 53.406 0c21.192 0 35.869 11.937 44.416 21.879a2.884 2.884 0 0 0 4.356 0C110.725 11.927 125.402 0 146.594 0c29.142 0 53.098 24.287 53.4 54.151.26 26.061-8.956 50.122-28.176 73.554-9.023 10.994-25.383 28.58-63.165 54.228a15.384 15.384 0 0 1-8.653 2.673Z' fill='black' fill-rule='nonzero'/%3e%3c/svg%3e");
    }
  }
  .mask-hexagon {
    @layer daisyui.modifier {
      mask-image: url("data:image/svg+xml,%3csvg width='182' height='201' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M.3 65.486c0-9.196 6.687-20.063 14.211-25.078l61.86-35.946c8.36-5.016 20.899-5.016 29.258 0l61.86 35.946c8.36 5.015 14.211 15.882 14.211 25.078v71.055c0 9.196-6.687 20.063-14.211 25.079l-61.86 35.945c-8.36 4.18-20.899 4.18-29.258 0L14.51 161.62C6.151 157.44.3 145.737.3 136.54V65.486Z' fill='black' fill-rule='nonzero'/%3e%3c/svg%3e");
    }
  }
  .mask-hexagon-2 {
    @layer daisyui.modifier {
      mask-image: url("data:image/svg+xml,%3csvg width='200' height='182' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M64.786 181.4c-9.196 0-20.063-6.687-25.079-14.21L3.762 105.33c-5.016-8.36-5.016-20.9 0-29.259l35.945-61.86C44.723 5.851 55.59 0 64.786 0h71.055c9.196 0 20.063 6.688 25.079 14.211l35.945 61.86c4.18 8.36 4.18 20.899 0 29.258l-35.945 61.86c-4.18 8.36-15.883 14.211-25.079 14.211H64.786Z' fill='black' fill-rule='nonzero'/%3e%3c/svg%3e");
    }
  }
  .mask-pentagon {
    @layer daisyui.modifier {
      mask-image: url("data:image/svg+xml,%3csvg width='192' height='181' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 0 95.106 69.098-36.327 111.804H37.22L.894 69.098z' fill-rule='evenodd'/%3e%3c/svg%3e");
    }
  }
  .mask-squircle {
    @layer daisyui.modifier {
      mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M100 0C20 0 0 20 0 100s20 100 100 100 100-20 100-100S180 0 100 0Z'/%3e%3c/svg%3e");
    }
  }
  .mask-star {
    @layer daisyui.modifier {
      mask-image: url("data:image/svg+xml,%3csvg width='192' height='180' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 137.263-58.779 42.024 22.163-68.389L.894 68.481l72.476-.243L96 0l22.63 68.238 72.476.243-58.49 42.417 22.163 68.389z' fill-rule='evenodd'/%3e%3c/svg%3e");
    }
  }
  .mask-star-2 {
    @layer daisyui.modifier {
      mask-image: url("data:image/svg+xml,%3csvg width='192' height='180' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 153.044-58.779 26.243 7.02-63.513L.894 68.481l63.117-13.01L96 0l31.989 55.472 63.117 13.01-43.347 47.292 7.02 63.513z' fill-rule='evenodd'/%3e%3c/svg%3e");
    }
  }
  .mask-triangle {
    @layer daisyui.modifier {
      mask-image: url("data:image/svg+xml,%3csvg width='174' height='149' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m87 148.476-86.603.185L43.86 74.423 87 0l43.14 74.423 43.463 74.238z' fill-rule='evenodd'/%3e%3c/svg%3e");
    }
  }
  .mask-triangle-2 {
    @layer daisyui.modifier {
      mask-image: url("data:image/svg+xml,%3csvg width='174' height='150' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m87 .738 86.603-.184-43.463 74.238L87 149.214 43.86 74.792.397.554z' fill-rule='evenodd'/%3e%3c/svg%3e");
    }
  }
  .mask-triangle-3 {
    @layer daisyui.modifier {
      mask-image: url("data:image/svg+xml,%3csvg width='150' height='174' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m149.369 87.107.185 86.603-74.239-43.463L.893 87.107l74.422-43.14L149.554.505z' fill-rule='evenodd'/%3e%3c/svg%3e");
    }
  }
  .mask-triangle-4 {
    @layer daisyui.modifier {
      mask-image: url("data:image/svg+xml,%3csvg width='150' height='174' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M.631 87.107.446.505l74.239 43.462 74.422 43.14-74.422 43.14L.446 173.71z' fill-rule='evenodd'/%3e%3c/svg%3e");
    }
  }
  .mask-circle {
    --tw-mask-radial-shape: circle;
  }
  .bg-cover {
    background-size: cover;
  }
  .bg-center {
    background-position: center;
  }
  .bg-no-repeat {
    background-repeat: no-repeat;
  }
  .mask-half-1 {
    @layer daisyui.modifier {
      mask-size: 200%;
      mask-position: left;
      mask-position: left;
      &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
        mask-position: right;
      }
    }
  }
  .mask-half-2 {
    @layer daisyui.modifier {
      mask-size: 200%;
      mask-position: right;
      mask-position: right;
      &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
        mask-position: left;
      }
    }
  }
  .mask-repeat {
    mask-repeat: repeat;
  }
  .stroke-current {
    stroke: currentcolor;
  }
  .object-contain {
    object-fit: contain;
  }
  .object-cover {
    object-fit: cover;
  }
  .object-\[66\%\] {
    object-position: 66%;
  }
  .object-bottom-right {
    object-position: right bottom;
  }
  .checkbox-lg {
    @layer daisyui.modifier {
      padding: 0.3125rem;
      --size: calc(var(--size-selector, 0.25rem) * 7);
    }
  }
  .checkbox-md {
    @layer daisyui.modifier {
      padding: 0.25rem;
      --size: calc(var(--size-selector, 0.25rem) * 6);
    }
  }
  .checkbox-sm {
    @layer daisyui.modifier {
      padding: 0.1875rem;
      --size: calc(var(--size-selector, 0.25rem) * 5);
    }
  }
  .checkbox-xl {
    @layer daisyui.modifier {
      padding: 0.375rem;
      --size: calc(var(--size-selector, 0.25rem) * 8);
    }
  }
  .checkbox-xs {
    @layer daisyui.modifier {
      padding: 0.125rem;
      --size: calc(var(--size-selector, 0.25rem) * 4);
    }
  }
  .radio-lg {
    @layer daisyui.modifier {
      padding: 0.3125rem;
      &:is([type="radio"]) {
        --size: calc(var(--size-selector, 0.25rem) * 7);
      }
    }
  }
  .radio-md {
    @layer daisyui.modifier {
      padding: 0.25rem;
      &:is([type="radio"]) {
        --size: calc(var(--size-selector, 0.25rem) * 6);
      }
    }
  }
  .radio-sm {
    @layer daisyui.modifier {
      padding: 0.1875rem;
      &:is([type="radio"]) {
        --size: calc(var(--size-selector, 0.25rem) * 5);
      }
    }
  }
  .radio-xl {
    @layer daisyui.modifier {
      padding: 0.375rem;
      &:is([type="radio"]) {
        --size: calc(var(--size-selector, 0.25rem) * 8);
      }
    }
  }
  .radio-xs {
    @layer daisyui.modifier {
      padding: 0.125rem;
      &:is([type="radio"]) {
        --size: calc(var(--size-selector, 0.25rem) * 4);
      }
    }
  }
  .cloth-border-nobg {
    padding: 2.3561944902px;
  }
  .p-0\.5 {
    padding: calc(var(--spacing) * 0.5);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .p-7 {
    padding: calc(var(--spacing) * 7);
  }
  .p-8 {
    padding: calc(var(--spacing) * 8);
  }
  .p-16 {
    padding: calc(var(--spacing) * 16);
  }
  .menu-title {
    @layer daisyui.component {
      padding-inline: calc(0.25rem * 3);
      padding-block: calc(0.25rem * 2);
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
      }
      font-size: 0.875rem;
      font-weight: 600;
    }
  }
  .select-lg {
    @layer daisyui.modifier {
      --size: calc(var(--size-field, 0.25rem) * 12);
      font-size: 1.125rem;
      option {
        padding-inline: calc(0.25rem * 4);
        padding-block: calc(0.25rem * 1.5);
      }
    }
  }
  .select-md {
    @layer daisyui.modifier {
      --size: calc(var(--size-field, 0.25rem) * 10);
      font-size: 0.875rem;
      option {
        padding-inline: calc(0.25rem * 3);
        padding-block: calc(0.25rem * 1.5);
      }
    }
  }
  .select-sm {
    @layer daisyui.modifier {
      --size: calc(var(--size-field, 0.25rem) * 8);
      font-size: 0.75rem;
      option {
        padding-inline: calc(0.25rem * 2.5);
        padding-block: calc(0.25rem * 1);
      }
    }
  }
  .select-xl {
    @layer daisyui.modifier {
      --size: calc(var(--size-field, 0.25rem) * 14);
      font-size: 1.375rem;
      option {
        padding-inline: calc(0.25rem * 5);
        padding-block: calc(0.25rem * 1.5);
      }
    }
  }
  .select-xs {
    @layer daisyui.modifier {
      --size: calc(var(--size-field, 0.25rem) * 6);
      font-size: 0.6875rem;
      option {
        padding-inline: calc(0.25rem * 2);
        padding-block: calc(0.25rem * 1);
      }
    }
  }
  .table-lg {
    @layer daisyui.modifier {
      :not(thead, tfoot) tr {
        font-size: 1.125rem;
      }
      :where(th, td) {
        padding-inline: calc(0.25rem * 5);
        padding-block: calc(0.25rem * 4);
      }
    }
  }
  .table-md {
    @layer daisyui.modifier {
      :not(thead, tfoot) tr {
        font-size: 0.875rem;
      }
      :where(th, td) {
        padding-inline: calc(0.25rem * 4);
        padding-block: calc(0.25rem * 3);
      }
    }
  }
  .table-sm {
    @layer daisyui.modifier {
      :not(thead, tfoot) tr {
        font-size: 0.75rem;
      }
      :where(th, td) {
        padding-inline: calc(0.25rem * 3);
        padding-block: calc(0.25rem * 2);
      }
    }
  }
  .table-xl {
    @layer daisyui.modifier {
      :not(thead, tfoot) tr {
        font-size: 1.375rem;
      }
      :where(th, td) {
        padding-inline: calc(0.25rem * 6);
        padding-block: calc(0.25rem * 5);
      }
    }
  }
  .table-xs {
    @layer daisyui.modifier {
      :not(thead, tfoot) tr {
        font-size: 0.6875rem;
      }
      :where(th, td) {
        padding-inline: calc(0.25rem * 2);
        padding-block: calc(0.25rem * 1);
      }
    }
  }
  .badge-lg {
    @layer daisyui.modifier {
      --size: calc(var(--size-selector, 0.25rem) * 7);
      font-size: 1rem;
      padding-inline: calc(0.25rem * 3.5 - var(--border));
    }
  }
  .badge-md {
    @layer daisyui.modifier {
      --size: calc(var(--size-selector, 0.25rem) * 6);
      font-size: 0.875rem;
      padding-inline: calc(0.25rem * 3 - var(--border));
    }
  }
  .badge-sm {
    @layer daisyui.modifier {
      --size: calc(var(--size-selector, 0.25rem) * 5);
      font-size: 0.75rem;
      padding-inline: calc(0.25rem * 2.5 - var(--border));
    }
  }
  .badge-xl {
    @layer daisyui.modifier {
      --size: calc(var(--size-selector, 0.25rem) * 8);
      font-size: 1.125rem;
      padding-inline: calc(0.25rem * 4 - var(--border));
    }
  }
  .badge-xs {
    @layer daisyui.modifier {
      --size: calc(var(--size-selector, 0.25rem) * 4);
      font-size: 0.625rem;
      padding-inline: calc(0.25rem * 2 - var(--border));
    }
  }
  .content {
    padding-inline: calc(var(--spacing) * 3);
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 10);
    }
  }
  .px-0 {
    padding-inline: calc(var(--spacing) * 0);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .px-8 {
    padding-inline: calc(var(--spacing) * 8);
  }
  .px-10 {
    padding-inline: calc(var(--spacing) * 10);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }
  .py-7 {
    padding-block: calc(var(--spacing) * 7);
  }
  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }
  .py-9 {
    padding-block: calc(var(--spacing) * 9);
  }
  .py-10 {
    padding-block: calc(var(--spacing) * 10);
  }
  .py-16 {
    padding-block: calc(var(--spacing) * 16);
  }
  .py-20 {
    padding-block: calc(var(--spacing) * 20);
  }
  .py-24 {
    padding-block: calc(var(--spacing) * 24);
  }
  .py-28 {
    padding-block: calc(var(--spacing) * 28);
  }
  .py-36 {
    padding-block: calc(var(--spacing) * 36);
  }
  .py-40 {
    padding-block: calc(var(--spacing) * 40);
  }
  .file-input-xl {
    @layer daisyui.modifier {
      padding-inline-end: calc(0.25rem * 6);
      --size: calc(var(--size-field, 0.25rem) * 14);
      font-size: 1.125rem;
      line-height: 3rem;
      &::file-selector-button {
        font-size: 1.375rem;
      }
    }
  }
  .pt-4 {
    padding-top: calc(var(--spacing) * 4);
  }
  .pt-6 {
    padding-top: calc(var(--spacing) * 6);
  }
  .pt-8 {
    padding-top: calc(var(--spacing) * 8);
  }
  .pt-28 {
    padding-top: calc(var(--spacing) * 28);
  }
  .pt-36 {
    padding-top: calc(var(--spacing) * 36);
  }
  .pr-4 {
    padding-right: calc(var(--spacing) * 4);
  }
  .pb-2 {
    padding-bottom: calc(var(--spacing) * 2);
  }
  .pb-8 {
    padding-bottom: calc(var(--spacing) * 8);
  }
  .pb-12 {
    padding-bottom: calc(var(--spacing) * 12);
  }
  .pb-16 {
    padding-bottom: calc(var(--spacing) * 16);
  }
  .pb-20 {
    padding-bottom: calc(var(--spacing) * 20);
  }
  .pb-24 {
    padding-bottom: calc(var(--spacing) * 24);
  }
  .pb-32 {
    padding-bottom: calc(var(--spacing) * 32);
  }
  .pl-4 {
    padding-left: calc(var(--spacing) * 4);
  }
  .text-center {
    text-align: center;
  }
  .text-left {
    text-align: left;
  }
  .text-right {
    text-align: right;
  }
  .align-top {
    vertical-align: top;
  }
  .font-display {
    font-family: var(--font-display);
  }
  .file-input-lg {
    @layer daisyui.modifier {
      --size: calc(var(--size-field, 0.25rem) * 12);
      font-size: 1.125rem;
      line-height: 2.5rem;
      &::file-selector-button {
        font-size: 1.125rem;
      }
    }
  }
  .file-input-md {
    @layer daisyui.modifier {
      --size: calc(var(--size-field, 0.25rem) * 10);
      font-size: 0.875rem;
      line-height: 2;
      &::file-selector-button {
        font-size: 0.875rem;
      }
    }
  }
  .file-input-sm {
    @layer daisyui.modifier {
      --size: calc(var(--size-field, 0.25rem) * 8);
      font-size: 0.75rem;
      line-height: 1.5rem;
      &::file-selector-button {
        font-size: 0.75rem;
      }
    }
  }
  .file-input-xs {
    @layer daisyui.modifier {
      --size: calc(var(--size-field, 0.25rem) * 6);
      font-size: 0.6875rem;
      line-height: 1rem;
      &::file-selector-button {
        font-size: 0.6875rem;
      }
    }
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
  .text-8xl {
    font-size: var(--text-8xl);
    line-height: var(--tw-leading, var(--text-8xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .tabs-lg {
    @layer daisyui.modifier {
      --tab-height: calc(var(--size-field, 0.25rem) * 12);
      :where(.tab) {
        font-size: 1.125rem;
        --tab-p: 1rem;
        --tab-radius-min: calc(1.5rem - var(--border));
      }
    }
  }
  .tabs-md {
    @layer daisyui.modifier {
      --tab-height: calc(var(--size-field, 0.25rem) * 10);
      :where(.tab) {
        font-size: 0.875rem;
        --tab-p: 0.75rem;
        --tab-radius-min: calc(0.75rem - var(--border));
      }
    }
  }
  .tabs-sm {
    @layer daisyui.modifier {
      --tab-height: calc(var(--size-field, 0.25rem) * 8);
      :where(.tab) {
        font-size: 0.875rem;
        --tab-p: 0.5rem;
        --tab-radius-min: calc(0.5rem - var(--border));
      }
    }
  }
  .tabs-xl {
    @layer daisyui.modifier {
      --tab-height: calc(var(--size-field, 0.25rem) * 14);
      :where(.tab) {
        font-size: 1.125rem;
        --tab-p: 1.25rem;
        --tab-radius-min: calc(2rem - var(--border));
      }
    }
  }
  .tabs-xs {
    @layer daisyui.modifier {
      --tab-height: calc(var(--size-field, 0.25rem) * 6);
      :where(.tab) {
        font-size: 0.75rem;
        --tab-p: 0.375rem;
        --tab-radius-min: calc(0.5rem - var(--border));
      }
    }
  }
  .kbd-lg {
    @layer daisyui.modifier {
      --size: calc(var(--size-selector, 0.25rem) * 7);
      font-size: 1rem;
    }
  }
  .kbd-md {
    @layer daisyui.modifier {
      --size: calc(var(--size-selector, 0.25rem) * 6);
      font-size: 0.875rem;
    }
  }
  .kbd-sm {
    @layer daisyui.modifier {
      --size: calc(var(--size-selector, 0.25rem) * 5);
      font-size: 0.75rem;
    }
  }
  .kbd-xl {
    @layer daisyui.modifier {
      --size: calc(var(--size-selector, 0.25rem) * 8);
      font-size: 1.125rem;
    }
  }
  .kbd-xs {
    @layer daisyui.modifier {
      --size: calc(var(--size-selector, 0.25rem) * 4);
      font-size: 0.625rem;
    }
  }
  .text-\[1\.7rem\] {
    font-size: 1.7rem;
  }
  .textarea-lg {
    @layer daisyui.modifier {
      font-size: max(var(--font-size, 1.125rem), 1.125rem);
    }
  }
  .textarea-md {
    @layer daisyui.modifier {
      font-size: max(var(--font-size, 0.875rem), 0.875rem);
    }
  }
  .textarea-sm {
    @layer daisyui.modifier {
      font-size: max(var(--font-size, 0.75rem), 0.75rem);
    }
  }
  .textarea-xl {
    @layer daisyui.modifier {
      font-size: max(var(--font-size, 1.375rem), 1.375rem);
    }
  }
  .textarea-xs {
    @layer daisyui.modifier {
      font-size: max(var(--font-size, 0.6875rem), 0.6875rem);
    }
  }
  .leading-6 {
    --tw-leading: calc(var(--spacing) * 6);
    line-height: calc(var(--spacing) * 6);
  }
  .leading-10 {
    --tw-leading: calc(var(--spacing) * 10);
    line-height: calc(var(--spacing) * 10);
  }
  .leading-loose {
    --tw-leading: var(--leading-loose);
    line-height: var(--leading-loose);
  }
  .leading-relaxed {
    --tw-leading: var(--leading-relaxed);
    line-height: var(--leading-relaxed);
  }
  .leading-tight {
    --tw-leading: var(--leading-tight);
    line-height: var(--leading-tight);
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-extrabold {
    --tw-font-weight: var(--font-weight-extrabold);
    font-weight: var(--font-weight-extrabold);
  }
  .font-light {
    --tw-font-weight: var(--font-weight-light);
    font-weight: var(--font-weight-light);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-normal {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .tracking-tight {
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
  }
  .tracking-tighter {
    --tw-tracking: var(--tracking-tighter);
    letter-spacing: var(--tracking-tighter);
  }
  .text-wrap {
    text-wrap: wrap;
  }
  .alert-error {
    @layer daisyui.modifier {
      color: var(--color-error-content);
      --alert-border-color: var(--color-error);
      --alert-color: var(--color-error);
    }
  }
  .alert-info {
    @layer daisyui.modifier {
      color: var(--color-info-content);
      --alert-border-color: var(--color-info);
      --alert-color: var(--color-info);
    }
  }
  .alert-success {
    @layer daisyui.modifier {
      color: var(--color-success-content);
      --alert-border-color: var(--color-success);
      --alert-color: var(--color-success);
    }
  }
  .alert-warning {
    @layer daisyui.modifier {
      color: var(--color-warning-content);
      --alert-border-color: var(--color-warning);
      --alert-color: var(--color-warning);
    }
  }
  .file-input-accent {
    @layer daisyui.modifier {
      --btn-color: var(--color-accent);
      &::file-selector-button {
        color: var(--color-accent-content);
      }
      &, &:focus, &:focus-within {
        --input-color: var(--color-accent);
      }
    }
  }
  .file-input-error {
    @layer daisyui.modifier {
      --btn-color: var(--color-error);
      &::file-selector-button {
        color: var(--color-error-content);
      }
      &, &:focus, &:focus-within {
        --input-color: var(--color-error);
      }
    }
  }
  .file-input-info {
    @layer daisyui.modifier {
      --btn-color: var(--color-info);
      &::file-selector-button {
        color: var(--color-info-content);
      }
      &, &:focus, &:focus-within {
        --input-color: var(--color-info);
      }
    }
  }
  .file-input-neutral {
    @layer daisyui.modifier {
      --btn-color: var(--color-neutral);
      &::file-selector-button {
        color: var(--color-neutral-content);
      }
      &, &:focus, &:focus-within {
        --input-color: var(--color-neutral);
      }
    }
  }
  .file-input-primary {
    @layer daisyui.modifier {
      --btn-color: var(--color-primary);
      &::file-selector-button {
        color: var(--color-primary-content);
      }
      &, &:focus, &:focus-within {
        --input-color: var(--color-primary);
      }
    }
  }
  .file-input-secondary {
    @layer daisyui.modifier {
      --btn-color: var(--color-secondary);
      &::file-selector-button {
        color: var(--color-secondary-content);
      }
      &, &:focus, &:focus-within {
        --input-color: var(--color-secondary);
      }
    }
  }
  .file-input-success {
    @layer daisyui.modifier {
      --btn-color: var(--color-success);
      &::file-selector-button {
        color: var(--color-success-content);
      }
      &, &:focus, &:focus-within {
        --input-color: var(--color-success);
      }
    }
  }
  .file-input-warning {
    @layer daisyui.modifier {
      --btn-color: var(--color-warning);
      &::file-selector-button {
        color: var(--color-warning-content);
      }
      &, &:focus, &:focus-within {
        --input-color: var(--color-warning);
      }
    }
  }
  .checkbox-accent {
    @layer daisyui.modifier {
      color: var(--color-accent-content);
      --input-color: var(--color-accent);
    }
  }
  .checkbox-error {
    @layer daisyui.modifier {
      color: var(--color-error-content);
      --input-color: var(--color-error);
    }
  }
  .checkbox-info {
    @layer daisyui.modifier {
      color: var(--color-info-content);
      --input-color: var(--color-info);
    }
  }
  .checkbox-neutral {
    @layer daisyui.modifier {
      color: var(--color-neutral-content);
      --input-color: var(--color-neutral);
    }
  }
  .checkbox-primary {
    @layer daisyui.modifier {
      color: var(--color-primary-content);
      --input-color: var(--color-primary);
    }
  }
  .checkbox-secondary {
    @layer daisyui.modifier {
      color: var(--color-secondary-content);
      --input-color: var(--color-secondary);
    }
  }
  .checkbox-success {
    @layer daisyui.modifier {
      color: var(--color-success-content);
      --input-color: var(--color-success);
    }
  }
  .checkbox-warning {
    @layer daisyui.modifier {
      color: var(--color-warning-content);
      --input-color: var(--color-warning);
    }
  }
  .link-accent {
    @layer daisyui.modifier {
      color: var(--color-accent);
      @media (hover: hover) {
        &:hover {
          color: var(--color-accent);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-accent) 80%, #000);
          }
        }
      }
    }
  }
  .link-error {
    @layer daisyui.modifier {
      color: var(--color-error);
      @media (hover: hover) {
        &:hover {
          color: var(--color-error);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-error) 80%, #000);
          }
        }
      }
    }
  }
  .link-info {
    @layer daisyui.modifier {
      color: var(--color-info);
      @media (hover: hover) {
        &:hover {
          color: var(--color-info);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-info) 80%, #000);
          }
        }
      }
    }
  }
  .link-neutral {
    @layer daisyui.modifier {
      color: var(--color-neutral);
      @media (hover: hover) {
        &:hover {
          color: var(--color-neutral);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-neutral) 80%, #000);
          }
        }
      }
    }
  }
  .link-primary {
    @layer daisyui.modifier {
      color: var(--color-primary);
      @media (hover: hover) {
        &:hover {
          color: color-mix(in srgb, #7ce2c5 80%, #000);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-primary) 80%, #000);
          }
        }
      }
    }
  }
  .link-secondary {
    @layer daisyui.modifier {
      color: var(--color-secondary);
      @media (hover: hover) {
        &:hover {
          color: var(--color-secondary);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-secondary) 80%, #000);
          }
        }
      }
    }
  }
  .link-success {
    @layer daisyui.modifier {
      color: var(--color-success);
      @media (hover: hover) {
        &:hover {
          color: var(--color-success);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-success) 80%, #000);
          }
        }
      }
    }
  }
  .link-warning {
    @layer daisyui.modifier {
      color: var(--color-warning);
      @media (hover: hover) {
        &:hover {
          color: var(--color-warning);
          @supports (color: color-mix(in lab, red, red)) {
            color: color-mix(in oklab, var(--color-warning) 80%, #000);
          }
        }
      }
    }
  }
  .range-accent {
    @layer daisyui.modifier {
      color: var(--color-accent);
      --range-thumb: var(--color-accent-content);
    }
  }
  .range-error {
    @layer daisyui.modifier {
      color: var(--color-error);
      --range-thumb: var(--color-error-content);
    }
  }
  .range-info {
    @layer daisyui.modifier {
      color: var(--color-info);
      --range-thumb: var(--color-info-content);
    }
  }
  .range-neutral {
    @layer daisyui.modifier {
      color: var(--color-neutral);
      --range-thumb: var(--color-neutral-content);
    }
  }
  .range-primary {
    @layer daisyui.modifier {
      color: var(--color-primary);
      --range-thumb: var(--color-primary-content);
    }
  }
  .range-secondary {
    @layer daisyui.modifier {
      color: var(--color-secondary);
      --range-thumb: var(--color-secondary-content);
    }
  }
  .range-success {
    @layer daisyui.modifier {
      color: var(--color-success);
      --range-thumb: var(--color-success-content);
    }
  }
  .range-warning {
    @layer daisyui.modifier {
      color: var(--color-warning);
      --range-thumb: var(--color-warning-content);
    }
  }
  .tooltip-accent {
    @layer daisyui.modifier {
      --tt-bg: var(--color-accent);
      > .tooltip-content, &[data-tip]:before {
        color: var(--color-accent-content);
      }
    }
  }
  .tooltip-error {
    @layer daisyui.modifier {
      --tt-bg: var(--color-error);
      > .tooltip-content, &[data-tip]:before {
        color: var(--color-error-content);
      }
    }
  }
  .tooltip-info {
    @layer daisyui.modifier {
      --tt-bg: var(--color-info);
      > .tooltip-content, &[data-tip]:before {
        color: var(--color-info-content);
      }
    }
  }
  .tooltip-primary {
    @layer daisyui.modifier {
      --tt-bg: var(--color-primary);
      > .tooltip-content, &[data-tip]:before {
        color: var(--color-primary-content);
      }
    }
  }
  .tooltip-secondary {
    @layer daisyui.modifier {
      --tt-bg: var(--color-secondary);
      > .tooltip-content, &[data-tip]:before {
        color: var(--color-secondary-content);
      }
    }
  }
  .tooltip-success {
    @layer daisyui.modifier {
      --tt-bg: var(--color-success);
      > .tooltip-content, &[data-tip]:before {
        color: var(--color-success-content);
      }
    }
  }
  .tooltip-warning {
    @layer daisyui.modifier {
      --tt-bg: var(--color-warning);
      > .tooltip-content, &[data-tip]:before {
        color: var(--color-warning-content);
      }
    }
  }
  .progress-accent {
    @layer daisyui.modifier {
      color: var(--color-accent);
    }
  }
  .progress-error {
    @layer daisyui.modifier {
      color: var(--color-error);
    }
  }
  .progress-info {
    @layer daisyui.modifier {
      color: var(--color-info);
    }
  }
  .progress-neutral {
    @layer daisyui.modifier {
      color: var(--color-neutral);
    }
  }
  .progress-primary {
    @layer daisyui.modifier {
      color: var(--color-primary);
    }
  }
  .progress-secondary {
    @layer daisyui.modifier {
      color: var(--color-secondary);
    }
  }
  .progress-success {
    @layer daisyui.modifier {
      color: var(--color-success);
    }
  }
  .progress-warning {
    @layer daisyui.modifier {
      color: var(--color-warning);
    }
  }
  .text-\[\#aad9ff\] {
    color: #aad9ff;
  }
  .text-black {
    color: var(--color-black);
  }
  .text-black\/12 {
    color: color-mix(in srgb, #000 12%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-black) 12%, transparent);
    }
  }
  .text-black\/30 {
    color: color-mix(in srgb, #000 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-black) 30%, transparent);
    }
  }
  .text-black\/65 {
    color: color-mix(in srgb, #000 65%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-black) 65%, transparent);
    }
  }
  .text-black\/70 {
    color: color-mix(in srgb, #000 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-black) 70%, transparent);
    }
  }
  .text-black\/80 {
    color: color-mix(in srgb, #000 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-black) 80%, transparent);
    }
  }
  .text-black\/90 {
    color: color-mix(in srgb, #000 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-black) 90%, transparent);
    }
  }
  .text-gray-100 {
    color: var(--color-gray-100);
  }
  .text-gray-500 {
    color: var(--color-gray-500);
  }
  .text-gray-600 {
    color: var(--color-gray-600);
  }
  .text-gray-800 {
    color: var(--color-gray-800);
  }
  .text-muted {
    color: var(--muted);
  }
  .text-primary {
    color: var(--primary);
  }
  .text-primary {
    color: var(--color-primary);
  }
  .text-secondary {
    color: var(--secondary);
  }
  .text-secondary {
    color: var(--color-secondary);
  }
  .text-slate-600 {
    color: var(--color-slate-600);
  }
  .text-text {
    color: var(--text-2);
  }
  .text-white {
    color: var(--color-white);
  }
  .text-white\/50 {
    color: color-mix(in srgb, #fff 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 50%, transparent);
    }
  }
  .text-white\/60 {
    color: color-mix(in srgb, #fff 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 60%, transparent);
    }
  }
  .text-white\/65 {
    color: color-mix(in srgb, #fff 65%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 65%, transparent);
    }
  }
  .text-white\/70 {
    color: color-mix(in srgb, #fff 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 70%, transparent);
    }
  }
  .text-white\/85 {
    color: color-mix(in srgb, #fff 85%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 85%, transparent);
    }
  }
  .text-white\/90 {
    color: color-mix(in srgb, #fff 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 90%, transparent);
    }
  }
  .text-white\/95 {
    color: color-mix(in srgb, #fff 95%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 95%, transparent);
    }
  }
  .uppercase {
    text-transform: uppercase;
  }
  .italic {
    font-style: italic;
  }
  .tabular-nums {
    --tw-numeric-spacing: tabular-nums;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
  }
  .btn-link {
    @layer daisyui.modifier {
      text-decoration-line: underline;
      outline-color: currentcolor;
      --btn-border: #0000;
      --btn-bg: #0000;
      --btn-fg: var(--color-primary);
      --btn-noise: none;
      --btn-shadow: "";
      &:is(.btn-active, :hover, :active:focus, :focus-visible) {
        text-decoration-line: underline;
        --btn-border: #0000;
        --btn-bg: #0000;
      }
      @media (hover: none) {
        &:hover:not(.btn-active, :active, :focus-visible, :disabled, [disabled], .btn-disabled) {
          text-decoration-line: none;
        }
      }
    }
  }
  .link-hover {
    @layer daisyui.modifier {
      text-decoration-line: none;
      &:hover {
        @media (hover: hover) {
          text-decoration-line: underline;
        }
      }
    }
  }
  .underline {
    text-decoration-line: underline;
  }
  .antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  .swap-active {
    @layer daisyui.modifier {
      .swap-off {
        opacity: 0%;
      }
      .swap-on {
        opacity: 100%;
      }
    }
  }
  .opacity-0 {
    opacity: 0%;
  }
  .opacity-65 {
    opacity: 65%;
  }
  .opacity-70 {
    opacity: 70%;
  }
  .opacity-80 {
    opacity: 80%;
  }
  .opacity-85 {
    opacity: 85%;
  }
  .opacity-90 {
    opacity: 90%;
  }
  .opacity-100 {
    opacity: 100%;
  }
  .shadow-none {
    --tw-shadow: 0 0 #0000;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-xl {
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .inset-shadow-sm {
    --tw-inset-shadow: inset 0 2px 4px var(--tw-inset-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .inset-ring-1 {
    --tw-inset-ring-shadow: inset 0 0 0 1px var(--tw-inset-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-black\/20 {
    --tw-shadow-color: color-mix(in srgb, #000 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-black) 20%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }
  .inset-shadow-black\/30 {
    --tw-inset-shadow-color: color-mix(in srgb, #000 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-inset-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-black) 30%, transparent) var(--tw-inset-shadow-alpha), transparent);
    }
  }
  .inset-shadow-black\/40 {
    --tw-inset-shadow-color: color-mix(in srgb, #000 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-inset-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-black) 40%, transparent) var(--tw-inset-shadow-alpha), transparent);
    }
  }
  .inset-ring-\(--bg\) {
    --tw-inset-ring-color: var(--bg);
  }
  .inset-ring-\(--danger\) {
    --tw-inset-ring-color: var(--danger);
  }
  .inset-ring-\(--primary-2\) {
    --tw-inset-ring-color: var(--primary-2);
  }
  .inset-ring-\(--secondary-2\) {
    --tw-inset-ring-color: var(--secondary-2);
  }
  .inset-ring-\(--warning-2\) {
    --tw-inset-ring-color: var(--warning-2);
  }
  .inset-ring-\[\#99d1ff\] {
    --tw-inset-ring-color: #99d1ff;
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .outline-1 {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .outline-2 {
    outline-style: var(--tw-outline-style);
    outline-width: 2px;
  }
  .outline-3 {
    outline-style: var(--tw-outline-style);
    outline-width: 3px;
  }
  .outline-offset-2 {
    outline-offset: 2px;
  }
  .outline-offset-3 {
    outline-offset: 3px;
  }
  .outline-offset-4 {
    outline-offset: 4px;
  }
  .btn-ghost {
    @layer daisyui.modifier {
      &:not(.btn-active, :hover, :active:focus, :focus-visible) {
        --btn-shadow: "";
        --btn-bg: #0000;
        --btn-border: #0000;
        --btn-noise: none;
        &:not(:disabled, [disabled], .btn-disabled) {
          outline-color: currentcolor;
          --btn-fg: currentColor;
        }
      }
      @media (hover: none) {
        &:hover:not(.btn-active, :active, :focus-visible, :disabled, [disabled], .btn-disabled) {
          --btn-shadow: "";
          --btn-bg: #0000;
          --btn-border: #0000;
          --btn-noise: none;
          --btn-fg: currentColor;
        }
      }
    }
  }
  .outline-white\/5 {
    outline-color: color-mix(in srgb, #fff 5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      outline-color: color-mix(in oklab, var(--color-white) 5%, transparent);
    }
  }
  .outline-white\/15 {
    outline-color: color-mix(in srgb, #fff 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      outline-color: color-mix(in oklab, var(--color-white) 15%, transparent);
    }
  }
  .outline-white\/20 {
    outline-color: color-mix(in srgb, #fff 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      outline-color: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }
  .outline-white\/25 {
    outline-color: color-mix(in srgb, #fff 25%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      outline-color: color-mix(in oklab, var(--color-white) 25%, transparent);
    }
  }
  .outline-white\/35 {
    outline-color: color-mix(in srgb, #fff 35%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      outline-color: color-mix(in oklab, var(--color-white) 35%, transparent);
    }
  }
  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .blur-sm {
    --tw-blur: blur(var(--blur-sm));
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .backdrop-blur-xl {
    --tw-backdrop-blur: blur(var(--blur-xl));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-blur-xs {
    --tw-backdrop-blur: blur(var(--blur-xs));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-filter {
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .delay-75 {
    transition-delay: 75ms;
  }
  .delay-150 {
    transition-delay: 150ms;
  }
  .duration-100 {
    --tw-duration: 100ms;
    transition-duration: 100ms;
  }
  .duration-150 {
    --tw-duration: 150ms;
    transition-duration: 150ms;
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .duration-250 {
    --tw-duration: 250ms;
    transition-duration: 250ms;
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .duration-350 {
    --tw-duration: 350ms;
    transition-duration: 350ms;
  }
  .duration-500 {
    --tw-duration: 500ms;
    transition-duration: 500ms;
  }
  .duration-600 {
    --tw-duration: 600ms;
    transition-duration: 600ms;
  }
  .ease-in {
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .ease-out {
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
  }
  .will-change-auto {
    will-change: auto;
  }
  .will-change-auto {
    will-change: auto;
  }
  .will-change-scroll {
    will-change: scroll-position;
  }
  .will-change-transform {
    will-change: transform;
  }
  .will-change-transform {
    will-change: transform;
  }
  .contain-layout {
    --tw-contain-layout: layout;
    contain: var(--tw-contain-size,) var(--tw-contain-layout,) var(--tw-contain-paint,) var(--tw-contain-style,);
  }
  .contain-paint {
    --tw-contain-paint: paint;
    contain: var(--tw-contain-size,) var(--tw-contain-layout,) var(--tw-contain-paint,) var(--tw-contain-style,);
  }
  .contain-layout {
    contain: layout;
  }
  .contain-layout {
    contain: layout;
  }
  .contain-layout-paint {
    contain: layout paint;
  }
  .contain-layout-paint-style {
    contain: layout paint style;
  }
  .contain-layout-style {
    contain: layout style;
  }
  .contain-paint {
    contain: paint;
  }
  .contain-paint {
    contain: paint;
  }
  .tabs-bottom {
    @layer daisyui.modifier {
      --tabs-height: auto;
      --tabs-direction: row;
      .tab {
        --tab-order: 1;
        --tab-border: var(--border) 0 0 0;
        --tab-radius-ss: 0;
        --tab-radius-se: 0;
        --tab-radius-es: min(var(--radius-field), var(--tab-radius-min));
        --tab-radius-ee: min(var(--radius-field), var(--tab-radius-min));
        --tab-border-colors: var(--tab-border-color) #0000 #0000 #0000;
        --tab-paddings: 0 var(--tab-p) var(--border) var(--tab-p);
        --tab-corner-width: calc(100% + min(var(--radius-field), var(--tab-radius-min)) * 2);
        --tab-corner-height: min(var(--radius-field), var(--tab-radius-min));
        --tab-corner-position: top left, top right;
        &:is(.tab-active, [aria-selected="true"], [aria-current="true"], [aria-current="page"]):not( .tab-disabled, [disabled] ), &:is(input:checked), &:is(label:has(:checked)) {
          --tab-border: 0 var(--border) var(--border) var(--border);
          --tab-border-colors: #0000 var(--tab-border-color) var(--tab-border-color)
          var(--tab-border-color);
          --tab-paddings: var(--border) calc(var(--tab-p) - var(--border)) 0
          calc(var(--tab-p) - var(--border));
          --tab-inset: 0 auto auto auto;
          --radius-start: radial-gradient(
          circle at bottom left,
          #0000 var(--tab-grad),
          var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
          var(--tab-border-color) calc(var(--tab-grad) + var(--border)),
          var(--tab-bg) calc(var(--tab-grad) + var(--border) + 0.25px)
        );
          --radius-end: radial-gradient(
          circle at bottom right,
          #0000 var(--tab-grad),
          var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
          var(--tab-border-color) calc(var(--tab-grad) + var(--border)),
          var(--tab-bg) calc(var(--tab-grad) + var(--border) + 0.25px)
        );
        }
      }
      &:has(.tab-content) {
        > .tab:first-child {
          &:not(.tab-active, [aria-selected="true"], [aria-current="true"], [aria-current="page"]) {
            --tab-border-colors: #0000 var(--tab-border-color) var(--tab-border-color)
            var(--tab-border-color);
          }
        }
      }
      .tab-content {
        --tabcontent-order: 0;
        --tabcontent-margin: 0 0 calc(-1 * var(--border)) 0;
        --tabcontent-radius-ss: var(--radius-box);
        --tabcontent-radius-se: var(--radius-box);
        --tabcontent-radius-es: 0;
        --tabcontent-radius-ee: var(--radius-box);
      }
      > :checked, > :is(label:has(:checked)), > :is(.tab-active, [aria-selected="true"], [aria-current="true"], [aria-current="page"]) {
        & + .tab-content:not(:nth-child(2)) {
          --tabcontent-radius-es: var(--radius-box);
        }
      }
    }
  }
  .tabs-top {
    @layer daisyui.modifier {
      --tabs-height: auto;
      --tabs-direction: row;
      .tab {
        --tab-order: 0;
        --tab-border: 0 0 var(--border) 0;
        --tab-radius-ss: min(var(--radius-field), var(--tab-radius-min));
        --tab-radius-se: min(var(--radius-field), var(--tab-radius-min));
        --tab-radius-es: 0;
        --tab-radius-ee: 0;
        --tab-paddings: var(--border) var(--tab-p) 0 var(--tab-p);
        --tab-border-colors: #0000 #0000 var(--tab-border-color) #0000;
        --tab-corner-width: calc(100% + min(var(--radius-field), var(--tab-radius-min)) * 2);
        --tab-corner-height: min(var(--radius-field), var(--tab-radius-min));
        --tab-corner-position: top left, top right;
        &:is(.tab-active, [aria-selected="true"], [aria-current="true"], [aria-current="page"]):not( .tab-disabled, [disabled] ), &:is(input:checked), &:is(label:has(:checked)) {
          --tab-border: var(--border) var(--border) 0 var(--border);
          --tab-border-colors: var(--tab-border-color) var(--tab-border-color) #0000
          var(--tab-border-color);
          --tab-paddings: 0 calc(var(--tab-p) - var(--border)) var(--border)
          calc(var(--tab-p) - var(--border));
          --tab-inset: auto auto 0 auto;
          --radius-start: radial-gradient(
          circle at top left,
          #0000 var(--tab-grad),
          var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
          var(--tab-border-color) calc(var(--tab-grad) + var(--border)),
          var(--tab-bg) calc(var(--tab-grad) + var(--border) + 0.25px)
        );
          --radius-end: radial-gradient(
          circle at top right,
          #0000 var(--tab-grad),
          var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
          var(--tab-border-color) calc(var(--tab-grad) + var(--border)),
          var(--tab-bg) calc(var(--tab-grad) + var(--border) + 0.25px)
        );
        }
      }
      &:has(.tab-content) {
        > .tab:first-child {
          &:not(.tab-active, [aria-selected="true"], [aria-current="true"], [aria-current="page"]) {
            --tab-border-colors: var(--tab-border-color) var(--tab-border-color) #0000
            var(--tab-border-color);
          }
        }
      }
      .tab-content {
        --tabcontent-order: 1;
        --tabcontent-margin: calc(-1 * var(--border)) 0 0 0;
        --tabcontent-radius-ss: 0;
        --tabcontent-radius-se: var(--radius-box);
        --tabcontent-radius-es: var(--radius-box);
        --tabcontent-radius-ee: var(--radius-box);
      }
      :checked, label:has(:checked), :is(.tab-active, [aria-selected="true"], [aria-current="true"], [aria-current="page"]) {
        & + .tab-content {
          &:nth-child(1), &:nth-child(n + 3) {
            --tabcontent-radius-ss: var(--radius-box);
          }
        }
      }
    }
  }
  .btn-outline {
    @layer daisyui.modifier {
      &:not( .btn-active, :hover, :active:focus, :focus-visible, :disabled, [disabled], .btn-disabled, :checked ) {
        --btn-shadow: "";
        --btn-bg: #0000;
        --btn-fg: var(--btn-color);
        --btn-border: var(--btn-color);
        --btn-noise: none;
      }
      @media (hover: none) {
        &:hover:not( .btn-active, :active, :focus-visible, :disabled, [disabled], .btn-disabled, :checked ) {
          --btn-shadow: "";
          --btn-bg: #0000;
          --btn-fg: var(--btn-color);
          --btn-border: var(--btn-color);
          --btn-noise: none;
        }
      }
    }
  }
  .btn-soft {
    @layer daisyui.modifier {
      &:not( .btn-active, :hover, :active:focus, :focus-visible, :disabled, [disabled], .btn-disabled ) {
        --btn-shadow: "";
        --btn-fg: var(--btn-color, var(--color-base-content));
        --btn-bg: var(--btn-color, var(--color-base-content));
        @supports (color: color-mix(in lab, red, red)) {
          --btn-bg: color-mix(
        in oklab,
        var(--btn-color, var(--color-base-content)) 8%,
        var(--color-base-100)
      );
        }
        --btn-border: var(--btn-color, var(--color-base-content));
        @supports (color: color-mix(in lab, red, red)) {
          --btn-border: color-mix(
        in oklab,
        var(--btn-color, var(--color-base-content)) 10%,
        var(--color-base-100)
      );
        }
        --btn-noise: none;
      }
      @media (hover: none) {
        &:hover:not(.btn-active, :active, :focus-visible, :disabled, [disabled], .btn-disabled) {
          --btn-shadow: "";
          --btn-fg: var(--btn-color, var(--color-base-content));
          --btn-bg: var(--btn-color, var(--color-base-content));
          @supports (color: color-mix(in lab, red, red)) {
            --btn-bg: color-mix(
          in oklab,
          var(--btn-color, var(--color-base-content)) 8%,
          var(--color-base-100)
        );
          }
          --btn-border: var(--btn-color, var(--color-base-content));
          @supports (color: color-mix(in lab, red, red)) {
            --btn-border: color-mix(
          in oklab,
          var(--btn-color, var(--color-base-content)) 10%,
          var(--color-base-100)
        );
          }
          --btn-noise: none;
        }
      }
    }
  }
  .indicator-end {
    @layer daisyui.modifier {
      --indicator-s: auto;
      --indicator-e: 0;
      --indicator-x: 50%;
      [dir="rtl"] & {
        --indicator-s: 0;
        --indicator-e: auto;
        --indicator-x: -50%;
      }
    }
  }
  .indicator-start {
    @layer daisyui.modifier {
      --indicator-s: 0;
      --indicator-e: auto;
      --indicator-x: -50%;
      [dir="rtl"] & {
        --indicator-s: auto;
        --indicator-e: 0;
        --indicator-x: 50%;
      }
    }
  }
  .indicator-center {
    @layer daisyui.modifier {
      --indicator-s: 50%;
      --indicator-e: 50%;
      --indicator-x: -50%;
      [dir="rtl"] & {
        --indicator-x: 50%;
      }
    }
  }
  .btn-lg {
    @layer daisyui.modifier {
      --fontsize: 1.125rem;
      --btn-p: 1.25rem;
      --size: calc(var(--size-field, 0.25rem) * 12);
    }
  }
  .btn-md {
    @layer daisyui.modifier {
      --fontsize: 0.875rem;
      --btn-p: 1rem;
      --size: calc(var(--size-field, 0.25rem) * 10);
    }
  }
  .btn-sm {
    @layer daisyui.modifier {
      --fontsize: 0.75rem;
      --btn-p: 0.75rem;
      --size: calc(var(--size-field, 0.25rem) * 8);
    }
  }
  .btn-xl {
    @layer daisyui.modifier {
      --fontsize: 1.375rem;
      --btn-p: 1.5rem;
      --size: calc(var(--size-field, 0.25rem) * 14);
    }
  }
  .btn-xs {
    @layer daisyui.modifier {
      --fontsize: 0.6875rem;
      --btn-p: 0.5rem;
      --size: calc(var(--size-field, 0.25rem) * 6);
    }
  }
  .card-lg {
    @layer daisyui.modifier {
      .card-body {
        --card-p: 2rem;
        --card-fs: 1rem;
      }
      .card-title {
        --cardtitle-fs: 1.25rem;
      }
    }
  }
  .card-md {
    @layer daisyui.modifier {
      .card-body {
        --card-p: 1.5rem;
        --card-fs: 0.875rem;
      }
      .card-title {
        --cardtitle-fs: 1.125rem;
      }
    }
  }
  .card-sm {
    @layer daisyui.modifier {
      .card-body {
        --card-p: 1rem;
        --card-fs: 0.75rem;
      }
      .card-title {
        --cardtitle-fs: 1rem;
      }
    }
  }
  .card-xl {
    @layer daisyui.modifier {
      .card-body {
        --card-p: 2.5rem;
        --card-fs: 1.125rem;
      }
      .card-title {
        --cardtitle-fs: 1.375rem;
      }
    }
  }
  .card-xs {
    @layer daisyui.modifier {
      .card-body {
        --card-p: 0.5rem;
        --card-fs: 0.6875rem;
      }
      .card-title {
        --cardtitle-fs: 0.875rem;
      }
    }
  }
  .indicator-bottom {
    @layer daisyui.modifier {
      --indicator-t: auto;
      --indicator-b: 0;
      --indicator-y: 50%;
    }
  }
  .indicator-middle {
    @layer daisyui.modifier {
      --indicator-t: 50%;
      --indicator-b: 50%;
      --indicator-y: -50%;
    }
  }
  .indicator-top {
    @layer daisyui.modifier {
      --indicator-t: 0;
      --indicator-b: auto;
      --indicator-y: -50%;
    }
  }
  .badge-accent {
    @layer daisyui.modifier {
      --badge-color: var(--color-accent);
      --badge-fg: var(--color-accent-content);
    }
  }
  .badge-error {
    @layer daisyui.modifier {
      --badge-color: var(--color-error);
      --badge-fg: var(--color-error-content);
    }
  }
  .badge-info {
    @layer daisyui.modifier {
      --badge-color: var(--color-info);
      --badge-fg: var(--color-info-content);
    }
  }
  .badge-neutral {
    @layer daisyui.modifier {
      --badge-color: var(--color-neutral);
      --badge-fg: var(--color-neutral-content);
    }
  }
  .badge-primary {
    @layer daisyui.modifier {
      --badge-color: var(--color-primary);
      --badge-fg: var(--color-primary-content);
    }
  }
  .badge-secondary {
    @layer daisyui.modifier {
      --badge-color: var(--color-secondary);
      --badge-fg: var(--color-secondary-content);
    }
  }
  .badge-success {
    @layer daisyui.modifier {
      --badge-color: var(--color-success);
      --badge-fg: var(--color-success-content);
    }
  }
  .badge-warning {
    @layer daisyui.modifier {
      --badge-color: var(--color-warning);
      --badge-fg: var(--color-warning-content);
    }
  }
  .btn-accent {
    @layer daisyui.modifier.color {
      --btn-color: var(--color-accent);
      --btn-fg: var(--color-accent-content);
    }
  }
  .btn-error {
    @layer daisyui.modifier.color {
      --btn-color: var(--color-error);
      --btn-fg: var(--color-error-content);
    }
  }
  .btn-info {
    @layer daisyui.modifier.color {
      --btn-color: var(--color-info);
      --btn-fg: var(--color-info-content);
    }
  }
  .btn-neutral {
    @layer daisyui.modifier.color {
      --btn-color: var(--color-neutral);
      --btn-fg: var(--color-neutral-content);
    }
  }
  .btn-primary {
    @layer daisyui.modifier.color {
      --btn-color: var(--color-primary);
      --btn-fg: var(--color-primary-content);
    }
  }
  .btn-secondary {
    @layer daisyui.modifier.color {
      --btn-color: var(--color-secondary);
      --btn-fg: var(--color-secondary-content);
    }
  }
  .btn-success {
    @layer daisyui.modifier.color {
      --btn-color: var(--color-success);
      --btn-fg: var(--color-success-content);
    }
  }
  .btn-warning {
    @layer daisyui.modifier.color {
      --btn-color: var(--color-warning);
      --btn-fg: var(--color-warning-content);
    }
  }
  .scroll-paused {
    animation-play-state: paused !important;
    transition: none !important;
  }
  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }
  .timeline-snap-icon {
    @layer daisyui.modifier {
      > li {
        --timeline-col-start: 0.5rem;
        --timeline-row-start: minmax(0, 1fr);
      }
    }
  }
  .bg-gradient-main {
    background: linear-gradient(135deg, var(--primary), var(--secondary));
  }
  .can-animate {
    animation-play-state: running;
  }
  .card-border {
    @layer daisyui.modifier {
      border: var(--border) solid var(--color-base-200);
    }
  }
  .card-cloth-border {
    clip-path: var(--card-outer-clip);
  }
  .card-cloth-inner {
    clip-path: var(--card-inner-clip);
  }
  .card-dash {
    @layer daisyui.modifier {
      border: var(--border) dashed var(--color-base-200);
    }
  }
  .cloth-corner {
    clip-path: polygon( 4.167037rem 0rem, calc(100% - 4.167037rem) 0rem, calc(100% - 3.917025rem) 0.000347rem, calc(100% - 3.667025rem) 0.002717rem, calc(100% - 3.4171rem) 0.009112rem, calc(100% - 3.167409rem) 0.02153rem, calc(100% - 2.918255rem) 0.041962rem, calc(100% - 2.670135rem) 0.072374rem, calc(100% - 2.423782rem) 0.114689rem, calc(100% - 2.180214rem) 0.170762rem, calc(100% - 1.940767rem) 0.242331rem, calc(100% - 1.707134rem) 0.330972rem, calc(100% - 1.481384rem) 0.43803rem, calc(100% - 1.265977rem) 0.564537rem, calc(100% - 1.063758rem) 0.711127rem, calc(100% - 0.877925rem) 0.877925rem, calc(100% - 0.711127rem) 1.063758rem, calc(100% - 0.564537rem) 1.265977rem, calc(100% - 0.43803rem) 1.481384rem, calc(100% - 0.330972rem) 1.707134rem, calc(100% - 0.242331rem) 1.940767rem, calc(100% - 0.170762rem) 2.180214rem, calc(100% - 0.114689rem) 2.423782rem, calc(100% - 0.072374rem) 2.670135rem, calc(100% - 0.041962rem) 2.918255rem, calc(100% - 0.02153rem) 3.167409rem, calc(100% - 0.009112rem) 3.4171rem, calc(100% - 0.002717rem) 3.667025rem, calc(100% - 0.000347rem) 3.917025rem, 100% 4.167037rem, 100% calc(100% - 4.167037rem), calc(100% - 0.000347rem) calc(100% - 3.917025rem), calc(100% - 0.002717rem) calc(100% - 3.667025rem), calc(100% - 0.009112rem) calc(100% - 3.4171rem), calc(100% - 0.02153rem) calc(100% - 3.167409rem), calc(100% - 0.041962rem) calc(100% - 2.918255rem), calc(100% - 0.072374rem) calc(100% - 2.670135rem), calc(100% - 0.114689rem) calc(100% - 2.423782rem), calc(100% - 0.170762rem) calc(100% - 2.180214rem), calc(100% - 0.242331rem) calc(100% - 1.940767rem), calc(100% - 0.330972rem) calc(100% - 1.707134rem), calc(100% - 0.43803rem) calc(100% - 1.481384rem), calc(100% - 0.564537rem) calc(100% - 1.265977rem), calc(100% - 0.711127rem) calc(100% - 1.063758rem), calc(100% - 0.877925rem) calc(100% - 0.877925rem), calc(100% - 1.063758rem) calc(100% - 0.711127rem), calc(100% - 1.265977rem) calc(100% - 0.564537rem), calc(100% - 1.481384rem) calc(100% - 0.43803rem), calc(100% - 1.707134rem) calc(100% - 0.330972rem), calc(100% - 1.940767rem) calc(100% - 0.242331rem), calc(100% - 2.180214rem) calc(100% - 0.170762rem), calc(100% - 2.423782rem) calc(100% - 0.114689rem), calc(100% - 2.670135rem) calc(100% - 0.072374rem), calc(100% - 2.918255rem) calc(100% - 0.041962rem), calc(100% - 3.167409rem) calc(100% - 0.02153rem), calc(100% - 3.4171rem) calc(100% - 0.009112rem), calc(100% - 3.667025rem) calc(100% - 0.002717rem), calc(100% - 3.917025rem) calc(100% - 0.000347rem), calc(100% - 4.167037rem) 100%, 4.167037rem 100%, 3.917025rem calc(100% - 0.000347rem), 3.667025rem calc(100% - 0.002717rem), 3.4171rem calc(100% - 0.009112rem), 3.167409rem calc(100% - 0.02153rem), 2.918255rem calc(100% - 0.041962rem), 2.670135rem calc(100% - 0.072374rem), 2.423782rem calc(100% - 0.114689rem), 2.180214rem calc(100% - 0.170762rem), 1.940767rem calc(100% - 0.242331rem), 1.707134rem calc(100% - 0.330972rem), 1.481384rem calc(100% - 0.43803rem), 1.265977rem calc(100% - 0.564537rem), 1.063758rem calc(100% - 0.711127rem), 0.877925rem calc(100% - 0.877925rem), 0.711127rem calc(100% - 1.063758rem), 0.564537rem calc(100% - 1.265977rem), 0.43803rem calc(100% - 1.481384rem), 0.330972rem calc(100% - 1.707134rem), 0.242331rem calc(100% - 1.940767rem), 0.170762rem calc(100% - 2.180214rem), 0.114689rem calc(100% - 2.423782rem), 0.072374rem calc(100% - 2.670135rem), 0.041962rem calc(100% - 2.918255rem), 0.02153rem calc(100% - 3.167409rem), 0.009112rem calc(100% - 3.4171rem), 0.002717rem calc(100% - 3.667025rem), 0.000347rem calc(100% - 3.917025rem), 0rem calc(100% - 4.167037rem), 0rem 4.167037rem, 0.000347rem 3.917025rem, 0.002717rem 3.667025rem, 0.009112rem 3.4171rem, 0.02153rem 3.167409rem, 0.041962rem 2.918255rem, 0.072374rem 2.670135rem, 0.114689rem 2.423782rem, 0.170762rem 2.180214rem, 0.242331rem 1.940767rem, 0.330972rem 1.707134rem, 0.43803rem 1.481384rem, 0.564537rem 1.265977rem, 0.711127rem 1.063758rem, 0.877925rem 0.877925rem, 1.063758rem 0.711127rem, 1.265977rem 0.564537rem, 1.481384rem 0.43803rem, 1.707134rem 0.330972rem, 1.940767rem 0.242331rem, 2.180214rem 0.170762rem, 2.423782rem 0.114689rem, 2.670135rem 0.072374rem, 2.918255rem 0.041962rem, 3.167409rem 0.02153rem, 3.4171rem 0.009112rem, 3.667025rem 0.002717rem, 3.917025rem 0.000347rem, 4.167037rem 0rem );
  }
  .cloth-small {
    clip-path: polygon(1.5em 0em, calc(100% - 1.5em) 0em, calc(100% - 1.416003em) 0.00011em, calc(100% - 1.33201em) 0.00084em, calc(100% - 1.248038em) 0.002768em, calc(100% - 1.164129em) 0.006475em, calc(100% - 1.080363em) 0.012536em, calc(100% - 0.996867em) 0.021521em, calc(100% - 0.913832em) 0.033994em, calc(100% - 0.831515em) 0.050498em, calc(100% - 0.750258em) 0.071555em, calc(100% - 0.67049em) 0.097649em, calc(100% - 0.592738em) 0.129213em, calc(100% - 0.517633em) 0.166612em, calc(100% - 0.445907em) 0.210125em, calc(100% - 0.378394em) 0.259919em, calc(100% - 0.316025em) 0.316025em, calc(100% - 0.259919em) 0.378394em, calc(100% - 0.210125em) 0.445907em, calc(100% - 0.166612em) 0.517633em, calc(100% - 0.129213em) 0.592738em, calc(100% - 0.097649em) 0.67049em, calc(100% - 0.071555em) 0.750258em, calc(100% - 0.050498em) 0.831515em, calc(100% - 0.033994em) 0.913832em, calc(100% - 0.021521em) 0.996867em, calc(100% - 0.012536em) 1.080363em, calc(100% - 0.006475em) 1.164129em, calc(100% - 0.002768em) 1.248038em, calc(100% - 0.00084em) 1.33201em, calc(100% - 0.00011em) 1.416003em, 100% 1.5em, 100% calc(100% - 1.5em), calc(100% - 0.00011em) calc(100% - 1.416003em), calc(100% - 0.00084em) calc(100% - 1.33201em), calc(100% - 0.002768em) calc(100% - 1.248038em), calc(100% - 0.006475em) calc(100% - 1.164129em), calc(100% - 0.012536em) calc(100% - 1.080363em), calc(100% - 0.021521em) calc(100% - 0.996867em), calc(100% - 0.033994em) calc(100% - 0.913832em), calc(100% - 0.050498em) calc(100% - 0.831515em), calc(100% - 0.071555em) calc(100% - 0.750258em), calc(100% - 0.097649em) calc(100% - 0.67049em), calc(100% - 0.129213em) calc(100% - 0.592738em), calc(100% - 0.166612em) calc(100% - 0.517633em), calc(100% - 0.210125em) calc(100% - 0.445907em), calc(100% - 0.259919em) calc(100% - 0.378394em), calc(100% - 0.316025em) calc(100% - 0.316025em), calc(100% - 0.378394em) calc(100% - 0.259919em), calc(100% - 0.445907em) calc(100% - 0.210125em), calc(100% - 0.517633em) calc(100% - 0.166612em), calc(100% - 0.592738em) calc(100% - 0.129213em), calc(100% - 0.67049em) calc(100% - 0.097649em), calc(100% - 0.750258em) calc(100% - 0.071555em), calc(100% - 0.831515em) calc(100% - 0.050498em), calc(100% - 0.913832em) calc(100% - 0.033994em), calc(100% - 0.996867em) calc(100% - 0.021521em), calc(100% - 1.080363em) calc(100% - 0.012536em), calc(100% - 1.164129em) calc(100% - 0.006475em), calc(100% - 1.248038em) calc(100% - 0.002768em), calc(100% - 1.33201em) calc(100% - 0.00084em), calc(100% - 1.416003em) calc(100% - 0.00011em), calc(100% - 1.5em) 100%, 1.5em 100%, 1.416003em calc(100% - 0.00011em), 1.33201em calc(100% - 0.00084em), 1.248038em calc(100% - 0.002768em), 1.164129em calc(100% - 0.006475em), 1.080363em calc(100% - 0.012536em), 0.996867em calc(100% - 0.021521em), 0.913832em calc(100% - 0.033994em), 0.831515em calc(100% - 0.050498em), 0.750258em calc(100% - 0.071555em), 0.67049em calc(100% - 0.097649em), 0.592738em calc(100% - 0.129213em), 0.517633em calc(100% - 0.166612em), 0.445907em calc(100% - 0.210125em), 0.378394em calc(100% - 0.259919em), 0.316025em calc(100% - 0.316025em), 0.259919em calc(100% - 0.378394em), 0.210125em calc(100% - 0.445907em), 0.166612em calc(100% - 0.517633em), 0.129213em calc(100% - 0.592738em), 0.097649em calc(100% - 0.67049em), 0.071555em calc(100% - 0.750258em), 0.050498em calc(100% - 0.831515em), 0.033994em calc(100% - 0.913832em), 0.021521em calc(100% - 0.996867em), 0.012536em calc(100% - 1.080363em), 0.006475em calc(100% - 1.164129em), 0.002768em calc(100% - 1.248038em), 0.00084em calc(100% - 1.33201em), 0.00011em calc(100% - 1.416003em), 0em calc(100% - 1.5em), 0em 1.5em, 0.00011em 1.416003em, 0.00084em 1.33201em, 0.002768em 1.248038em, 0.006475em 1.164129em, 0.012536em 1.080363em, 0.021521em 0.996867em, 0.033994em 0.913832em, 0.050498em 0.831515em, 0.071555em 0.750258em, 0.097649em 0.67049em, 0.129213em 0.592738em, 0.166612em 0.517633em, 0.210125em 0.445907em, 0.259919em 0.378394em, 0.316025em 0.316025em, 0.378394em 0.259919em, 0.445907em 0.210125em, 0.517633em 0.166612em, 0.592738em 0.129213em, 0.67049em 0.097649em, 0.750258em 0.071555em, 0.831515em 0.050498em, 0.913832em 0.033994em, 0.996867em 0.021521em, 1.080363em 0.012536em, 1.164129em 0.006475em, 1.248038em 0.002768em, 1.33201em 0.00084em, 1.416003em 0.00011em, 1.5em 0em);
  }
  .content-auto {
    content-visibility: auto;
  }
  .force-paused {
    animation-play-state: paused !important;
  }
  .input-accent {
    @layer daisyui.modifier {
      &, &:focus, &:focus-within {
        --input-color: var(--color-accent);
      }
    }
  }
  .input-error {
    @layer daisyui.modifier {
      &, &:focus, &:focus-within {
        --input-color: var(--color-error);
      }
    }
  }
  .input-info {
    @layer daisyui.modifier {
      &, &:focus, &:focus-within {
        --input-color: var(--color-info);
      }
    }
  }
  .input-neutral {
    @layer daisyui.modifier {
      &, &:focus, &:focus-within {
        --input-color: var(--color-neutral);
      }
    }
  }
  .input-primary {
    @layer daisyui.modifier {
      &, &:focus, &:focus-within {
        --input-color: var(--color-primary);
      }
    }
  }
  .input-secondary {
    @layer daisyui.modifier {
      &, &:focus, &:focus-within {
        --input-color: var(--color-secondary);
      }
    }
  }
  .input-success {
    @layer daisyui.modifier {
      &, &:focus, &:focus-within {
        --input-color: var(--color-success);
      }
    }
  }
  .input-warning {
    @layer daisyui.modifier {
      &, &:focus, &:focus-within {
        --input-color: var(--color-warning);
      }
    }
  }
  .paused {
    animation-play-state: paused;
  }
  .radio-accent {
    @layer daisyui.modifier {
      --input-color: var(--color-accent);
    }
  }
  .radio-error {
    @layer daisyui.modifier {
      --input-color: var(--color-error);
    }
  }
  .radio-info {
    @layer daisyui.modifier {
      --input-color: var(--color-info);
    }
  }
  .radio-neutral {
    @layer daisyui.modifier {
      --input-color: var(--color-neutral);
    }
  }
  .radio-primary {
    @layer daisyui.modifier {
      --input-color: var(--color-primary);
    }
  }
  .radio-secondary {
    @layer daisyui.modifier {
      --input-color: var(--color-secondary);
    }
  }
  .radio-success {
    @layer daisyui.modifier {
      --input-color: var(--color-success);
    }
  }
  .radio-warning {
    @layer daisyui.modifier {
      --input-color: var(--color-warning);
    }
  }
  .range-lg {
    @layer daisyui.modifier {
      --range-thumb-size: calc(var(--size-selector, 0.25rem) * 7);
    }
  }
  .range-md {
    @layer daisyui.modifier {
      --range-thumb-size: calc(var(--size-selector, 0.25rem) * 6);
    }
  }
  .range-sm {
    @layer daisyui.modifier {
      --range-thumb-size: calc(var(--size-selector, 0.25rem) * 5);
    }
  }
  .range-xl {
    @layer daisyui.modifier {
      --range-thumb-size: calc(var(--size-selector, 0.25rem) * 8);
    }
  }
  .range-xs {
    @layer daisyui.modifier {
      --range-thumb-size: calc(var(--size-selector, 0.25rem) * 4);
    }
  }
  .scrollbar-gutter {
    scrollbar-gutter: stable both-edges;
  }
  .select-accent {
    @layer daisyui.modifier {
      &, &:focus, &:focus-within {
        --input-color: var(--color-accent);
      }
    }
  }
  .select-error {
    @layer daisyui.modifier {
      &, &:focus, &:focus-within {
        --input-color: var(--color-error);
      }
    }
  }
  .select-info {
    @layer daisyui.modifier {
      &, &:focus, &:focus-within {
        --input-color: var(--color-info);
      }
    }
  }
  .select-neutral {
    @layer daisyui.modifier {
      &, &:focus, &:focus-within {
        --input-color: var(--color-neutral);
      }
    }
  }
  .select-primary {
    @layer daisyui.modifier {
      &, &:focus, &:focus-within {
        --input-color: var(--color-primary);
      }
    }
  }
  .select-secondary {
    @layer daisyui.modifier {
      &, &:focus, &:focus-within {
        --input-color: var(--color-secondary);
      }
    }
  }
  .select-success {
    @layer daisyui.modifier {
      &, &:focus, &:focus-within {
        --input-color: var(--color-success);
      }
    }
  }
  .select-warning {
    @layer daisyui.modifier {
      &, &:focus, &:focus-within {
        --input-color: var(--color-warning);
      }
    }
  }
  .squircle-border-card {
    --squircle-border-color: #3E315Ed5;
    @supports (color: color-mix(in lab, red, red)) {
      --squircle-border-color: color-mix(in oklab, #3E315Ed5 var(--squircle-border-opacity, 100%), transparent);
    }
  }
  .squircle-border-surface {
    --squircle-border-color: #312543;
    @supports (color: color-mix(in lab, red, red)) {
      --squircle-border-color: color-mix(in oklab, var(--surface)  var(--squircle-border-opacity, 100%), transparent);
    }
  }
  .textarea-accent {
    @layer daisyui.modifier {
      &, &:focus, &:focus-within {
        --input-color: var(--color-accent);
      }
    }
  }
  .textarea-error {
    @layer daisyui.modifier {
      &, &:focus, &:focus-within {
        --input-color: var(--color-error);
      }
    }
  }
  .textarea-info {
    @layer daisyui.modifier {
      &, &:focus, &:focus-within {
        --input-color: var(--color-info);
      }
    }
  }
  .textarea-neutral {
    @layer daisyui.modifier {
      &, &:focus, &:focus-within {
        --input-color: var(--color-neutral);
      }
    }
  }
  .textarea-primary {
    @layer daisyui.modifier {
      &, &:focus, &:focus-within {
        --input-color: var(--color-primary);
      }
    }
  }
  .textarea-secondary {
    @layer daisyui.modifier {
      &, &:focus, &:focus-within {
        --input-color: var(--color-secondary);
      }
    }
  }
  .textarea-success {
    @layer daisyui.modifier {
      &, &:focus, &:focus-within {
        --input-color: var(--color-success);
      }
    }
  }
  .textarea-warning {
    @layer daisyui.modifier {
      &, &:focus, &:focus-within {
        --input-color: var(--color-warning);
      }
    }
  }
  .toggle-accent {
    @layer daisyui.modifier {
      &:checked, &[aria-checked="true"] {
        --input-color: var(--color-accent);
      }
    }
  }
  .toggle-error {
    @layer daisyui.modifier {
      &:checked, &[aria-checked="true"] {
        --input-color: var(--color-error);
      }
    }
  }
  .toggle-info {
    @layer daisyui.modifier {
      &:checked, &[aria-checked="true"] {
        --input-color: var(--color-info);
      }
    }
  }
  .toggle-lg {
    @layer daisyui.modifier {
      &:is([type="checkbox"]), &:has([type="checkbox"]) {
        --size: calc(var(--size-selector, 0.25rem) * 7);
      }
    }
  }
  .toggle-md {
    @layer daisyui.modifier {
      &:is([type="checkbox"]), &:has([type="checkbox"]) {
        --size: calc(var(--size-selector, 0.25rem) * 6);
      }
    }
  }
  .toggle-neutral {
    @layer daisyui.modifier {
      &:checked, &[aria-checked="true"] {
        --input-color: var(--color-neutral);
      }
    }
  }
  .toggle-primary {
    @layer daisyui.modifier {
      &:checked, &[aria-checked="true"] {
        --input-color: var(--color-primary);
      }
    }
  }
  .toggle-secondary {
    @layer daisyui.modifier {
      &:checked, &[aria-checked="true"] {
        --input-color: var(--color-secondary);
      }
    }
  }
  .toggle-sm {
    @layer daisyui.modifier {
      &:is([type="checkbox"]), &:has([type="checkbox"]) {
        --size: calc(var(--size-selector, 0.25rem) * 5);
      }
    }
  }
  .toggle-success {
    @layer daisyui.modifier {
      &:checked, &[aria-checked="true"] {
        --input-color: var(--color-success);
      }
    }
  }
  .toggle-warning {
    @layer daisyui.modifier {
      &:checked, &[aria-checked="true"] {
        --input-color: var(--color-warning);
      }
    }
  }
  .toggle-xl {
    @layer daisyui.modifier {
      &:is([type="checkbox"]), &:has([type="checkbox"]) {
        --size: calc(var(--size-selector, 0.25rem) * 8);
      }
    }
  }
  .toggle-xs {
    @layer daisyui.modifier {
      &:is([type="checkbox"]), &:has([type="checkbox"]) {
        --size: calc(var(--size-selector, 0.25rem) * 4);
      }
    }
  }
  .transform-3d {
    transform-style: preserve-3d;
  }
  .transform-flat {
    transform-style: flat;
  }
  .group-hover\:mb-0 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        margin-bottom: calc(var(--spacing) * 0);
      }
    }
  }
  .group-hover\:mb-3\.5 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        margin-bottom: calc(var(--spacing) * 3.5);
      }
    }
  }
  .group-hover\:mb-6 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        margin-bottom: calc(var(--spacing) * 6);
      }
    }
  }
  .group-hover\:scale-105 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-scale-x: 105%;
        --tw-scale-y: 105%;
        --tw-scale-z: 105%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .group-hover\:scale-110 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-scale-x: 110%;
        --tw-scale-y: 110%;
        --tw-scale-z: 110%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .group-hover\:bg-white {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-color: var(--color-white);
      }
    }
  }
  .group-hover\:bg-white\/8 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #fff 8%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 8%, transparent);
        }
      }
    }
  }
  .group-hover\:px-6 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        padding-inline: calc(var(--spacing) * 6);
      }
    }
  }
  .group-hover\:text-black {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-black);
      }
    }
  }
  .group-hover\:opacity-100 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .group-hover\:blur-sm {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-blur: blur(var(--blur-sm));
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
      }
    }
  }
  .group-hover\:transition-all {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        transition-property: all;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
      }
    }
  }
  .group-hover\:delay-500 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        transition-delay: 500ms;
      }
    }
  }
  .group-hover\:will-change-transform {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        will-change: transform;
      }
    }
  }
  .group-hover\:will-change-transform {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        will-change: transform;
      }
    }
  }
  .group-hover\/dropdown\:opacity-100 {
    &:is(:where(.group\/dropdown):hover *) {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .hover\:-translate-y-1 {
    &:hover {
      @media (hover: hover) {
        --tw-translate-y: calc(var(--spacing) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .hover\:scale-95 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 95%;
        --tw-scale-y: 95%;
        --tw-scale-z: 95%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:scale-105 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 105%;
        --tw-scale-y: 105%;
        --tw-scale-z: 105%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:scale-110 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 110%;
        --tw-scale-y: 110%;
        --tw-scale-z: 110%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:gpu {
    &:hover {
      @media (hover: hover) {
        transform: translate3d(0, 0, 0);
      }
    }
  }
  .hover\:transform-gpu {
    &:hover {
      @media (hover: hover) {
        transform: translateZ(0) var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
      }
    }
  }
  .hover\:bg-blue-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-600);
      }
    }
  }
  .hover\:bg-white\/10 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #fff 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
        }
      }
    }
  }
  .hover\:bg-white\/18 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #fff 18%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 18%, transparent);
        }
      }
    }
  }
  .hover\:text-primary {
    &:hover {
      @media (hover: hover) {
        color: var(--primary);
      }
    }
  }
  .hover\:text-primary {
    &:hover {
      @media (hover: hover) {
        color: var(--color-primary);
      }
    }
  }
  .hover\:text-white {
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .hover\:will-change-transform {
    &:hover {
      @media (hover: hover) {
        will-change: transform;
      }
    }
  }
  .hover\:will-change-transform {
    &:hover {
      @media (hover: hover) {
        will-change: transform;
      }
    }
  }
  .hover\:backface-hidden {
    &:hover {
      @media (hover: hover) {
        backface-visibility: hidden;
      }
    }
  }
  .hover\:transform-3d {
    &:hover {
      @media (hover: hover) {
        transform-style: preserve-3d;
      }
    }
  }
  .focus\:border-transparent {
    &:focus {
      border-color: transparent;
    }
  }
  .focus\:text-white {
    &:focus {
      color: var(--color-white);
    }
  }
  .focus\:ring-2 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .sm\:col-span-1 {
    @media (width >= 40rem) {
      grid-column: span 1 / span 1;
    }
  }
  .sm\:col-start-1 {
    @media (width >= 40rem) {
      grid-column-start: 1;
    }
  }
  .sm\:col-start-2 {
    @media (width >= 40rem) {
      grid-column-start: 2;
    }
  }
  .sm\:col-start-3 {
    @media (width >= 40rem) {
      grid-column-start: 3;
    }
  }
  .sm\:row-start-1 {
    @media (width >= 40rem) {
      grid-row-start: 1;
    }
  }
  .sm\:row-start-3 {
    @media (width >= 40rem) {
      grid-row-start: 3;
    }
  }
  .sm\:row-start-4 {
    @media (width >= 40rem) {
      grid-row-start: 4;
    }
  }
  .sm\:mt-28 {
    @media (width >= 40rem) {
      margin-top: calc(var(--spacing) * 28);
    }
  }
  .sm\:mb-9 {
    @media (width >= 40rem) {
      margin-bottom: calc(var(--spacing) * 9);
    }
  }
  .sm\:block {
    @media (width >= 40rem) {
      display: block;
    }
  }
  .sm\:h-\[581px\] {
    @media (width >= 40rem) {
      height: 581px;
    }
  }
  .sm\:w-1\/2 {
    @media (width >= 40rem) {
      width: calc(1/2 * 100%);
    }
  }
  .sm\:grid-cols-2 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .sm\:grid-cols-3 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .sm\:grid-rows-5 {
    @media (width >= 40rem) {
      grid-template-rows: repeat(5, minmax(0, 1fr));
    }
  }
  .sm\:flex-col {
    @media (width >= 40rem) {
      flex-direction: column;
    }
  }
  .sm\:flex-row {
    @media (width >= 40rem) {
      flex-direction: row;
    }
  }
  .sm\:gap-4 {
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 4);
    }
  }
  .sm\:gap-6 {
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 6);
    }
  }
  .sm\:gap-8 {
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 8);
    }
  }
  .sm\:gap-x-8 {
    @media (width >= 40rem) {
      column-gap: calc(var(--spacing) * 8);
    }
  }
  .sm\:p-16 {
    @media (width >= 40rem) {
      padding: calc(var(--spacing) * 16);
    }
  }
  .sm\:px-0 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 0);
    }
  }
  .sm\:px-6 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 6);
    }
  }
  .sm\:px-12 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 12);
    }
  }
  .sm\:py-16 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 16);
    }
  }
  .sm\:py-32 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 32);
    }
  }
  .sm\:pr-6 {
    @media (width >= 40rem) {
      padding-right: calc(var(--spacing) * 6);
    }
  }
  .sm\:text-5xl {
    @media (width >= 40rem) {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }
  .sm\:text-base {
    @media (width >= 40rem) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }
  .sm\:text-xl {
    @media (width >= 40rem) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .sm\:font-normal {
    @media (width >= 40rem) {
      --tw-font-weight: var(--font-weight-normal);
      font-weight: var(--font-weight-normal);
    }
  }
  .sm\:tracking-tight {
    @media (width >= 40rem) {
      --tw-tracking: var(--tracking-tight);
      letter-spacing: var(--tracking-tight);
    }
  }
  .md\:visible {
    @media (width >= 48rem) {
      visibility: visible;
    }
  }
  .md\:col-span-1 {
    @media (width >= 48rem) {
      grid-column: span 1 / span 1;
    }
  }
  .md\:col-span-2 {
    @media (width >= 48rem) {
      grid-column: span 2 / span 2;
    }
  }
  .md\:col-span-3 {
    @media (width >= 48rem) {
      grid-column: span 3 / span 3;
    }
  }
  .md\:col-span-4 {
    @media (width >= 48rem) {
      grid-column: span 4 / span 4;
    }
  }
  .md\:col-start-1 {
    @media (width >= 48rem) {
      grid-column-start: 1;
    }
  }
  .md\:col-start-2 {
    @media (width >= 48rem) {
      grid-column-start: 2;
    }
  }
  .md\:col-start-3 {
    @media (width >= 48rem) {
      grid-column-start: 3;
    }
  }
  .md\:row-span-1 {
    @media (width >= 48rem) {
      grid-row: span 1 / span 1;
    }
  }
  .md\:row-span-2 {
    @media (width >= 48rem) {
      grid-row: span 2 / span 2;
    }
  }
  .md\:row-start-1 {
    @media (width >= 48rem) {
      grid-row-start: 1;
    }
  }
  .md\:row-start-2 {
    @media (width >= 48rem) {
      grid-row-start: 2;
    }
  }
  .md\:-mt-8 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * -8);
    }
  }
  .md\:mb-12 {
    @media (width >= 48rem) {
      margin-bottom: calc(var(--spacing) * 12);
    }
  }
  .md\:block {
    @media (width >= 48rem) {
      display: block;
    }
  }
  .md\:flex {
    @media (width >= 48rem) {
      display: flex;
    }
  }
  .md\:h-\[232px\] {
    @media (width >= 48rem) {
      height: 232px;
    }
  }
  .md\:h-\[330px\] {
    @media (width >= 48rem) {
      height: 330px;
    }
  }
  .md\:h-\[500px\] {
    @media (width >= 48rem) {
      height: 500px;
    }
  }
  .md\:h-\[560px\] {
    @media (width >= 48rem) {
      height: 560px;
    }
  }
  .md\:h-\[800px\] {
    @media (width >= 48rem) {
      height: 800px;
    }
  }
  .md\:h-\[1240px\] {
    @media (width >= 48rem) {
      height: 1240px;
    }
  }
  .md\:h-max {
    @media (width >= 48rem) {
      height: max-content;
    }
  }
  .md\:max-h-\[650px\] {
    @media (width >= 48rem) {
      max-height: 650px;
    }
  }
  .md\:min-h-\[150px\] {
    @media (width >= 48rem) {
      min-height: 150px;
    }
  }
  .md\:min-h-\[560px\] {
    @media (width >= 48rem) {
      min-height: 560px;
    }
  }
  .md\:w-1\/2 {
    @media (width >= 48rem) {
      width: calc(1/2 * 100%);
    }
  }
  .md\:w-\[109px\] {
    @media (width >= 48rem) {
      width: 109px;
    }
  }
  .md\:w-\[140px\] {
    @media (width >= 48rem) {
      width: 140px;
    }
  }
  .md\:w-\[calc\(33\.3333\%-4rem\)\] {
    @media (width >= 48rem) {
      width: calc(33.3333% - 4rem);
    }
  }
  .md\:w-full {
    @media (width >= 48rem) {
      width: 100%;
    }
  }
  .md\:max-w-4xl {
    @media (width >= 48rem) {
      max-width: var(--container-4xl);
    }
  }
  .md\:min-w-\[286px\] {
    @media (width >= 48rem) {
      min-width: 286px;
    }
  }
  .md\:scroll-ms-16 {
    @media (width >= 48rem) {
      scroll-margin-inline-start: calc(var(--spacing) * 16);
    }
  }
  .md\:grid-cols-2 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-3 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-4 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-7 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(7, minmax(0, 1fr));
    }
  }
  .md\:grid-rows-1 {
    @media (width >= 48rem) {
      grid-template-rows: repeat(1, minmax(0, 1fr));
    }
  }
  .md\:grid-rows-2 {
    @media (width >= 48rem) {
      grid-template-rows: repeat(2, minmax(0, 1fr));
    }
  }
  .md\:flex-row {
    @media (width >= 48rem) {
      flex-direction: row;
    }
  }
  .md\:content-between {
    @media (width >= 48rem) {
      align-content: space-between;
    }
  }
  .md\:items-center {
    @media (width >= 48rem) {
      align-items: center;
    }
  }
  .md\:justify-between {
    @media (width >= 48rem) {
      justify-content: space-between;
    }
  }
  .md\:justify-end {
    @media (width >= 48rem) {
      justify-content: flex-end;
    }
  }
  .md\:gap-5 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 5);
    }
  }
  .md\:gap-6 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 6);
    }
  }
  .md\:gap-8 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 8);
    }
  }
  .md\:gap-24 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 24);
    }
  }
  .md\:gap-x-3 {
    @media (width >= 48rem) {
      column-gap: calc(var(--spacing) * 3);
    }
  }
  .md\:self-start {
    @media (width >= 48rem) {
      align-self: flex-start;
    }
  }
  .md\:px-0 {
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 0);
    }
  }
  .md\:px-6 {
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 6);
    }
  }
  .md\:px-7 {
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 7);
    }
  }
  .md\:px-12 {
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 12);
    }
  }
  .md\:py-4 {
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 4);
    }
  }
  .md\:py-6 {
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 6);
    }
  }
  .md\:py-16 {
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 16);
    }
  }
  .md\:py-24 {
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 24);
    }
  }
  .md\:py-32 {
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 32);
    }
  }
  .md\:pt-0 {
    @media (width >= 48rem) {
      padding-top: calc(var(--spacing) * 0);
    }
  }
  .md\:pt-36 {
    @media (width >= 48rem) {
      padding-top: calc(var(--spacing) * 36);
    }
  }
  .md\:pr-8 {
    @media (width >= 48rem) {
      padding-right: calc(var(--spacing) * 8);
    }
  }
  .md\:pb-0 {
    @media (width >= 48rem) {
      padding-bottom: calc(var(--spacing) * 0);
    }
  }
  .md\:pb-20 {
    @media (width >= 48rem) {
      padding-bottom: calc(var(--spacing) * 20);
    }
  }
  .md\:pb-32 {
    @media (width >= 48rem) {
      padding-bottom: calc(var(--spacing) * 32);
    }
  }
  .md\:pb-36 {
    @media (width >= 48rem) {
      padding-bottom: calc(var(--spacing) * 36);
    }
  }
  .md\:pb-44 {
    @media (width >= 48rem) {
      padding-bottom: calc(var(--spacing) * 44);
    }
  }
  .md\:text-left {
    @media (width >= 48rem) {
      text-align: left;
    }
  }
  .md\:text-4xl {
    @media (width >= 48rem) {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }
  .md\:text-5xl {
    @media (width >= 48rem) {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }
  .md\:text-base {
    @media (width >= 48rem) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }
  .md\:text-\[2\.7rem\] {
    @media (width >= 48rem) {
      font-size: 2.7rem;
    }
  }
  .lg\:mt-6 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 6);
    }
  }
  .lg\:mb-16 {
    @media (width >= 64rem) {
      margin-bottom: calc(var(--spacing) * 16);
    }
  }
  .lg\:ml-10 {
    @media (width >= 64rem) {
      margin-left: calc(var(--spacing) * 10);
    }
  }
  .lg\:block {
    @media (width >= 64rem) {
      display: block;
    }
  }
  .lg\:flex {
    @media (width >= 64rem) {
      display: flex;
    }
  }
  .lg\:hidden {
    @media (width >= 64rem) {
      display: none;
    }
  }
  .lg\:grid-cols-2 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-4 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .lg\:px-8 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 8);
    }
  }
  .lg\:py-16 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 16);
    }
  }
  .lg\:py-36 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 36);
    }
  }
  .lg\:py-40 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 40);
    }
  }
  .lg\:pt-6 {
    @media (width >= 64rem) {
      padding-top: calc(var(--spacing) * 6);
    }
  }
  .lg\:pb-22 {
    @media (width >= 64rem) {
      padding-bottom: calc(var(--spacing) * 22);
    }
  }
  .lg\:pb-28 {
    @media (width >= 64rem) {
      padding-bottom: calc(var(--spacing) * 28);
    }
  }
  .lg\:pl-10 {
    @media (width >= 64rem) {
      padding-left: calc(var(--spacing) * 10);
    }
  }
  .lg\:text-4xl {
    @media (width >= 64rem) {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }
  .lg\:text-5xl {
    @media (width >= 64rem) {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }
  .lg\:text-6xl {
    @media (width >= 64rem) {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
  }
  .lg\:text-lg {
    @media (width >= 64rem) {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  .xl\:text-6xl {
    @media (width >= 80rem) {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
  }
}
@layer base {
  @font-face {
    font-family: 'Satoshi';
    src: url('../fonts/Satoshi-Variable.woff2') format('woff2');
    font-weight: 300 900;
    font-display: swap;
    font-style: normal;
  }
  html {
    overflow-x: clip;
    font-family: var(--font-display);
    -moz-osx-font-smoothing: grayscale;
    scrollbar-gutter: stable both-edges;
    -webkit-font-smoothing: antialiased;
    -moz-text-size-adjust: none;
    -webkit-text-size-adjust: none;
    text-size-adjust: none;
    text-rendering: optimizeLegibility;
    font-synthesis: none;
    -webkit-overflow-scrolling: none;
    max-width: 100vw;
    scrollbar-width: none;
    &::-webkit-scrollbar {
      display: none;
    }
  }
  body {
    background-image: linear-gradient(to right, var(--bg-2) 60%, var(--bg) 100%);
    background-color: var(--bg-0);
    color: var(--text);
    overscroll-behavior: touch;
    max-width: 100vw;
    overflow-x: clip;
    width: 100%;
    height: 100%;
    -webkit-text-size-adjust: 100%;
  }
  h1 {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
    --tw-leading: calc(var(--spacing) * 10);
    line-height: calc(var(--spacing) * 10);
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    @media (width >= 40rem) {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
    @media (width >= 48rem) {
      --tw-leading: calc(var(--spacing) * 16);
      line-height: calc(var(--spacing) * 16);
    }
    @media (width >= 64rem) {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
  }
  h2 {
    margin-bottom: calc(var(--spacing) * 7);
    font-size: 1.7rem;
    --tw-leading: var(--leading-tight);
    line-height: var(--leading-tight);
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    @media (width >= 48rem) {
      font-size: 2.7rem;
    }
  }
  h3 {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
    --tw-leading: var(--leading-tight);
    line-height: var(--leading-tight);
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    @media (width >= 64rem) {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
  }
  h6 {
    margin-bottom: calc(var(--spacing) * 4);
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
  }
  h4 {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  h5 {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  span {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--text-2);
  }
}
@layer components {
  .above-header {
    background-image: linear-gradient(135deg, var(--secondary), var(--warning));
    margin-block: auto;
    height: calc(var(--spacing) * 8);
    max-width: 100vw;
    min-width: 100vw;
    align-content: center;
    overflow: hidden;
  }
  .menuhoverbg {
    pointer-events: none;
    position: absolute;
    inset: calc(var(--spacing) * 0);
    z-index: 1;
    margin-inline: auto;
    width: 100%;
    height: 100%;
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 150ms;
    transition-duration: 150ms;
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .menupaddingbg {
    position: relative;
    margin-inline: auto;
    cursor: pointer;
    padding-inline: calc(var(--spacing) * 2);
    padding-block: calc(var(--spacing) * 3);
  }
  section {
    margin-inline: auto;
    margin-block: auto;
    overflow-x: clip;
    overscroll-behavior-x: none;
    padding-inline: calc(var(--spacing) * 2);
    padding-block: calc(var(--spacing) * 6);
    padding-bottom: calc(var(--spacing) * 24);
    contain: layout paint;
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 16);
    }
    @media (width >= 48rem) {
      padding-bottom: calc(var(--spacing) * 32);
    }
  }
  .benefits-wrapper {
    content-visibility: auto;
    padding: 1rem 0.1rem;
  }
  .card-feature {
    padding: 2.3561944902px;
    padding-right: 1.5707963268px;
    display: flex;
    align-items: safe center;
    justify-content: safe center;
    clip-path: polygon( 4.167037rem 0rem, calc(100% - 4.167037rem) 0rem, calc(100% - 3.917025rem) 0.000347rem, calc(100% - 3.667025rem) 0.002717rem, calc(100% - 3.4171rem) 0.009112rem, calc(100% - 3.167409rem) 0.02153rem, calc(100% - 2.918255rem) 0.041962rem, calc(100% - 2.670135rem) 0.072374rem, calc(100% - 2.423782rem) 0.114689rem, calc(100% - 2.180214rem) 0.170762rem, calc(100% - 1.940767rem) 0.242331rem, calc(100% - 1.707134rem) 0.330972rem, calc(100% - 1.481384rem) 0.43803rem, calc(100% - 1.265977rem) 0.564537rem, calc(100% - 1.063758rem) 0.711127rem, calc(100% - 0.877925rem) 0.877925rem, calc(100% - 0.711127rem) 1.063758rem, calc(100% - 0.564537rem) 1.265977rem, calc(100% - 0.43803rem) 1.481384rem, calc(100% - 0.330972rem) 1.707134rem, calc(100% - 0.242331rem) 1.940767rem, calc(100% - 0.170762rem) 2.180214rem, calc(100% - 0.114689rem) 2.423782rem, calc(100% - 0.072374rem) 2.670135rem, calc(100% - 0.041962rem) 2.918255rem, calc(100% - 0.02153rem) 3.167409rem, calc(100% - 0.009112rem) 3.4171rem, calc(100% - 0.002717rem) 3.667025rem, calc(100% - 0.000347rem) 3.917025rem, 100% 4.167037rem, 100% calc(100% - 4.167037rem), calc(100% - 0.000347rem) calc(100% - 3.917025rem), calc(100% - 0.002717rem) calc(100% - 3.667025rem), calc(100% - 0.009112rem) calc(100% - 3.4171rem), calc(100% - 0.02153rem) calc(100% - 3.167409rem), calc(100% - 0.041962rem) calc(100% - 2.918255rem), calc(100% - 0.072374rem) calc(100% - 2.670135rem), calc(100% - 0.114689rem) calc(100% - 2.423782rem), calc(100% - 0.170762rem) calc(100% - 2.180214rem), calc(100% - 0.242331rem) calc(100% - 1.940767rem), calc(100% - 0.330972rem) calc(100% - 1.707134rem), calc(100% - 0.43803rem) calc(100% - 1.481384rem), calc(100% - 0.564537rem) calc(100% - 1.265977rem), calc(100% - 0.711127rem) calc(100% - 1.063758rem), calc(100% - 0.877925rem) calc(100% - 0.877925rem), calc(100% - 1.063758rem) calc(100% - 0.711127rem), calc(100% - 1.265977rem) calc(100% - 0.564537rem), calc(100% - 1.481384rem) calc(100% - 0.43803rem), calc(100% - 1.707134rem) calc(100% - 0.330972rem), calc(100% - 1.940767rem) calc(100% - 0.242331rem), calc(100% - 2.180214rem) calc(100% - 0.170762rem), calc(100% - 2.423782rem) calc(100% - 0.114689rem), calc(100% - 2.670135rem) calc(100% - 0.072374rem), calc(100% - 2.918255rem) calc(100% - 0.041962rem), calc(100% - 3.167409rem) calc(100% - 0.02153rem), calc(100% - 3.4171rem) calc(100% - 0.009112rem), calc(100% - 3.667025rem) calc(100% - 0.002717rem), calc(100% - 3.917025rem) calc(100% - 0.000347rem), calc(100% - 4.167037rem) 100%, 4.167037rem 100%, 3.917025rem calc(100% - 0.000347rem), 3.667025rem calc(100% - 0.002717rem), 3.4171rem calc(100% - 0.009112rem), 3.167409rem calc(100% - 0.02153rem), 2.918255rem calc(100% - 0.041962rem), 2.670135rem calc(100% - 0.072374rem), 2.423782rem calc(100% - 0.114689rem), 2.180214rem calc(100% - 0.170762rem), 1.940767rem calc(100% - 0.242331rem), 1.707134rem calc(100% - 0.330972rem), 1.481384rem calc(100% - 0.43803rem), 1.265977rem calc(100% - 0.564537rem), 1.063758rem calc(100% - 0.711127rem), 0.877925rem calc(100% - 0.877925rem), 0.711127rem calc(100% - 1.063758rem), 0.564537rem calc(100% - 1.265977rem), 0.43803rem calc(100% - 1.481384rem), 0.330972rem calc(100% - 1.707134rem), 0.242331rem calc(100% - 1.940767rem), 0.170762rem calc(100% - 2.180214rem), 0.114689rem calc(100% - 2.423782rem), 0.072374rem calc(100% - 2.670135rem), 0.041962rem calc(100% - 2.918255rem), 0.02153rem calc(100% - 3.167409rem), 0.009112rem calc(100% - 3.4171rem), 0.002717rem calc(100% - 3.667025rem), 0.000347rem calc(100% - 3.917025rem), 0rem calc(100% - 4.167037rem), 0rem 4.167037rem, 0.000347rem 3.917025rem, 0.002717rem 3.667025rem, 0.009112rem 3.4171rem, 0.02153rem 3.167409rem, 0.041962rem 2.918255rem, 0.072374rem 2.670135rem, 0.114689rem 2.423782rem, 0.170762rem 2.180214rem, 0.242331rem 1.940767rem, 0.330972rem 1.707134rem, 0.43803rem 1.481384rem, 0.564537rem 1.265977rem, 0.711127rem 1.063758rem, 0.877925rem 0.877925rem, 1.063758rem 0.711127rem, 1.265977rem 0.564537rem, 1.481384rem 0.43803rem, 1.707134rem 0.330972rem, 1.940767rem 0.242331rem, 2.180214rem 0.170762rem, 2.423782rem 0.114689rem, 2.670135rem 0.072374rem, 2.918255rem 0.041962rem, 3.167409rem 0.02153rem, 3.4171rem 0.009112rem, 3.667025rem 0.002717rem, 3.917025rem 0.000347rem, 4.167037rem 0rem );
    background: #3e374ee4;
    background-image: radial-gradient(circle at 15% 20%, rgba(187,169,246,0.4), transparent 30%), radial-gradient(circle at 90% 80%, rgba(192,114,209,0.1), transparent 30%);
    -webkit-user-select: none;
    user-select: none;
  }
  .card-feature-icon {
    margin-inline: auto;
    margin-bottom: calc(var(--spacing) * 4);
    display: flex;
    height: calc(var(--spacing) * 20);
    width: calc(var(--spacing) * 20);
    align-items: center;
    justify-content: center;
    &>svg {
      contain: layout paint;
    }
    &>img {
      opacity: 70%;
    }
  }
  .karta-outside {
    margin-block: auto;
    padding: 2.3561944902px;
    padding-right: 1.5707963268px;
    display: flex;
    align-items: safe center;
    justify-content: safe center;
    clip-path: polygon( 4.167037rem 0rem, calc(100% - 4.167037rem) 0rem, calc(100% - 3.917025rem) 0.000347rem, calc(100% - 3.667025rem) 0.002717rem, calc(100% - 3.4171rem) 0.009112rem, calc(100% - 3.167409rem) 0.02153rem, calc(100% - 2.918255rem) 0.041962rem, calc(100% - 2.670135rem) 0.072374rem, calc(100% - 2.423782rem) 0.114689rem, calc(100% - 2.180214rem) 0.170762rem, calc(100% - 1.940767rem) 0.242331rem, calc(100% - 1.707134rem) 0.330972rem, calc(100% - 1.481384rem) 0.43803rem, calc(100% - 1.265977rem) 0.564537rem, calc(100% - 1.063758rem) 0.711127rem, calc(100% - 0.877925rem) 0.877925rem, calc(100% - 0.711127rem) 1.063758rem, calc(100% - 0.564537rem) 1.265977rem, calc(100% - 0.43803rem) 1.481384rem, calc(100% - 0.330972rem) 1.707134rem, calc(100% - 0.242331rem) 1.940767rem, calc(100% - 0.170762rem) 2.180214rem, calc(100% - 0.114689rem) 2.423782rem, calc(100% - 0.072374rem) 2.670135rem, calc(100% - 0.041962rem) 2.918255rem, calc(100% - 0.02153rem) 3.167409rem, calc(100% - 0.009112rem) 3.4171rem, calc(100% - 0.002717rem) 3.667025rem, calc(100% - 0.000347rem) 3.917025rem, 100% 4.167037rem, 100% calc(100% - 4.167037rem), calc(100% - 0.000347rem) calc(100% - 3.917025rem), calc(100% - 0.002717rem) calc(100% - 3.667025rem), calc(100% - 0.009112rem) calc(100% - 3.4171rem), calc(100% - 0.02153rem) calc(100% - 3.167409rem), calc(100% - 0.041962rem) calc(100% - 2.918255rem), calc(100% - 0.072374rem) calc(100% - 2.670135rem), calc(100% - 0.114689rem) calc(100% - 2.423782rem), calc(100% - 0.170762rem) calc(100% - 2.180214rem), calc(100% - 0.242331rem) calc(100% - 1.940767rem), calc(100% - 0.330972rem) calc(100% - 1.707134rem), calc(100% - 0.43803rem) calc(100% - 1.481384rem), calc(100% - 0.564537rem) calc(100% - 1.265977rem), calc(100% - 0.711127rem) calc(100% - 1.063758rem), calc(100% - 0.877925rem) calc(100% - 0.877925rem), calc(100% - 1.063758rem) calc(100% - 0.711127rem), calc(100% - 1.265977rem) calc(100% - 0.564537rem), calc(100% - 1.481384rem) calc(100% - 0.43803rem), calc(100% - 1.707134rem) calc(100% - 0.330972rem), calc(100% - 1.940767rem) calc(100% - 0.242331rem), calc(100% - 2.180214rem) calc(100% - 0.170762rem), calc(100% - 2.423782rem) calc(100% - 0.114689rem), calc(100% - 2.670135rem) calc(100% - 0.072374rem), calc(100% - 2.918255rem) calc(100% - 0.041962rem), calc(100% - 3.167409rem) calc(100% - 0.02153rem), calc(100% - 3.4171rem) calc(100% - 0.009112rem), calc(100% - 3.667025rem) calc(100% - 0.002717rem), calc(100% - 3.917025rem) calc(100% - 0.000347rem), calc(100% - 4.167037rem) 100%, 4.167037rem 100%, 3.917025rem calc(100% - 0.000347rem), 3.667025rem calc(100% - 0.002717rem), 3.4171rem calc(100% - 0.009112rem), 3.167409rem calc(100% - 0.02153rem), 2.918255rem calc(100% - 0.041962rem), 2.670135rem calc(100% - 0.072374rem), 2.423782rem calc(100% - 0.114689rem), 2.180214rem calc(100% - 0.170762rem), 1.940767rem calc(100% - 0.242331rem), 1.707134rem calc(100% - 0.330972rem), 1.481384rem calc(100% - 0.43803rem), 1.265977rem calc(100% - 0.564537rem), 1.063758rem calc(100% - 0.711127rem), 0.877925rem calc(100% - 0.877925rem), 0.711127rem calc(100% - 1.063758rem), 0.564537rem calc(100% - 1.265977rem), 0.43803rem calc(100% - 1.481384rem), 0.330972rem calc(100% - 1.707134rem), 0.242331rem calc(100% - 1.940767rem), 0.170762rem calc(100% - 2.180214rem), 0.114689rem calc(100% - 2.423782rem), 0.072374rem calc(100% - 2.670135rem), 0.041962rem calc(100% - 2.918255rem), 0.02153rem calc(100% - 3.167409rem), 0.009112rem calc(100% - 3.4171rem), 0.002717rem calc(100% - 3.667025rem), 0.000347rem calc(100% - 3.917025rem), 0rem calc(100% - 4.167037rem), 0rem 4.167037rem, 0.000347rem 3.917025rem, 0.002717rem 3.667025rem, 0.009112rem 3.4171rem, 0.02153rem 3.167409rem, 0.041962rem 2.918255rem, 0.072374rem 2.670135rem, 0.114689rem 2.423782rem, 0.170762rem 2.180214rem, 0.242331rem 1.940767rem, 0.330972rem 1.707134rem, 0.43803rem 1.481384rem, 0.564537rem 1.265977rem, 0.711127rem 1.063758rem, 0.877925rem 0.877925rem, 1.063758rem 0.711127rem, 1.265977rem 0.564537rem, 1.481384rem 0.43803rem, 1.707134rem 0.330972rem, 1.940767rem 0.242331rem, 2.180214rem 0.170762rem, 2.423782rem 0.114689rem, 2.670135rem 0.072374rem, 2.918255rem 0.041962rem, 3.167409rem 0.02153rem, 3.4171rem 0.009112rem, 3.667025rem 0.002717rem, 3.917025rem 0.000347rem, 4.167037rem 0rem );
    background: #3e374ee4;
    background-image: radial-gradient(circle at 15% 20%, rgba(187,169,246,0.4), transparent 30%), radial-gradient(circle at 90% 80%, rgba(192,114,209,0.1), transparent 30%);
    height: 100%;
    contain: layout paint;
    transform-style: preserve-3d;
  }
  .karta {
    position: relative;
    z-index: 20;
    height: 100%;
    object-fit: cover;
    padding-inline: calc(var(--spacing) * 1.5);
    padding-block: calc(var(--spacing) * 7);
    text-align: center;
    clip-path: polygon( 4.167037rem 0rem, calc(100% - 4.167037rem) 0rem, calc(100% - 3.917025rem) 0.000347rem, calc(100% - 3.667025rem) 0.002717rem, calc(100% - 3.4171rem) 0.009112rem, calc(100% - 3.167409rem) 0.02153rem, calc(100% - 2.918255rem) 0.041962rem, calc(100% - 2.670135rem) 0.072374rem, calc(100% - 2.423782rem) 0.114689rem, calc(100% - 2.180214rem) 0.170762rem, calc(100% - 1.940767rem) 0.242331rem, calc(100% - 1.707134rem) 0.330972rem, calc(100% - 1.481384rem) 0.43803rem, calc(100% - 1.265977rem) 0.564537rem, calc(100% - 1.063758rem) 0.711127rem, calc(100% - 0.877925rem) 0.877925rem, calc(100% - 0.711127rem) 1.063758rem, calc(100% - 0.564537rem) 1.265977rem, calc(100% - 0.43803rem) 1.481384rem, calc(100% - 0.330972rem) 1.707134rem, calc(100% - 0.242331rem) 1.940767rem, calc(100% - 0.170762rem) 2.180214rem, calc(100% - 0.114689rem) 2.423782rem, calc(100% - 0.072374rem) 2.670135rem, calc(100% - 0.041962rem) 2.918255rem, calc(100% - 0.02153rem) 3.167409rem, calc(100% - 0.009112rem) 3.4171rem, calc(100% - 0.002717rem) 3.667025rem, calc(100% - 0.000347rem) 3.917025rem, 100% 4.167037rem, 100% calc(100% - 4.167037rem), calc(100% - 0.000347rem) calc(100% - 3.917025rem), calc(100% - 0.002717rem) calc(100% - 3.667025rem), calc(100% - 0.009112rem) calc(100% - 3.4171rem), calc(100% - 0.02153rem) calc(100% - 3.167409rem), calc(100% - 0.041962rem) calc(100% - 2.918255rem), calc(100% - 0.072374rem) calc(100% - 2.670135rem), calc(100% - 0.114689rem) calc(100% - 2.423782rem), calc(100% - 0.170762rem) calc(100% - 2.180214rem), calc(100% - 0.242331rem) calc(100% - 1.940767rem), calc(100% - 0.330972rem) calc(100% - 1.707134rem), calc(100% - 0.43803rem) calc(100% - 1.481384rem), calc(100% - 0.564537rem) calc(100% - 1.265977rem), calc(100% - 0.711127rem) calc(100% - 1.063758rem), calc(100% - 0.877925rem) calc(100% - 0.877925rem), calc(100% - 1.063758rem) calc(100% - 0.711127rem), calc(100% - 1.265977rem) calc(100% - 0.564537rem), calc(100% - 1.481384rem) calc(100% - 0.43803rem), calc(100% - 1.707134rem) calc(100% - 0.330972rem), calc(100% - 1.940767rem) calc(100% - 0.242331rem), calc(100% - 2.180214rem) calc(100% - 0.170762rem), calc(100% - 2.423782rem) calc(100% - 0.114689rem), calc(100% - 2.670135rem) calc(100% - 0.072374rem), calc(100% - 2.918255rem) calc(100% - 0.041962rem), calc(100% - 3.167409rem) calc(100% - 0.02153rem), calc(100% - 3.4171rem) calc(100% - 0.009112rem), calc(100% - 3.667025rem) calc(100% - 0.002717rem), calc(100% - 3.917025rem) calc(100% - 0.000347rem), calc(100% - 4.167037rem) 100%, 4.167037rem 100%, 3.917025rem calc(100% - 0.000347rem), 3.667025rem calc(100% - 0.002717rem), 3.4171rem calc(100% - 0.009112rem), 3.167409rem calc(100% - 0.02153rem), 2.918255rem calc(100% - 0.041962rem), 2.670135rem calc(100% - 0.072374rem), 2.423782rem calc(100% - 0.114689rem), 2.180214rem calc(100% - 0.170762rem), 1.940767rem calc(100% - 0.242331rem), 1.707134rem calc(100% - 0.330972rem), 1.481384rem calc(100% - 0.43803rem), 1.265977rem calc(100% - 0.564537rem), 1.063758rem calc(100% - 0.711127rem), 0.877925rem calc(100% - 0.877925rem), 0.711127rem calc(100% - 1.063758rem), 0.564537rem calc(100% - 1.265977rem), 0.43803rem calc(100% - 1.481384rem), 0.330972rem calc(100% - 1.707134rem), 0.242331rem calc(100% - 1.940767rem), 0.170762rem calc(100% - 2.180214rem), 0.114689rem calc(100% - 2.423782rem), 0.072374rem calc(100% - 2.670135rem), 0.041962rem calc(100% - 2.918255rem), 0.02153rem calc(100% - 3.167409rem), 0.009112rem calc(100% - 3.4171rem), 0.002717rem calc(100% - 3.667025rem), 0.000347rem calc(100% - 3.917025rem), 0rem calc(100% - 4.167037rem), 0rem 4.167037rem, 0.000347rem 3.917025rem, 0.002717rem 3.667025rem, 0.009112rem 3.4171rem, 0.02153rem 3.167409rem, 0.041962rem 2.918255rem, 0.072374rem 2.670135rem, 0.114689rem 2.423782rem, 0.170762rem 2.180214rem, 0.242331rem 1.940767rem, 0.330972rem 1.707134rem, 0.43803rem 1.481384rem, 0.564537rem 1.265977rem, 0.711127rem 1.063758rem, 0.877925rem 0.877925rem, 1.063758rem 0.711127rem, 1.265977rem 0.564537rem, 1.481384rem 0.43803rem, 1.707134rem 0.330972rem, 1.940767rem 0.242331rem, 2.180214rem 0.170762rem, 2.423782rem 0.114689rem, 2.670135rem 0.072374rem, 2.918255rem 0.041962rem, 3.167409rem 0.02153rem, 3.4171rem 0.009112rem, 3.667025rem 0.002717rem, 3.917025rem 0.000347rem, 4.167037rem 0rem );
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 7);
    }
  }
  .wrapper {
    margin-inline: auto;
    margin-block: auto;
    max-width: var(--container-7xl);
  }
  .section-gradient {
    background: linear-gradient(130deg, var(--primary) -40%, var(--secondary) 100%);
  }
  .button-inner {
    padding-inline: calc(var(--spacing) * 3);
    padding-block: calc(var(--spacing) * 2);
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 200ms;
    transition-duration: 200ms;
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
    background: linear-gradient(135deg, var(--primary), var(--secondary));
    clip-path: polygon(1.5em 0em, calc(100% - 1.5em) 0em, calc(100% - 1.416003em) 0.00011em, calc(100% - 1.33201em) 0.00084em, calc(100% - 1.248038em) 0.002768em, calc(100% - 1.164129em) 0.006475em, calc(100% - 1.080363em) 0.012536em, calc(100% - 0.996867em) 0.021521em, calc(100% - 0.913832em) 0.033994em, calc(100% - 0.831515em) 0.050498em, calc(100% - 0.750258em) 0.071555em, calc(100% - 0.67049em) 0.097649em, calc(100% - 0.592738em) 0.129213em, calc(100% - 0.517633em) 0.166612em, calc(100% - 0.445907em) 0.210125em, calc(100% - 0.378394em) 0.259919em, calc(100% - 0.316025em) 0.316025em, calc(100% - 0.259919em) 0.378394em, calc(100% - 0.210125em) 0.445907em, calc(100% - 0.166612em) 0.517633em, calc(100% - 0.129213em) 0.592738em, calc(100% - 0.097649em) 0.67049em, calc(100% - 0.071555em) 0.750258em, calc(100% - 0.050498em) 0.831515em, calc(100% - 0.033994em) 0.913832em, calc(100% - 0.021521em) 0.996867em, calc(100% - 0.012536em) 1.080363em, calc(100% - 0.006475em) 1.164129em, calc(100% - 0.002768em) 1.248038em, calc(100% - 0.00084em) 1.33201em, calc(100% - 0.00011em) 1.416003em, 100% 1.5em, 100% calc(100% - 1.5em), calc(100% - 0.00011em) calc(100% - 1.416003em), calc(100% - 0.00084em) calc(100% - 1.33201em), calc(100% - 0.002768em) calc(100% - 1.248038em), calc(100% - 0.006475em) calc(100% - 1.164129em), calc(100% - 0.012536em) calc(100% - 1.080363em), calc(100% - 0.021521em) calc(100% - 0.996867em), calc(100% - 0.033994em) calc(100% - 0.913832em), calc(100% - 0.050498em) calc(100% - 0.831515em), calc(100% - 0.071555em) calc(100% - 0.750258em), calc(100% - 0.097649em) calc(100% - 0.67049em), calc(100% - 0.129213em) calc(100% - 0.592738em), calc(100% - 0.166612em) calc(100% - 0.517633em), calc(100% - 0.210125em) calc(100% - 0.445907em), calc(100% - 0.259919em) calc(100% - 0.378394em), calc(100% - 0.316025em) calc(100% - 0.316025em), calc(100% - 0.378394em) calc(100% - 0.259919em), calc(100% - 0.445907em) calc(100% - 0.210125em), calc(100% - 0.517633em) calc(100% - 0.166612em), calc(100% - 0.592738em) calc(100% - 0.129213em), calc(100% - 0.67049em) calc(100% - 0.097649em), calc(100% - 0.750258em) calc(100% - 0.071555em), calc(100% - 0.831515em) calc(100% - 0.050498em), calc(100% - 0.913832em) calc(100% - 0.033994em), calc(100% - 0.996867em) calc(100% - 0.021521em), calc(100% - 1.080363em) calc(100% - 0.012536em), calc(100% - 1.164129em) calc(100% - 0.006475em), calc(100% - 1.248038em) calc(100% - 0.002768em), calc(100% - 1.33201em) calc(100% - 0.00084em), calc(100% - 1.416003em) calc(100% - 0.00011em), calc(100% - 1.5em) 100%, 1.5em 100%, 1.416003em calc(100% - 0.00011em), 1.33201em calc(100% - 0.00084em), 1.248038em calc(100% - 0.002768em), 1.164129em calc(100% - 0.006475em), 1.080363em calc(100% - 0.012536em), 0.996867em calc(100% - 0.021521em), 0.913832em calc(100% - 0.033994em), 0.831515em calc(100% - 0.050498em), 0.750258em calc(100% - 0.071555em), 0.67049em calc(100% - 0.097649em), 0.592738em calc(100% - 0.129213em), 0.517633em calc(100% - 0.166612em), 0.445907em calc(100% - 0.210125em), 0.378394em calc(100% - 0.259919em), 0.316025em calc(100% - 0.316025em), 0.259919em calc(100% - 0.378394em), 0.210125em calc(100% - 0.445907em), 0.166612em calc(100% - 0.517633em), 0.129213em calc(100% - 0.592738em), 0.097649em calc(100% - 0.67049em), 0.071555em calc(100% - 0.750258em), 0.050498em calc(100% - 0.831515em), 0.033994em calc(100% - 0.913832em), 0.021521em calc(100% - 0.996867em), 0.012536em calc(100% - 1.080363em), 0.006475em calc(100% - 1.164129em), 0.002768em calc(100% - 1.248038em), 0.00084em calc(100% - 1.33201em), 0.00011em calc(100% - 1.416003em), 0em calc(100% - 1.5em), 0em 1.5em, 0.00011em 1.416003em, 0.00084em 1.33201em, 0.002768em 1.248038em, 0.006475em 1.164129em, 0.012536em 1.080363em, 0.021521em 0.996867em, 0.033994em 0.913832em, 0.050498em 0.831515em, 0.071555em 0.750258em, 0.097649em 0.67049em, 0.129213em 0.592738em, 0.166612em 0.517633em, 0.210125em 0.445907em, 0.259919em 0.378394em, 0.316025em 0.316025em, 0.378394em 0.259919em, 0.445907em 0.210125em, 0.517633em 0.166612em, 0.592738em 0.129213em, 0.67049em 0.097649em, 0.750258em 0.071555em, 0.831515em 0.050498em, 0.913832em 0.033994em, 0.996867em 0.021521em, 1.080363em 0.012536em, 1.164129em 0.006475em, 1.248038em 0.002768em, 1.33201em 0.00084em, 1.416003em 0.00011em, 1.5em 0em);
  }
  header {
    z-index: 99999;
    margin-inline: auto;
    margin-block: auto;
    height: calc(var(--spacing) * 21);
    max-width: var(--container-6xl);
    padding-inline: calc(var(--spacing) * 2);
    padding-block: calc(var(--spacing) * 4);
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 6);
    }
    @media (width >= 48rem) {
      padding-bottom: calc(var(--spacing) * 0);
    }
  }
  .cloth-button, .cloth-button-border, .cloth-menu {
    clip-path: polygon(1.5em 0em, calc(100% - 1.5em) 0em, calc(100% - 1.416003em) 0.00011em, calc(100% - 1.33201em) 0.00084em, calc(100% - 1.248038em) 0.002768em, calc(100% - 1.164129em) 0.006475em, calc(100% - 1.080363em) 0.012536em, calc(100% - 0.996867em) 0.021521em, calc(100% - 0.913832em) 0.033994em, calc(100% - 0.831515em) 0.050498em, calc(100% - 0.750258em) 0.071555em, calc(100% - 0.67049em) 0.097649em, calc(100% - 0.592738em) 0.129213em, calc(100% - 0.517633em) 0.166612em, calc(100% - 0.445907em) 0.210125em, calc(100% - 0.378394em) 0.259919em, calc(100% - 0.316025em) 0.316025em, calc(100% - 0.259919em) 0.378394em, calc(100% - 0.210125em) 0.445907em, calc(100% - 0.166612em) 0.517633em, calc(100% - 0.129213em) 0.592738em, calc(100% - 0.097649em) 0.67049em, calc(100% - 0.071555em) 0.750258em, calc(100% - 0.050498em) 0.831515em, calc(100% - 0.033994em) 0.913832em, calc(100% - 0.021521em) 0.996867em, calc(100% - 0.012536em) 1.080363em, calc(100% - 0.006475em) 1.164129em, calc(100% - 0.002768em) 1.248038em, calc(100% - 0.00084em) 1.33201em, calc(100% - 0.00011em) 1.416003em, 100% 1.5em, 100% calc(100% - 1.5em), calc(100% - 0.00011em) calc(100% - 1.416003em), calc(100% - 0.00084em) calc(100% - 1.33201em), calc(100% - 0.002768em) calc(100% - 1.248038em), calc(100% - 0.006475em) calc(100% - 1.164129em), calc(100% - 0.012536em) calc(100% - 1.080363em), calc(100% - 0.021521em) calc(100% - 0.996867em), calc(100% - 0.033994em) calc(100% - 0.913832em), calc(100% - 0.050498em) calc(100% - 0.831515em), calc(100% - 0.071555em) calc(100% - 0.750258em), calc(100% - 0.097649em) calc(100% - 0.67049em), calc(100% - 0.129213em) calc(100% - 0.592738em), calc(100% - 0.166612em) calc(100% - 0.517633em), calc(100% - 0.210125em) calc(100% - 0.445907em), calc(100% - 0.259919em) calc(100% - 0.378394em), calc(100% - 0.316025em) calc(100% - 0.316025em), calc(100% - 0.378394em) calc(100% - 0.259919em), calc(100% - 0.445907em) calc(100% - 0.210125em), calc(100% - 0.517633em) calc(100% - 0.166612em), calc(100% - 0.592738em) calc(100% - 0.129213em), calc(100% - 0.67049em) calc(100% - 0.097649em), calc(100% - 0.750258em) calc(100% - 0.071555em), calc(100% - 0.831515em) calc(100% - 0.050498em), calc(100% - 0.913832em) calc(100% - 0.033994em), calc(100% - 0.996867em) calc(100% - 0.021521em), calc(100% - 1.080363em) calc(100% - 0.012536em), calc(100% - 1.164129em) calc(100% - 0.006475em), calc(100% - 1.248038em) calc(100% - 0.002768em), calc(100% - 1.33201em) calc(100% - 0.00084em), calc(100% - 1.416003em) calc(100% - 0.00011em), calc(100% - 1.5em) 100%, 1.5em 100%, 1.416003em calc(100% - 0.00011em), 1.33201em calc(100% - 0.00084em), 1.248038em calc(100% - 0.002768em), 1.164129em calc(100% - 0.006475em), 1.080363em calc(100% - 0.012536em), 0.996867em calc(100% - 0.021521em), 0.913832em calc(100% - 0.033994em), 0.831515em calc(100% - 0.050498em), 0.750258em calc(100% - 0.071555em), 0.67049em calc(100% - 0.097649em), 0.592738em calc(100% - 0.129213em), 0.517633em calc(100% - 0.166612em), 0.445907em calc(100% - 0.210125em), 0.378394em calc(100% - 0.259919em), 0.316025em calc(100% - 0.316025em), 0.259919em calc(100% - 0.378394em), 0.210125em calc(100% - 0.445907em), 0.166612em calc(100% - 0.517633em), 0.129213em calc(100% - 0.592738em), 0.097649em calc(100% - 0.67049em), 0.071555em calc(100% - 0.750258em), 0.050498em calc(100% - 0.831515em), 0.033994em calc(100% - 0.913832em), 0.021521em calc(100% - 0.996867em), 0.012536em calc(100% - 1.080363em), 0.006475em calc(100% - 1.164129em), 0.002768em calc(100% - 1.248038em), 0.00084em calc(100% - 1.33201em), 0.00011em calc(100% - 1.416003em), 0em calc(100% - 1.5em), 0em 1.5em, 0.00011em 1.416003em, 0.00084em 1.33201em, 0.002768em 1.248038em, 0.006475em 1.164129em, 0.012536em 1.080363em, 0.021521em 0.996867em, 0.033994em 0.913832em, 0.050498em 0.831515em, 0.071555em 0.750258em, 0.097649em 0.67049em, 0.129213em 0.592738em, 0.166612em 0.517633em, 0.210125em 0.445907em, 0.259919em 0.378394em, 0.316025em 0.316025em, 0.378394em 0.259919em, 0.445907em 0.210125em, 0.517633em 0.166612em, 0.592738em 0.129213em, 0.67049em 0.097649em, 0.750258em 0.071555em, 0.831515em 0.050498em, 0.913832em 0.033994em, 0.996867em 0.021521em, 1.080363em 0.012536em, 1.164129em 0.006475em, 1.248038em 0.002768em, 1.33201em 0.00084em, 1.416003em 0.00011em, 1.5em 0em);
  }
  .cloth-border, .cloth-border-nobg {
    clip-path: polygon( 4.167037rem 0rem, calc(100% - 4.167037rem) 0rem, calc(100% - 3.917025rem) 0.000347rem, calc(100% - 3.667025rem) 0.002717rem, calc(100% - 3.4171rem) 0.009112rem, calc(100% - 3.167409rem) 0.02153rem, calc(100% - 2.918255rem) 0.041962rem, calc(100% - 2.670135rem) 0.072374rem, calc(100% - 2.423782rem) 0.114689rem, calc(100% - 2.180214rem) 0.170762rem, calc(100% - 1.940767rem) 0.242331rem, calc(100% - 1.707134rem) 0.330972rem, calc(100% - 1.481384rem) 0.43803rem, calc(100% - 1.265977rem) 0.564537rem, calc(100% - 1.063758rem) 0.711127rem, calc(100% - 0.877925rem) 0.877925rem, calc(100% - 0.711127rem) 1.063758rem, calc(100% - 0.564537rem) 1.265977rem, calc(100% - 0.43803rem) 1.481384rem, calc(100% - 0.330972rem) 1.707134rem, calc(100% - 0.242331rem) 1.940767rem, calc(100% - 0.170762rem) 2.180214rem, calc(100% - 0.114689rem) 2.423782rem, calc(100% - 0.072374rem) 2.670135rem, calc(100% - 0.041962rem) 2.918255rem, calc(100% - 0.02153rem) 3.167409rem, calc(100% - 0.009112rem) 3.4171rem, calc(100% - 0.002717rem) 3.667025rem, calc(100% - 0.000347rem) 3.917025rem, 100% 4.167037rem, 100% calc(100% - 4.167037rem), calc(100% - 0.000347rem) calc(100% - 3.917025rem), calc(100% - 0.002717rem) calc(100% - 3.667025rem), calc(100% - 0.009112rem) calc(100% - 3.4171rem), calc(100% - 0.02153rem) calc(100% - 3.167409rem), calc(100% - 0.041962rem) calc(100% - 2.918255rem), calc(100% - 0.072374rem) calc(100% - 2.670135rem), calc(100% - 0.114689rem) calc(100% - 2.423782rem), calc(100% - 0.170762rem) calc(100% - 2.180214rem), calc(100% - 0.242331rem) calc(100% - 1.940767rem), calc(100% - 0.330972rem) calc(100% - 1.707134rem), calc(100% - 0.43803rem) calc(100% - 1.481384rem), calc(100% - 0.564537rem) calc(100% - 1.265977rem), calc(100% - 0.711127rem) calc(100% - 1.063758rem), calc(100% - 0.877925rem) calc(100% - 0.877925rem), calc(100% - 1.063758rem) calc(100% - 0.711127rem), calc(100% - 1.265977rem) calc(100% - 0.564537rem), calc(100% - 1.481384rem) calc(100% - 0.43803rem), calc(100% - 1.707134rem) calc(100% - 0.330972rem), calc(100% - 1.940767rem) calc(100% - 0.242331rem), calc(100% - 2.180214rem) calc(100% - 0.170762rem), calc(100% - 2.423782rem) calc(100% - 0.114689rem), calc(100% - 2.670135rem) calc(100% - 0.072374rem), calc(100% - 2.918255rem) calc(100% - 0.041962rem), calc(100% - 3.167409rem) calc(100% - 0.02153rem), calc(100% - 3.4171rem) calc(100% - 0.009112rem), calc(100% - 3.667025rem) calc(100% - 0.002717rem), calc(100% - 3.917025rem) calc(100% - 0.000347rem), calc(100% - 4.167037rem) 100%, 4.167037rem 100%, 3.917025rem calc(100% - 0.000347rem), 3.667025rem calc(100% - 0.002717rem), 3.4171rem calc(100% - 0.009112rem), 3.167409rem calc(100% - 0.02153rem), 2.918255rem calc(100% - 0.041962rem), 2.670135rem calc(100% - 0.072374rem), 2.423782rem calc(100% - 0.114689rem), 2.180214rem calc(100% - 0.170762rem), 1.940767rem calc(100% - 0.242331rem), 1.707134rem calc(100% - 0.330972rem), 1.481384rem calc(100% - 0.43803rem), 1.265977rem calc(100% - 0.564537rem), 1.063758rem calc(100% - 0.711127rem), 0.877925rem calc(100% - 0.877925rem), 0.711127rem calc(100% - 1.063758rem), 0.564537rem calc(100% - 1.265977rem), 0.43803rem calc(100% - 1.481384rem), 0.330972rem calc(100% - 1.707134rem), 0.242331rem calc(100% - 1.940767rem), 0.170762rem calc(100% - 2.180214rem), 0.114689rem calc(100% - 2.423782rem), 0.072374rem calc(100% - 2.670135rem), 0.041962rem calc(100% - 2.918255rem), 0.02153rem calc(100% - 3.167409rem), 0.009112rem calc(100% - 3.4171rem), 0.002717rem calc(100% - 3.667025rem), 0.000347rem calc(100% - 3.917025rem), 0rem calc(100% - 4.167037rem), 0rem 4.167037rem, 0.000347rem 3.917025rem, 0.002717rem 3.667025rem, 0.009112rem 3.4171rem, 0.02153rem 3.167409rem, 0.041962rem 2.918255rem, 0.072374rem 2.670135rem, 0.114689rem 2.423782rem, 0.170762rem 2.180214rem, 0.242331rem 1.940767rem, 0.330972rem 1.707134rem, 0.43803rem 1.481384rem, 0.564537rem 1.265977rem, 0.711127rem 1.063758rem, 0.877925rem 0.877925rem, 1.063758rem 0.711127rem, 1.265977rem 0.564537rem, 1.481384rem 0.43803rem, 1.707134rem 0.330972rem, 1.940767rem 0.242331rem, 2.180214rem 0.170762rem, 2.423782rem 0.114689rem, 2.670135rem 0.072374rem, 2.918255rem 0.041962rem, 3.167409rem 0.02153rem, 3.4171rem 0.009112rem, 3.667025rem 0.002717rem, 3.917025rem 0.000347rem, 4.167037rem 0rem );
  }
  .button-nav-header {
    z-index: 100;
    cursor: pointer;
    align-self: flex-end;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    --tw-tracking: var(--tracking-tighter);
    letter-spacing: var(--tracking-tighter);
    color: var(--color-black);
    clip-path: polygon(1.5em 0em, calc(100% - 1.5em) 0em, calc(100% - 1.416003em) 0.00011em, calc(100% - 1.33201em) 0.00084em, calc(100% - 1.248038em) 0.002768em, calc(100% - 1.164129em) 0.006475em, calc(100% - 1.080363em) 0.012536em, calc(100% - 0.996867em) 0.021521em, calc(100% - 0.913832em) 0.033994em, calc(100% - 0.831515em) 0.050498em, calc(100% - 0.750258em) 0.071555em, calc(100% - 0.67049em) 0.097649em, calc(100% - 0.592738em) 0.129213em, calc(100% - 0.517633em) 0.166612em, calc(100% - 0.445907em) 0.210125em, calc(100% - 0.378394em) 0.259919em, calc(100% - 0.316025em) 0.316025em, calc(100% - 0.259919em) 0.378394em, calc(100% - 0.210125em) 0.445907em, calc(100% - 0.166612em) 0.517633em, calc(100% - 0.129213em) 0.592738em, calc(100% - 0.097649em) 0.67049em, calc(100% - 0.071555em) 0.750258em, calc(100% - 0.050498em) 0.831515em, calc(100% - 0.033994em) 0.913832em, calc(100% - 0.021521em) 0.996867em, calc(100% - 0.012536em) 1.080363em, calc(100% - 0.006475em) 1.164129em, calc(100% - 0.002768em) 1.248038em, calc(100% - 0.00084em) 1.33201em, calc(100% - 0.00011em) 1.416003em, 100% 1.5em, 100% calc(100% - 1.5em), calc(100% - 0.00011em) calc(100% - 1.416003em), calc(100% - 0.00084em) calc(100% - 1.33201em), calc(100% - 0.002768em) calc(100% - 1.248038em), calc(100% - 0.006475em) calc(100% - 1.164129em), calc(100% - 0.012536em) calc(100% - 1.080363em), calc(100% - 0.021521em) calc(100% - 0.996867em), calc(100% - 0.033994em) calc(100% - 0.913832em), calc(100% - 0.050498em) calc(100% - 0.831515em), calc(100% - 0.071555em) calc(100% - 0.750258em), calc(100% - 0.097649em) calc(100% - 0.67049em), calc(100% - 0.129213em) calc(100% - 0.592738em), calc(100% - 0.166612em) calc(100% - 0.517633em), calc(100% - 0.210125em) calc(100% - 0.445907em), calc(100% - 0.259919em) calc(100% - 0.378394em), calc(100% - 0.316025em) calc(100% - 0.316025em), calc(100% - 0.378394em) calc(100% - 0.259919em), calc(100% - 0.445907em) calc(100% - 0.210125em), calc(100% - 0.517633em) calc(100% - 0.166612em), calc(100% - 0.592738em) calc(100% - 0.129213em), calc(100% - 0.67049em) calc(100% - 0.097649em), calc(100% - 0.750258em) calc(100% - 0.071555em), calc(100% - 0.831515em) calc(100% - 0.050498em), calc(100% - 0.913832em) calc(100% - 0.033994em), calc(100% - 0.996867em) calc(100% - 0.021521em), calc(100% - 1.080363em) calc(100% - 0.012536em), calc(100% - 1.164129em) calc(100% - 0.006475em), calc(100% - 1.248038em) calc(100% - 0.002768em), calc(100% - 1.33201em) calc(100% - 0.00084em), calc(100% - 1.416003em) calc(100% - 0.00011em), calc(100% - 1.5em) 100%, 1.5em 100%, 1.416003em calc(100% - 0.00011em), 1.33201em calc(100% - 0.00084em), 1.248038em calc(100% - 0.002768em), 1.164129em calc(100% - 0.006475em), 1.080363em calc(100% - 0.012536em), 0.996867em calc(100% - 0.021521em), 0.913832em calc(100% - 0.033994em), 0.831515em calc(100% - 0.050498em), 0.750258em calc(100% - 0.071555em), 0.67049em calc(100% - 0.097649em), 0.592738em calc(100% - 0.129213em), 0.517633em calc(100% - 0.166612em), 0.445907em calc(100% - 0.210125em), 0.378394em calc(100% - 0.259919em), 0.316025em calc(100% - 0.316025em), 0.259919em calc(100% - 0.378394em), 0.210125em calc(100% - 0.445907em), 0.166612em calc(100% - 0.517633em), 0.129213em calc(100% - 0.592738em), 0.097649em calc(100% - 0.67049em), 0.071555em calc(100% - 0.750258em), 0.050498em calc(100% - 0.831515em), 0.033994em calc(100% - 0.913832em), 0.021521em calc(100% - 0.996867em), 0.012536em calc(100% - 1.080363em), 0.006475em calc(100% - 1.164129em), 0.002768em calc(100% - 1.248038em), 0.00084em calc(100% - 1.33201em), 0.00011em calc(100% - 1.416003em), 0em calc(100% - 1.5em), 0em 1.5em, 0.00011em 1.416003em, 0.00084em 1.33201em, 0.002768em 1.248038em, 0.006475em 1.164129em, 0.012536em 1.080363em, 0.021521em 0.996867em, 0.033994em 0.913832em, 0.050498em 0.831515em, 0.071555em 0.750258em, 0.097649em 0.67049em, 0.129213em 0.592738em, 0.166612em 0.517633em, 0.210125em 0.445907em, 0.259919em 0.378394em, 0.316025em 0.316025em, 0.378394em 0.259919em, 0.445907em 0.210125em, 0.517633em 0.166612em, 0.592738em 0.129213em, 0.67049em 0.097649em, 0.750258em 0.071555em, 0.831515em 0.050498em, 0.913832em 0.033994em, 0.996867em 0.021521em, 1.080363em 0.012536em, 1.164129em 0.006475em, 1.248038em 0.002768em, 1.33201em 0.00084em, 1.416003em 0.00011em, 1.5em 0em);
    @media (width >= 48rem) {
      align-self: flex-start;
    }
    background: radial-gradient(circle at 15% 20%, rgba(187,169,246,0.45), transparent 40%), radial-gradient(circle at 90% 80%, rgba(192,114,209,0.35), transparent 40%), linear-gradient(135deg, var(--primary-2), var(--secondary-2));
  }
  .heroslider-content {
    position: absolute;
    width: 100%;
    flex-direction: column;
    gap: calc(var(--spacing) * 3);
    align-self: safe flex-end;
    padding-inline: calc(var(--spacing) * 3);
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 10);
    }
    padding-bottom: calc(var(--spacing) * 4);
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 6);
    }
    @media (width >= 48rem) {
      align-self: safe center;
    }
    @media (width >= 80rem) {
      width: calc(2/3 * 100%);
    }
    z-index: 50;
    display: flex;
  }
  .slider-subtitle {
    max-width: calc(4/5 * 100%);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-leading: var(--leading-relaxed);
    line-height: var(--leading-relaxed);
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: color-mix(in srgb, #fff 85%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 85%, transparent);
    }
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 2);
    }
    @media (width >= 40rem) {
      --tw-font-weight: var(--font-weight-normal);
      font-weight: var(--font-weight-normal);
    }
    @media (width >= 48rem) {
      max-width: 100%;
    }
    @media (width >= 48rem) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }
  .cloth-corner-background {
    background: linear-gradient(30deg, var(--card), var(--surface));
  }
  .hero-carousel {
    margin-inline: auto;
    margin-block: auto;
    display: inline-flex;
    height: 100%;
    overflow-y: clip;
    scrollbar-gutter: stable both-edges;
    scroll-snap-type: x mandatory;
    overflow-x: auto;
    scroll-behavior: smooth;
  }
  .slide {
    scroll-snap-align: center;
    scroll-snap-stop: always;
    width: 100%;
    flex-shrink: 0;
  }
  .slide img {
    position: relative;
    height: 100%;
    min-width: 100%;
    object-fit: cover;
    object-position: bottom;
    display: inline-flex;
  }
  .carousel-item, .carousel-item-inner {
    transition: all 0.3s ease-in-out;
  }
  .opinie-carousel {
    overflow-x: auto;
    overflow-y: hidden;
    scroll-snap-type: x mandatory;
    scroll-behavior: smooth;
    display: inline-flex;
    transform: translate3d(0, 0, 0);
    scroll-margin-inline-start: calc(var(--spacing) * 6);
    align-items: stretch;
    justify-content: flex-start;
    gap: calc(var(--spacing) * 4);
    scrollbar-gutter: stable both-edges;
    will-change: transform;
    transform: translate3d(0,0,0);
  }
  .opinie-carousel > .carousel-item {
    padding: 2.3561944902px;
    padding-right: 1.5707963268px;
    display: flex;
    align-items: safe center;
    justify-content: safe center;
    clip-path: polygon( 4.167037rem 0rem, calc(100% - 4.167037rem) 0rem, calc(100% - 3.917025rem) 0.000347rem, calc(100% - 3.667025rem) 0.002717rem, calc(100% - 3.4171rem) 0.009112rem, calc(100% - 3.167409rem) 0.02153rem, calc(100% - 2.918255rem) 0.041962rem, calc(100% - 2.670135rem) 0.072374rem, calc(100% - 2.423782rem) 0.114689rem, calc(100% - 2.180214rem) 0.170762rem, calc(100% - 1.940767rem) 0.242331rem, calc(100% - 1.707134rem) 0.330972rem, calc(100% - 1.481384rem) 0.43803rem, calc(100% - 1.265977rem) 0.564537rem, calc(100% - 1.063758rem) 0.711127rem, calc(100% - 0.877925rem) 0.877925rem, calc(100% - 0.711127rem) 1.063758rem, calc(100% - 0.564537rem) 1.265977rem, calc(100% - 0.43803rem) 1.481384rem, calc(100% - 0.330972rem) 1.707134rem, calc(100% - 0.242331rem) 1.940767rem, calc(100% - 0.170762rem) 2.180214rem, calc(100% - 0.114689rem) 2.423782rem, calc(100% - 0.072374rem) 2.670135rem, calc(100% - 0.041962rem) 2.918255rem, calc(100% - 0.02153rem) 3.167409rem, calc(100% - 0.009112rem) 3.4171rem, calc(100% - 0.002717rem) 3.667025rem, calc(100% - 0.000347rem) 3.917025rem, 100% 4.167037rem, 100% calc(100% - 4.167037rem), calc(100% - 0.000347rem) calc(100% - 3.917025rem), calc(100% - 0.002717rem) calc(100% - 3.667025rem), calc(100% - 0.009112rem) calc(100% - 3.4171rem), calc(100% - 0.02153rem) calc(100% - 3.167409rem), calc(100% - 0.041962rem) calc(100% - 2.918255rem), calc(100% - 0.072374rem) calc(100% - 2.670135rem), calc(100% - 0.114689rem) calc(100% - 2.423782rem), calc(100% - 0.170762rem) calc(100% - 2.180214rem), calc(100% - 0.242331rem) calc(100% - 1.940767rem), calc(100% - 0.330972rem) calc(100% - 1.707134rem), calc(100% - 0.43803rem) calc(100% - 1.481384rem), calc(100% - 0.564537rem) calc(100% - 1.265977rem), calc(100% - 0.711127rem) calc(100% - 1.063758rem), calc(100% - 0.877925rem) calc(100% - 0.877925rem), calc(100% - 1.063758rem) calc(100% - 0.711127rem), calc(100% - 1.265977rem) calc(100% - 0.564537rem), calc(100% - 1.481384rem) calc(100% - 0.43803rem), calc(100% - 1.707134rem) calc(100% - 0.330972rem), calc(100% - 1.940767rem) calc(100% - 0.242331rem), calc(100% - 2.180214rem) calc(100% - 0.170762rem), calc(100% - 2.423782rem) calc(100% - 0.114689rem), calc(100% - 2.670135rem) calc(100% - 0.072374rem), calc(100% - 2.918255rem) calc(100% - 0.041962rem), calc(100% - 3.167409rem) calc(100% - 0.02153rem), calc(100% - 3.4171rem) calc(100% - 0.009112rem), calc(100% - 3.667025rem) calc(100% - 0.002717rem), calc(100% - 3.917025rem) calc(100% - 0.000347rem), calc(100% - 4.167037rem) 100%, 4.167037rem 100%, 3.917025rem calc(100% - 0.000347rem), 3.667025rem calc(100% - 0.002717rem), 3.4171rem calc(100% - 0.009112rem), 3.167409rem calc(100% - 0.02153rem), 2.918255rem calc(100% - 0.041962rem), 2.670135rem calc(100% - 0.072374rem), 2.423782rem calc(100% - 0.114689rem), 2.180214rem calc(100% - 0.170762rem), 1.940767rem calc(100% - 0.242331rem), 1.707134rem calc(100% - 0.330972rem), 1.481384rem calc(100% - 0.43803rem), 1.265977rem calc(100% - 0.564537rem), 1.063758rem calc(100% - 0.711127rem), 0.877925rem calc(100% - 0.877925rem), 0.711127rem calc(100% - 1.063758rem), 0.564537rem calc(100% - 1.265977rem), 0.43803rem calc(100% - 1.481384rem), 0.330972rem calc(100% - 1.707134rem), 0.242331rem calc(100% - 1.940767rem), 0.170762rem calc(100% - 2.180214rem), 0.114689rem calc(100% - 2.423782rem), 0.072374rem calc(100% - 2.670135rem), 0.041962rem calc(100% - 2.918255rem), 0.02153rem calc(100% - 3.167409rem), 0.009112rem calc(100% - 3.4171rem), 0.002717rem calc(100% - 3.667025rem), 0.000347rem calc(100% - 3.917025rem), 0rem calc(100% - 4.167037rem), 0rem 4.167037rem, 0.000347rem 3.917025rem, 0.002717rem 3.667025rem, 0.009112rem 3.4171rem, 0.02153rem 3.167409rem, 0.041962rem 2.918255rem, 0.072374rem 2.670135rem, 0.114689rem 2.423782rem, 0.170762rem 2.180214rem, 0.242331rem 1.940767rem, 0.330972rem 1.707134rem, 0.43803rem 1.481384rem, 0.564537rem 1.265977rem, 0.711127rem 1.063758rem, 0.877925rem 0.877925rem, 1.063758rem 0.711127rem, 1.265977rem 0.564537rem, 1.481384rem 0.43803rem, 1.707134rem 0.330972rem, 1.940767rem 0.242331rem, 2.180214rem 0.170762rem, 2.423782rem 0.114689rem, 2.670135rem 0.072374rem, 2.918255rem 0.041962rem, 3.167409rem 0.02153rem, 3.4171rem 0.009112rem, 3.667025rem 0.002717rem, 3.917025rem 0.000347rem, 4.167037rem 0rem );
    background: #3e374ee4;
    background-image: radial-gradient(circle at 15% 20%, rgba(187,169,246,0.4), transparent 30%), radial-gradient(circle at 90% 80%, rgba(192,114,209,0.1), transparent 30%);
    width: calc(100% - 2rem);
    scroll-margin-inline-start: calc(var(--spacing) * 4);
    @media (width >= 48rem) {
      width: calc(33.3333% - 4rem);
    }
    @media (width >= 48rem) {
      scroll-margin-inline-start: calc(var(--spacing) * 16);
    }
    scroll-snap-align: center;
    scroll-snap-stop: always;
    content-visibility: auto;
    contain: layout paint;
    transform-style: flat;
    &:is(:first-child) {
      margin-inline-start: calc(var(--spacing) * 4);
      margin-inline-end: auto;
      @media (width >= 48rem) {
        margin-inline-start: calc(var(--spacing) * 12);
      }
    }
    &:is(:last-child) {
      margin-inline-start: auto;
      margin-inline-end: calc(var(--spacing) * 4);
      @media (width >= 48rem) {
        margin-inline-end: calc(var(--spacing) * 12);
      }
    }
  }
  .opinie-carousel > .carousel-item > .carousel-item-inner {
    display: flex;
    min-height: 100%;
    min-width: 100%;
    flex-direction: column;
    justify-content: space-between;
    padding-inline: calc(var(--spacing) * 8);
    padding-block: calc(var(--spacing) * 16);
    text-align: left;
    color: var(--text-2);
    --tw-contain-paint: paint;
    contain: var(--tw-contain-size,) var(--tw-contain-layout,) var(--tw-contain-paint,) var(--tw-contain-style,);
    contain: paint;
    clip-path: polygon( 4.167037rem 0rem, calc(100% - 4.167037rem) 0rem, calc(100% - 3.917025rem) 0.000347rem, calc(100% - 3.667025rem) 0.002717rem, calc(100% - 3.4171rem) 0.009112rem, calc(100% - 3.167409rem) 0.02153rem, calc(100% - 2.918255rem) 0.041962rem, calc(100% - 2.670135rem) 0.072374rem, calc(100% - 2.423782rem) 0.114689rem, calc(100% - 2.180214rem) 0.170762rem, calc(100% - 1.940767rem) 0.242331rem, calc(100% - 1.707134rem) 0.330972rem, calc(100% - 1.481384rem) 0.43803rem, calc(100% - 1.265977rem) 0.564537rem, calc(100% - 1.063758rem) 0.711127rem, calc(100% - 0.877925rem) 0.877925rem, calc(100% - 0.711127rem) 1.063758rem, calc(100% - 0.564537rem) 1.265977rem, calc(100% - 0.43803rem) 1.481384rem, calc(100% - 0.330972rem) 1.707134rem, calc(100% - 0.242331rem) 1.940767rem, calc(100% - 0.170762rem) 2.180214rem, calc(100% - 0.114689rem) 2.423782rem, calc(100% - 0.072374rem) 2.670135rem, calc(100% - 0.041962rem) 2.918255rem, calc(100% - 0.02153rem) 3.167409rem, calc(100% - 0.009112rem) 3.4171rem, calc(100% - 0.002717rem) 3.667025rem, calc(100% - 0.000347rem) 3.917025rem, 100% 4.167037rem, 100% calc(100% - 4.167037rem), calc(100% - 0.000347rem) calc(100% - 3.917025rem), calc(100% - 0.002717rem) calc(100% - 3.667025rem), calc(100% - 0.009112rem) calc(100% - 3.4171rem), calc(100% - 0.02153rem) calc(100% - 3.167409rem), calc(100% - 0.041962rem) calc(100% - 2.918255rem), calc(100% - 0.072374rem) calc(100% - 2.670135rem), calc(100% - 0.114689rem) calc(100% - 2.423782rem), calc(100% - 0.170762rem) calc(100% - 2.180214rem), calc(100% - 0.242331rem) calc(100% - 1.940767rem), calc(100% - 0.330972rem) calc(100% - 1.707134rem), calc(100% - 0.43803rem) calc(100% - 1.481384rem), calc(100% - 0.564537rem) calc(100% - 1.265977rem), calc(100% - 0.711127rem) calc(100% - 1.063758rem), calc(100% - 0.877925rem) calc(100% - 0.877925rem), calc(100% - 1.063758rem) calc(100% - 0.711127rem), calc(100% - 1.265977rem) calc(100% - 0.564537rem), calc(100% - 1.481384rem) calc(100% - 0.43803rem), calc(100% - 1.707134rem) calc(100% - 0.330972rem), calc(100% - 1.940767rem) calc(100% - 0.242331rem), calc(100% - 2.180214rem) calc(100% - 0.170762rem), calc(100% - 2.423782rem) calc(100% - 0.114689rem), calc(100% - 2.670135rem) calc(100% - 0.072374rem), calc(100% - 2.918255rem) calc(100% - 0.041962rem), calc(100% - 3.167409rem) calc(100% - 0.02153rem), calc(100% - 3.4171rem) calc(100% - 0.009112rem), calc(100% - 3.667025rem) calc(100% - 0.002717rem), calc(100% - 3.917025rem) calc(100% - 0.000347rem), calc(100% - 4.167037rem) 100%, 4.167037rem 100%, 3.917025rem calc(100% - 0.000347rem), 3.667025rem calc(100% - 0.002717rem), 3.4171rem calc(100% - 0.009112rem), 3.167409rem calc(100% - 0.02153rem), 2.918255rem calc(100% - 0.041962rem), 2.670135rem calc(100% - 0.072374rem), 2.423782rem calc(100% - 0.114689rem), 2.180214rem calc(100% - 0.170762rem), 1.940767rem calc(100% - 0.242331rem), 1.707134rem calc(100% - 0.330972rem), 1.481384rem calc(100% - 0.43803rem), 1.265977rem calc(100% - 0.564537rem), 1.063758rem calc(100% - 0.711127rem), 0.877925rem calc(100% - 0.877925rem), 0.711127rem calc(100% - 1.063758rem), 0.564537rem calc(100% - 1.265977rem), 0.43803rem calc(100% - 1.481384rem), 0.330972rem calc(100% - 1.707134rem), 0.242331rem calc(100% - 1.940767rem), 0.170762rem calc(100% - 2.180214rem), 0.114689rem calc(100% - 2.423782rem), 0.072374rem calc(100% - 2.670135rem), 0.041962rem calc(100% - 2.918255rem), 0.02153rem calc(100% - 3.167409rem), 0.009112rem calc(100% - 3.4171rem), 0.002717rem calc(100% - 3.667025rem), 0.000347rem calc(100% - 3.917025rem), 0rem calc(100% - 4.167037rem), 0rem 4.167037rem, 0.000347rem 3.917025rem, 0.002717rem 3.667025rem, 0.009112rem 3.4171rem, 0.02153rem 3.167409rem, 0.041962rem 2.918255rem, 0.072374rem 2.670135rem, 0.114689rem 2.423782rem, 0.170762rem 2.180214rem, 0.242331rem 1.940767rem, 0.330972rem 1.707134rem, 0.43803rem 1.481384rem, 0.564537rem 1.265977rem, 0.711127rem 1.063758rem, 0.877925rem 0.877925rem, 1.063758rem 0.711127rem, 1.265977rem 0.564537rem, 1.481384rem 0.43803rem, 1.707134rem 0.330972rem, 1.940767rem 0.242331rem, 2.180214rem 0.170762rem, 2.423782rem 0.114689rem, 2.670135rem 0.072374rem, 2.918255rem 0.041962rem, 3.167409rem 0.02153rem, 3.4171rem 0.009112rem, 3.667025rem 0.002717rem, 3.917025rem 0.000347rem, 4.167037rem 0rem );
    background: linear-gradient(-40deg, var(--surface), var(--card));
  }
  .wp-block-image {
    margin-bottom: calc(var(--spacing) * 6);
  }
  .wp-block-quote {
    border-left-style: var(--tw-border-style);
    border-left-width: 4px;
    padding-left: calc(var(--spacing) * 4);
    color: var(--color-gray-700);
    font-style: italic;
  }
  .menu-item a {
    border-radius: 0.25rem;
    padding-inline: calc(var(--spacing) * 2);
    padding-block: calc(var(--spacing) * 1);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .mobile-menu .menu-item a {
    display: block;
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 2);
  }
  .footer .menu-item a {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .process-line {
    position: absolute;
    top: calc(var(--spacing) * 11);
    right: calc(var(--spacing) * 0);
    left: calc(var(--spacing) * 0);
    height: calc(var(--spacing) * 1);
    width: 100%;
    background-color: color-mix(in srgb, #fff 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 50%, transparent);
    }
  }
  .process-dot {
    position: absolute;
    top: calc(1/2 * 100%);
    height: calc(var(--spacing) * 3);
    width: calc(var(--spacing) * 3);
    --tw-translate-y: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
    background-color: var(--color-primary);
  }
  .button-slider {
    visibility: hidden;
    z-index: 100;
    cursor: pointer;
    align-self: flex-end;
    padding: calc(var(--spacing) * 0.5);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--color-black);
    --tw-contain-paint: paint;
    contain: var(--tw-contain-size,) var(--tw-contain-layout,) var(--tw-contain-paint,) var(--tw-contain-style,);
    contain: paint;
    clip-path: polygon(1.5em 0em, calc(100% - 1.5em) 0em, calc(100% - 1.416003em) 0.00011em, calc(100% - 1.33201em) 0.00084em, calc(100% - 1.248038em) 0.002768em, calc(100% - 1.164129em) 0.006475em, calc(100% - 1.080363em) 0.012536em, calc(100% - 0.996867em) 0.021521em, calc(100% - 0.913832em) 0.033994em, calc(100% - 0.831515em) 0.050498em, calc(100% - 0.750258em) 0.071555em, calc(100% - 0.67049em) 0.097649em, calc(100% - 0.592738em) 0.129213em, calc(100% - 0.517633em) 0.166612em, calc(100% - 0.445907em) 0.210125em, calc(100% - 0.378394em) 0.259919em, calc(100% - 0.316025em) 0.316025em, calc(100% - 0.259919em) 0.378394em, calc(100% - 0.210125em) 0.445907em, calc(100% - 0.166612em) 0.517633em, calc(100% - 0.129213em) 0.592738em, calc(100% - 0.097649em) 0.67049em, calc(100% - 0.071555em) 0.750258em, calc(100% - 0.050498em) 0.831515em, calc(100% - 0.033994em) 0.913832em, calc(100% - 0.021521em) 0.996867em, calc(100% - 0.012536em) 1.080363em, calc(100% - 0.006475em) 1.164129em, calc(100% - 0.002768em) 1.248038em, calc(100% - 0.00084em) 1.33201em, calc(100% - 0.00011em) 1.416003em, 100% 1.5em, 100% calc(100% - 1.5em), calc(100% - 0.00011em) calc(100% - 1.416003em), calc(100% - 0.00084em) calc(100% - 1.33201em), calc(100% - 0.002768em) calc(100% - 1.248038em), calc(100% - 0.006475em) calc(100% - 1.164129em), calc(100% - 0.012536em) calc(100% - 1.080363em), calc(100% - 0.021521em) calc(100% - 0.996867em), calc(100% - 0.033994em) calc(100% - 0.913832em), calc(100% - 0.050498em) calc(100% - 0.831515em), calc(100% - 0.071555em) calc(100% - 0.750258em), calc(100% - 0.097649em) calc(100% - 0.67049em), calc(100% - 0.129213em) calc(100% - 0.592738em), calc(100% - 0.166612em) calc(100% - 0.517633em), calc(100% - 0.210125em) calc(100% - 0.445907em), calc(100% - 0.259919em) calc(100% - 0.378394em), calc(100% - 0.316025em) calc(100% - 0.316025em), calc(100% - 0.378394em) calc(100% - 0.259919em), calc(100% - 0.445907em) calc(100% - 0.210125em), calc(100% - 0.517633em) calc(100% - 0.166612em), calc(100% - 0.592738em) calc(100% - 0.129213em), calc(100% - 0.67049em) calc(100% - 0.097649em), calc(100% - 0.750258em) calc(100% - 0.071555em), calc(100% - 0.831515em) calc(100% - 0.050498em), calc(100% - 0.913832em) calc(100% - 0.033994em), calc(100% - 0.996867em) calc(100% - 0.021521em), calc(100% - 1.080363em) calc(100% - 0.012536em), calc(100% - 1.164129em) calc(100% - 0.006475em), calc(100% - 1.248038em) calc(100% - 0.002768em), calc(100% - 1.33201em) calc(100% - 0.00084em), calc(100% - 1.416003em) calc(100% - 0.00011em), calc(100% - 1.5em) 100%, 1.5em 100%, 1.416003em calc(100% - 0.00011em), 1.33201em calc(100% - 0.00084em), 1.248038em calc(100% - 0.002768em), 1.164129em calc(100% - 0.006475em), 1.080363em calc(100% - 0.012536em), 0.996867em calc(100% - 0.021521em), 0.913832em calc(100% - 0.033994em), 0.831515em calc(100% - 0.050498em), 0.750258em calc(100% - 0.071555em), 0.67049em calc(100% - 0.097649em), 0.592738em calc(100% - 0.129213em), 0.517633em calc(100% - 0.166612em), 0.445907em calc(100% - 0.210125em), 0.378394em calc(100% - 0.259919em), 0.316025em calc(100% - 0.316025em), 0.259919em calc(100% - 0.378394em), 0.210125em calc(100% - 0.445907em), 0.166612em calc(100% - 0.517633em), 0.129213em calc(100% - 0.592738em), 0.097649em calc(100% - 0.67049em), 0.071555em calc(100% - 0.750258em), 0.050498em calc(100% - 0.831515em), 0.033994em calc(100% - 0.913832em), 0.021521em calc(100% - 0.996867em), 0.012536em calc(100% - 1.080363em), 0.006475em calc(100% - 1.164129em), 0.002768em calc(100% - 1.248038em), 0.00084em calc(100% - 1.33201em), 0.00011em calc(100% - 1.416003em), 0em calc(100% - 1.5em), 0em 1.5em, 0.00011em 1.416003em, 0.00084em 1.33201em, 0.002768em 1.248038em, 0.006475em 1.164129em, 0.012536em 1.080363em, 0.021521em 0.996867em, 0.033994em 0.913832em, 0.050498em 0.831515em, 0.071555em 0.750258em, 0.097649em 0.67049em, 0.129213em 0.592738em, 0.166612em 0.517633em, 0.210125em 0.445907em, 0.259919em 0.378394em, 0.316025em 0.316025em, 0.378394em 0.259919em, 0.445907em 0.210125em, 0.517633em 0.166612em, 0.592738em 0.129213em, 0.67049em 0.097649em, 0.750258em 0.071555em, 0.831515em 0.050498em, 0.913832em 0.033994em, 0.996867em 0.021521em, 1.080363em 0.012536em, 1.164129em 0.006475em, 1.248038em 0.002768em, 1.33201em 0.00084em, 1.416003em 0.00011em, 1.5em 0em);
    @media (width >= 48rem) {
      visibility: visible;
    }
    @media (width >= 48rem) {
      align-self: flex-start;
    }
    background: radial-gradient(circle at 15% 20%, rgba(187,169,246,0.45), transparent 40%), radial-gradient(circle at 90% 80%, rgba(192,114,209,0.35), transparent 40%), linear-gradient(135deg, var(--primary-2), var(--secondary-2));
  }
  .testimonials-section {
    pointer-events: none;
    position: relative;
    isolation: isolate;
    height: 1050px;
    max-width: 100vw;
    @media (width >= 48rem) {
      height: 750px;
    }
    overflow: hidden;
  }
  @media (min-width: 768px) {
    .testimonials-section {
      contain-intrinsic-size: 750px;
    }
  }
  .testim-container-forward {
    display: inline-flex;
    scrollbar-gutter: stable both-edges;
    animation: testimonialsScroll 30s linear infinite;
    will-change: transform;
    transform: translate3d(0,0,0);
  }
  .testim-container-backward {
    display: inline-flex;
    scrollbar-gutter: stable both-edges;
    animation: testimonialsScroll 40s linear infinite reverse;
    will-change: transform;
    transform: translate3d(0,0,0);
  }
  .scroll-paused .testim-container-forward, .scroll-paused .testim-container-backward {
    animation-play-state: paused;
  }
  .testim-wrapper {
    margin-inline: auto;
    margin-block: auto;
    overflow: hidden;
  }
  .testim-item {
    position: relative;
    object-fit: cover;
    image-rendering: auto;
    aspect-ratio: 0.75;
    transform-style: flat;
  }
  .testim-item img {
    content-visibility: auto;
    contain: layout paint;
  }
  .marquee {
    animation: testimonialsScrollx 60s linear infinite;
    will-change: transform;
    transform: translate3d(0,0,0);
  }
  .scroll-paused .marquee {
    animation-play-state: paused;
  }
  .marquee-item {
    margin-inline-start: calc(var(--spacing) * 6);
    margin-inline-end: calc(var(--spacing) * 6);
    background-color: color-mix(in srgb, #fff 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 30%, transparent);
    }
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-font-weight: var(--font-weight-light);
    font-weight: var(--font-weight-light);
    color: color-mix(in srgb, #000 65%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-black) 65%, transparent);
    }
    clip-path: polygon(1.5em 0em, calc(100% - 1.5em) 0em, calc(100% - 1.416003em) 0.00011em, calc(100% - 1.33201em) 0.00084em, calc(100% - 1.248038em) 0.002768em, calc(100% - 1.164129em) 0.006475em, calc(100% - 1.080363em) 0.012536em, calc(100% - 0.996867em) 0.021521em, calc(100% - 0.913832em) 0.033994em, calc(100% - 0.831515em) 0.050498em, calc(100% - 0.750258em) 0.071555em, calc(100% - 0.67049em) 0.097649em, calc(100% - 0.592738em) 0.129213em, calc(100% - 0.517633em) 0.166612em, calc(100% - 0.445907em) 0.210125em, calc(100% - 0.378394em) 0.259919em, calc(100% - 0.316025em) 0.316025em, calc(100% - 0.259919em) 0.378394em, calc(100% - 0.210125em) 0.445907em, calc(100% - 0.166612em) 0.517633em, calc(100% - 0.129213em) 0.592738em, calc(100% - 0.097649em) 0.67049em, calc(100% - 0.071555em) 0.750258em, calc(100% - 0.050498em) 0.831515em, calc(100% - 0.033994em) 0.913832em, calc(100% - 0.021521em) 0.996867em, calc(100% - 0.012536em) 1.080363em, calc(100% - 0.006475em) 1.164129em, calc(100% - 0.002768em) 1.248038em, calc(100% - 0.00084em) 1.33201em, calc(100% - 0.00011em) 1.416003em, 100% 1.5em, 100% calc(100% - 1.5em), calc(100% - 0.00011em) calc(100% - 1.416003em), calc(100% - 0.00084em) calc(100% - 1.33201em), calc(100% - 0.002768em) calc(100% - 1.248038em), calc(100% - 0.006475em) calc(100% - 1.164129em), calc(100% - 0.012536em) calc(100% - 1.080363em), calc(100% - 0.021521em) calc(100% - 0.996867em), calc(100% - 0.033994em) calc(100% - 0.913832em), calc(100% - 0.050498em) calc(100% - 0.831515em), calc(100% - 0.071555em) calc(100% - 0.750258em), calc(100% - 0.097649em) calc(100% - 0.67049em), calc(100% - 0.129213em) calc(100% - 0.592738em), calc(100% - 0.166612em) calc(100% - 0.517633em), calc(100% - 0.210125em) calc(100% - 0.445907em), calc(100% - 0.259919em) calc(100% - 0.378394em), calc(100% - 0.316025em) calc(100% - 0.316025em), calc(100% - 0.378394em) calc(100% - 0.259919em), calc(100% - 0.445907em) calc(100% - 0.210125em), calc(100% - 0.517633em) calc(100% - 0.166612em), calc(100% - 0.592738em) calc(100% - 0.129213em), calc(100% - 0.67049em) calc(100% - 0.097649em), calc(100% - 0.750258em) calc(100% - 0.071555em), calc(100% - 0.831515em) calc(100% - 0.050498em), calc(100% - 0.913832em) calc(100% - 0.033994em), calc(100% - 0.996867em) calc(100% - 0.021521em), calc(100% - 1.080363em) calc(100% - 0.012536em), calc(100% - 1.164129em) calc(100% - 0.006475em), calc(100% - 1.248038em) calc(100% - 0.002768em), calc(100% - 1.33201em) calc(100% - 0.00084em), calc(100% - 1.416003em) calc(100% - 0.00011em), calc(100% - 1.5em) 100%, 1.5em 100%, 1.416003em calc(100% - 0.00011em), 1.33201em calc(100% - 0.00084em), 1.248038em calc(100% - 0.002768em), 1.164129em calc(100% - 0.006475em), 1.080363em calc(100% - 0.012536em), 0.996867em calc(100% - 0.021521em), 0.913832em calc(100% - 0.033994em), 0.831515em calc(100% - 0.050498em), 0.750258em calc(100% - 0.071555em), 0.67049em calc(100% - 0.097649em), 0.592738em calc(100% - 0.129213em), 0.517633em calc(100% - 0.166612em), 0.445907em calc(100% - 0.210125em), 0.378394em calc(100% - 0.259919em), 0.316025em calc(100% - 0.316025em), 0.259919em calc(100% - 0.378394em), 0.210125em calc(100% - 0.445907em), 0.166612em calc(100% - 0.517633em), 0.129213em calc(100% - 0.592738em), 0.097649em calc(100% - 0.67049em), 0.071555em calc(100% - 0.750258em), 0.050498em calc(100% - 0.831515em), 0.033994em calc(100% - 0.913832em), 0.021521em calc(100% - 0.996867em), 0.012536em calc(100% - 1.080363em), 0.006475em calc(100% - 1.164129em), 0.002768em calc(100% - 1.248038em), 0.00084em calc(100% - 1.33201em), 0.00011em calc(100% - 1.416003em), 0em calc(100% - 1.5em), 0em 1.5em, 0.00011em 1.416003em, 0.00084em 1.33201em, 0.002768em 1.248038em, 0.006475em 1.164129em, 0.012536em 1.080363em, 0.021521em 0.996867em, 0.033994em 0.913832em, 0.050498em 0.831515em, 0.071555em 0.750258em, 0.097649em 0.67049em, 0.129213em 0.592738em, 0.166612em 0.517633em, 0.210125em 0.445907em, 0.259919em 0.378394em, 0.316025em 0.316025em, 0.378394em 0.259919em, 0.445907em 0.210125em, 0.517633em 0.166612em, 0.592738em 0.129213em, 0.67049em 0.097649em, 0.750258em 0.071555em, 0.831515em 0.050498em, 0.913832em 0.033994em, 0.996867em 0.021521em, 1.080363em 0.012536em, 1.164129em 0.006475em, 1.248038em 0.002768em, 1.33201em 0.00084em, 1.416003em 0.00011em, 1.5em 0em);
    transform-style: flat;
  }
  .marquee-item > span {
    color: var(--color-gray-700);
  }
  @keyframes testimonialsScroll {
    0% {
      transform: translate3d(0, 0, 0);
    }
    100% {
      transform: translate3d(0, -50%, 0);
    }
  }
  @keyframes testimonialsScrollx {
    0% {
      transform: translate3d(0, 0, 0);
    }
    100% {
      transform: translate3d(-50%, 0, 0);
    }
  }
  @media (max-width: 768px) {
    .testim-container-forward {
      height: 100%;
      width: max-content;
      contain: layout paint;
      animation-name: testimonialsScrollx;
      animation-duration: 30s !important;
      animation-timing-function: linear;
      animation-iteration-count: infinite;
    }
    .testim-container-backward {
      height: 100%;
      width: max-content;
      contain: layout paint;
      animation-name: testimonialsScrollx;
      animation-timing-function: linear;
      animation-iteration-count: infinite;
      animation-direction: reverse;
    }
  }
  .opinie-prev, .opinie-next, .hero-prev, .hero-next {
    :where(&) {
      @layer daisyui.component {
        width: unset;
      }
    }
    .prose & {
      text-decoration-line: none;
    }
    @layer daisyui.component {
      display: inline-flex;
      flex-shrink: 0;
      cursor: pointer;
      flex-wrap: nowrap;
      align-items: center;
      justify-content: center;
      gap: calc(0.25rem * 1.5);
      text-align: center;
      vertical-align: middle;
      outline-offset: 2px;
      webkit-user-select: none;
      user-select: none;
      padding-inline: var(--btn-p);
      color: var(--btn-fg);
      --tw-prose-links: var(--btn-fg);
      height: var(--size);
      font-size: var(--fontsize, 0.875rem);
      font-weight: 600;
      outline-color: var(--btn-color, var(--color-base-content));
      transition-property: color, background-color, border-color, box-shadow;
      transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
      transition-duration: 0.2s;
      border-start-start-radius: var(--join-ss, var(--radius-field));
      border-start-end-radius: var(--join-se, var(--radius-field));
      border-end-start-radius: var(--join-es, var(--radius-field));
      border-end-end-radius: var(--join-ee, var(--radius-field));
      background-color: var(--btn-bg);
      background-size: auto, calc(var(--noise) * 100%);
      background-image: none, var(--btn-noise);
      border-width: var(--border);
      border-style: solid;
      border-color: var(--btn-border);
      text-shadow: 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 0.15));
      touch-action: manipulation;
      box-shadow: 0 0.5px 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 6%)) inset, var(--btn-shadow);
      --size: calc(var(--size-field, 0.25rem) * 10);
      --btn-bg: var(--btn-color, var(--color-base-200));
      --btn-fg: var(--color-base-content);
      --btn-p: 1rem;
      --btn-border: var(--btn-bg);
      @supports (color: color-mix(in lab, red, red)) {
        --btn-border: color-mix(in oklab, var(--btn-bg), #000 calc(var(--depth) * 5%));
      }
      --btn-shadow: 0 3px 2px -2px var(--btn-bg),
      0 4px 3px -2px var(--btn-bg);
      @supports (color: color-mix(in lab, red, red)) {
        --btn-shadow: 0 3px 2px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000),
      0 4px 3px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000);
      }
      --btn-noise: var(--fx-noise);
      @media (hover: hover) {
        &:hover {
          --btn-bg: var(--btn-color, var(--color-base-200));
          @supports (color: color-mix(in lab, red, red)) {
            --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
          }
        }
      }
      &:focus-visible, &:has(:focus-visible) {
        outline-width: 2px;
        outline-style: solid;
        isolation: isolate;
      }
      &:active:not(.btn-active) {
        translate: 0 0.5px;
        --btn-bg: var(--btn-color, var(--color-base-200));
        @supports (color: color-mix(in lab, red, red)) {
          --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 5%);
        }
        --btn-border: var(--btn-color, var(--color-base-200));
        @supports (color: color-mix(in lab, red, red)) {
          --btn-border: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
        }
        --btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
      }
      &:is(input[type="checkbox"], input[type="radio"]) {
        appearance: none;
        &::after {
          --tw-content: attr(aria-label);
          content: var(--tw-content);
        }
      }
      &:where(input:checked:not(.filter .btn)) {
        --btn-color: var(--color-primary);
        --btn-fg: var(--color-primary-content);
        isolation: isolate;
      }
    }
    &:disabled {
      @layer daisyui.modifier {
        &:not(.btn-link, .btn-ghost) {
          background-color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
          }
          box-shadow: none;
        }
        pointer-events: none;
        --btn-border: #0000;
        --btn-noise: none;
        --btn-fg: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
        }
        @media (hover: hover) {
          &:hover {
            pointer-events: none;
            background-color: var(--color-neutral);
            @supports (color: color-mix(in lab, red, red)) {
              background-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);
            }
            --btn-border: #0000;
            --btn-fg: var(--color-base-content);
            @supports (color: color-mix(in lab, red, red)) {
              --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
            }
          }
        }
      }
    }
    &[disabled] {
      @layer daisyui.modifier {
        &:not(.btn-link, .btn-ghost) {
          background-color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
          }
          box-shadow: none;
        }
        pointer-events: none;
        --btn-border: #0000;
        --btn-noise: none;
        --btn-fg: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
        }
        @media (hover: hover) {
          &:hover {
            pointer-events: none;
            background-color: var(--color-neutral);
            @supports (color: color-mix(in lab, red, red)) {
              background-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);
            }
            --btn-border: #0000;
            --btn-fg: var(--color-base-content);
            @supports (color: color-mix(in lab, red, red)) {
              --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
            }
          }
        }
      }
    }
    background-color: color-mix(in srgb, #fff 8%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 8%, transparent);
    }
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
    color: color-mix(in srgb, #000 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-black) 40%, transparent);
    }
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
    outline-offset: 2px;
    outline-color: color-mix(in srgb, #fff 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      outline-color: color-mix(in oklab, var(--color-white) 15%, transparent);
    }
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 200ms;
    transition-duration: 200ms;
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 105%;
        --tw-scale-y: 105%;
        --tw-scale-z: 105%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
        background-color: color-mix(in srgb, #fff 30%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 30%, transparent);
        }
        color: color-mix(in srgb, #fff 70%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-white) 70%, transparent);
        }
        outline-style: var(--tw-outline-style);
        outline-width: 2px;
        outline-offset: 2px;
        outline-color: color-mix(in srgb, #fff 15%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          outline-color: color-mix(in oklab, var(--color-white) 15%, transparent);
        }
      }
    }
    &:focus {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
      outline-offset: 2px;
      outline-color: color-mix(in srgb, #fff 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        outline-color: color-mix(in oklab, var(--color-white) 20%, transparent);
      }
    }
    &:active {
      --tw-scale-x: 95%;
      --tw-scale-y: 95%;
      --tw-scale-z: 95%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
      background-color: color-mix(in srgb, #fff 12%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 12%, transparent);
      }
      color: color-mix(in srgb, #fff 60%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-white) 60%, transparent);
      }
      outline-style: var(--tw-outline-style);
      outline-width: 3px;
      outline-offset: 4px;
      outline-color: color-mix(in srgb, #fff 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        outline-color: color-mix(in oklab, var(--color-white) 25%, transparent);
      }
    }
    &:disabled {
      cursor: not-allowed;
      background-color: color-mix(in srgb, #fff 2%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 2%, transparent);
      }
      color: color-mix(in srgb, #000 12%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-black) 12%, transparent);
      }
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
      outline-offset: 3px;
      outline-color: color-mix(in srgb, #fff 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        outline-color: color-mix(in oklab, var(--color-white) 5%, transparent);
      }
    }
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 110%;
        --tw-scale-y: 110%;
        --tw-scale-z: 110%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
    clip-path: none !important;
    overflow: visible;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    min-width: 2rem;
    min-height: 2rem;
    pointer-events: auto;
    z-index: 310;
  }
  canvas {
    width: 100%;
    height: 100%;
    margin-inline: auto;
  }
  .button-slider {
    width: fit-content;
    transform-origin: 0;
    cursor: pointer;
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 200ms;
    transition-duration: 200ms;
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
    &:hover {
      --tw-scale-x: 105%;
      --tw-scale-y: 105%;
      --tw-scale-z: 105%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
  .kroplowka {
    margin-block: auto;
    padding: 2.3561944902px;
    padding-right: 1.5707963268px;
    align-items: safe center;
    justify-content: safe center;
    clip-path: polygon( 4.167037rem 0rem, calc(100% - 4.167037rem) 0rem, calc(100% - 3.917025rem) 0.000347rem, calc(100% - 3.667025rem) 0.002717rem, calc(100% - 3.4171rem) 0.009112rem, calc(100% - 3.167409rem) 0.02153rem, calc(100% - 2.918255rem) 0.041962rem, calc(100% - 2.670135rem) 0.072374rem, calc(100% - 2.423782rem) 0.114689rem, calc(100% - 2.180214rem) 0.170762rem, calc(100% - 1.940767rem) 0.242331rem, calc(100% - 1.707134rem) 0.330972rem, calc(100% - 1.481384rem) 0.43803rem, calc(100% - 1.265977rem) 0.564537rem, calc(100% - 1.063758rem) 0.711127rem, calc(100% - 0.877925rem) 0.877925rem, calc(100% - 0.711127rem) 1.063758rem, calc(100% - 0.564537rem) 1.265977rem, calc(100% - 0.43803rem) 1.481384rem, calc(100% - 0.330972rem) 1.707134rem, calc(100% - 0.242331rem) 1.940767rem, calc(100% - 0.170762rem) 2.180214rem, calc(100% - 0.114689rem) 2.423782rem, calc(100% - 0.072374rem) 2.670135rem, calc(100% - 0.041962rem) 2.918255rem, calc(100% - 0.02153rem) 3.167409rem, calc(100% - 0.009112rem) 3.4171rem, calc(100% - 0.002717rem) 3.667025rem, calc(100% - 0.000347rem) 3.917025rem, 100% 4.167037rem, 100% calc(100% - 4.167037rem), calc(100% - 0.000347rem) calc(100% - 3.917025rem), calc(100% - 0.002717rem) calc(100% - 3.667025rem), calc(100% - 0.009112rem) calc(100% - 3.4171rem), calc(100% - 0.02153rem) calc(100% - 3.167409rem), calc(100% - 0.041962rem) calc(100% - 2.918255rem), calc(100% - 0.072374rem) calc(100% - 2.670135rem), calc(100% - 0.114689rem) calc(100% - 2.423782rem), calc(100% - 0.170762rem) calc(100% - 2.180214rem), calc(100% - 0.242331rem) calc(100% - 1.940767rem), calc(100% - 0.330972rem) calc(100% - 1.707134rem), calc(100% - 0.43803rem) calc(100% - 1.481384rem), calc(100% - 0.564537rem) calc(100% - 1.265977rem), calc(100% - 0.711127rem) calc(100% - 1.063758rem), calc(100% - 0.877925rem) calc(100% - 0.877925rem), calc(100% - 1.063758rem) calc(100% - 0.711127rem), calc(100% - 1.265977rem) calc(100% - 0.564537rem), calc(100% - 1.481384rem) calc(100% - 0.43803rem), calc(100% - 1.707134rem) calc(100% - 0.330972rem), calc(100% - 1.940767rem) calc(100% - 0.242331rem), calc(100% - 2.180214rem) calc(100% - 0.170762rem), calc(100% - 2.423782rem) calc(100% - 0.114689rem), calc(100% - 2.670135rem) calc(100% - 0.072374rem), calc(100% - 2.918255rem) calc(100% - 0.041962rem), calc(100% - 3.167409rem) calc(100% - 0.02153rem), calc(100% - 3.4171rem) calc(100% - 0.009112rem), calc(100% - 3.667025rem) calc(100% - 0.002717rem), calc(100% - 3.917025rem) calc(100% - 0.000347rem), calc(100% - 4.167037rem) 100%, 4.167037rem 100%, 3.917025rem calc(100% - 0.000347rem), 3.667025rem calc(100% - 0.002717rem), 3.4171rem calc(100% - 0.009112rem), 3.167409rem calc(100% - 0.02153rem), 2.918255rem calc(100% - 0.041962rem), 2.670135rem calc(100% - 0.072374rem), 2.423782rem calc(100% - 0.114689rem), 2.180214rem calc(100% - 0.170762rem), 1.940767rem calc(100% - 0.242331rem), 1.707134rem calc(100% - 0.330972rem), 1.481384rem calc(100% - 0.43803rem), 1.265977rem calc(100% - 0.564537rem), 1.063758rem calc(100% - 0.711127rem), 0.877925rem calc(100% - 0.877925rem), 0.711127rem calc(100% - 1.063758rem), 0.564537rem calc(100% - 1.265977rem), 0.43803rem calc(100% - 1.481384rem), 0.330972rem calc(100% - 1.707134rem), 0.242331rem calc(100% - 1.940767rem), 0.170762rem calc(100% - 2.180214rem), 0.114689rem calc(100% - 2.423782rem), 0.072374rem calc(100% - 2.670135rem), 0.041962rem calc(100% - 2.918255rem), 0.02153rem calc(100% - 3.167409rem), 0.009112rem calc(100% - 3.4171rem), 0.002717rem calc(100% - 3.667025rem), 0.000347rem calc(100% - 3.917025rem), 0rem calc(100% - 4.167037rem), 0rem 4.167037rem, 0.000347rem 3.917025rem, 0.002717rem 3.667025rem, 0.009112rem 3.4171rem, 0.02153rem 3.167409rem, 0.041962rem 2.918255rem, 0.072374rem 2.670135rem, 0.114689rem 2.423782rem, 0.170762rem 2.180214rem, 0.242331rem 1.940767rem, 0.330972rem 1.707134rem, 0.43803rem 1.481384rem, 0.564537rem 1.265977rem, 0.711127rem 1.063758rem, 0.877925rem 0.877925rem, 1.063758rem 0.711127rem, 1.265977rem 0.564537rem, 1.481384rem 0.43803rem, 1.707134rem 0.330972rem, 1.940767rem 0.242331rem, 2.180214rem 0.170762rem, 2.423782rem 0.114689rem, 2.670135rem 0.072374rem, 2.918255rem 0.041962rem, 3.167409rem 0.02153rem, 3.4171rem 0.009112rem, 3.667025rem 0.002717rem, 3.917025rem 0.000347rem, 4.167037rem 0rem );
    background: #3e374ee4;
    background-image: radial-gradient(circle at 15% 20%, rgba(187,169,246,0.4), transparent 30%), radial-gradient(circle at 90% 80%, rgba(192,114,209,0.1), transparent 30%);
    display: flex;
    height: 362px;
    max-height: 440px;
    cursor: pointer;
    align-items: flex-end;
    justify-content: flex-end;
    contain: layout paint;
    @media (width >= 48rem) {
      height: 440px;
    }
  }
}
@layer base {
  :where(:root),:root:has(input.theme-controller[value=light]:checked),[data-theme=light] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(98% 0 0);
    --color-base-300: oklch(95% 0 0);
    --color-base-content: oklch(21% 0.006 285.885);
    --color-primary: oklch(45% 0.24 277.023);
    --color-primary-content: oklch(93% 0.034 272.788);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  @media (prefers-color-scheme: dark) {
    :root:not([data-theme]) {
      color-scheme: dark;
      --color-base-100: oklch(25.33% 0.016 252.42);
      --color-base-200: oklch(23.26% 0.014 253.1);
      --color-base-300: oklch(21.15% 0.012 254.09);
      --color-base-content: oklch(97.807% 0.029 256.847);
      --color-primary: oklch(58% 0.233 277.117);
      --color-primary-content: oklch(96% 0.018 272.314);
      --color-secondary: oklch(65% 0.241 354.308);
      --color-secondary-content: oklch(94% 0.028 342.258);
      --color-accent: oklch(77% 0.152 181.912);
      --color-accent-content: oklch(38% 0.063 188.416);
      --color-neutral: oklch(14% 0.005 285.823);
      --color-neutral-content: oklch(92% 0.004 286.32);
      --color-info: oklch(74% 0.16 232.661);
      --color-info-content: oklch(29% 0.066 243.157);
      --color-success: oklch(76% 0.177 163.223);
      --color-success-content: oklch(37% 0.077 168.94);
      --color-warning: oklch(82% 0.189 84.429);
      --color-warning-content: oklch(41% 0.112 45.904);
      --color-error: oklch(71% 0.194 13.428);
      --color-error-content: oklch(27% 0.105 12.094);
      --radius-selector: 0.5rem;
      --radius-field: 0.25rem;
      --radius-box: 0.5rem;
      --size-selector: 0.25rem;
      --size-field: 0.25rem;
      --border: 1px;
      --depth: 1;
      --noise: 0;
    }
  }
}
@layer base {
  :root:has(input.theme-controller[value=light]:checked),[data-theme=light] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(98% 0 0);
    --color-base-300: oklch(95% 0 0);
    --color-base-content: oklch(21% 0.006 285.885);
    --color-primary: oklch(45% 0.24 277.023);
    --color-primary-content: oklch(93% 0.034 272.788);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=dark]:checked),[data-theme=dark] {
    color-scheme: dark;
    --color-base-100: oklch(25.33% 0.016 252.42);
    --color-base-200: oklch(23.26% 0.014 253.1);
    --color-base-300: oklch(21.15% 0.012 254.09);
    --color-base-content: oklch(97.807% 0.029 256.847);
    --color-primary: oklch(58% 0.233 277.117);
    --color-primary-content: oklch(96% 0.018 272.314);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root {
    --fx-noise: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 200 200'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='200' height='200' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E");
  }
}
@layer base {
  :root {
    scrollbar-color: currentColor #0000;
    @supports (color: color-mix(in lab, red, red)) {
      scrollbar-color: color-mix(in oklch, currentColor 35%, #0000) #0000;
    }
  }
}
@layer base {
  @property --radialprogress {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 0%;
  }
}
@layer base {
  :root:has(.modal-open, .modal[open], .modal:target, .modal-toggle:checked) {
    overflow: hidden;
    --page-has-backdrop: 1;
  }
  :root:has(.drawer:not([class*="drawer-open"]) > .drawer-toggle:checked) {
    overflow: hidden;
    --page-has-backdrop: 1;
  }
  :root:has(.sm\:drawer-open > .drawer-toggle:checked) {
    @media (width < 40rem) {
      overflow: hidden;
    }
    @media (width < 40rem) {
      --page-has-backdrop: 1;
    }
  }
  :root:has(.md\:drawer-open > .drawer-toggle:checked) {
    @media (width < 48rem) {
      overflow: hidden;
    }
    @media (width < 48rem) {
      --page-has-backdrop: 1;
    }
  }
  :root:has(.lg\:drawer-open > .drawer-toggle:checked) {
    @media (width < 64rem) {
      overflow: hidden;
    }
    @media (width < 64rem) {
      --page-has-backdrop: 1;
    }
  }
  :root:has(.xl\:drawer-open > .drawer-toggle:checked) {
    @media (width < 80rem) {
      overflow: hidden;
    }
    @media (width < 80rem) {
      --page-has-backdrop: 1;
    }
  }
  :root:has(.\32xl\:drawer-open > .drawer-toggle:checked) {
    @media (width < 96rem) {
      overflow: hidden;
    }
    @media (width < 96rem) {
      --page-has-backdrop: 1;
    }
  }
  :root:has(.max-sm\:drawer-open > .drawer-toggle:checked) {
    @media (width >= 40rem) {
      overflow: hidden;
    }
    @media (width >= 40rem) {
      --page-has-backdrop: 1;
    }
  }
  :root:has(.max-md\:drawer-open > .drawer-toggle:checked) {
    @media (width >= 48rem) {
      overflow: hidden;
    }
    @media (width >= 48rem) {
      --page-has-backdrop: 1;
    }
  }
  :root:has(.max-lg\:drawer-open > .drawer-toggle:checked) {
    @media (width >= 64rem) {
      overflow: hidden;
    }
    @media (width >= 64rem) {
      --page-has-backdrop: 1;
    }
  }
  :root:has(.max-xl\:drawer-open > .drawer-toggle:checked) {
    @media (width >= 80rem) {
      overflow: hidden;
    }
    @media (width >= 80rem) {
      --page-has-backdrop: 1;
    }
  }
  :root:has(.max-2xl\:drawer-open > .drawer-toggle:checked) {
    @media (width >= 96rem) {
      overflow: hidden;
    }
    @media (width >= 96rem) {
      --page-has-backdrop: 1;
    }
  }
}
@layer base {
  :root:has( .modal-open, .modal[open], .modal:target, .modal-toggle:checked, .drawer:not(.drawer-open) > .drawer-toggle:checked ) {
    background-image: linear-gradient(var(--root-bg), var(--root-bg));
    background-color: var(--root-bg);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix( in srgb, var(--root-bg), oklch(0% 0 0) calc(var(--page-has-backdrop, 0) * 40%) );
    }
    animation: set-page-has-scroll forwards;
    animation-timeline: scroll();
    scrollbar-gutter: stable;
    scrollbar-gutter: if(style(--page-has-scroll: 1): stable; else: unset);
  }
  @keyframes set-page-has-scroll {
    0%, to {
      --page-has-scroll: 1;
    }
  }
}
@layer base {
  :root, [data-theme] {
    background-color: var(--root-bg, var(--color-base-100));
    color: var(--color-base-content);
  }
  :where(:root, [data-theme]) {
    --root-bg: var(--color-base-100);
  }
}
@keyframes rating {
  0%, 40% {
    scale: 1.1;
    filter: brightness(1.05) contrast(1.05);
  }
}
@keyframes dropdown {
  0% {
    opacity: 0;
  }
}
@keyframes radio {
  0% {
    padding: 5px;
  }
  50% {
    padding: 3px;
  }
}
@keyframes toast {
  0% {
    scale: 0.9;
    opacity: 0;
  }
  100% {
    scale: 1;
    opacity: 1;
  }
}
@keyframes skeleton {
  0% {
    background-position: 150%;
  }
  100% {
    background-position: -50%;
  }
}
@keyframes progress {
  50% {
    background-position-x: -115%;
  }
}
@layer base {
  @media (prefers-color-scheme: dark) {
    :root:not([data-theme]) {
      color-scheme: dark;
      --color-primary: var(--primary);
      --color-secondary: var(--secondary);
      --color-accent: var(--accent);
      --color-warning: var(--danger);
      --depth: 0;
      --noise: 0;
      --radius-box: 0;
    }
  }
}
@layer base {
  :where(:root),:root:has(input.theme-controller[value=vithouse]:checked),[data-theme="vithouse"] {
    color-scheme: dark;
    --color-primary: var(--primary);
    --color-secondary: var(--secondary);
    --color-accent: var(--accent);
    --color-warning: var(--danger);
    --depth: 0;
    --noise: 0;
    --radius-box: 0;
  }
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-ordinal {
  syntax: "*";
  inherits: false;
}
@property --tw-slashed-zero {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-figure {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-spacing {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-fraction {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-contain-size {
  syntax: "*";
  inherits: false;
}
@property --tw-contain-layout {
  syntax: "*";
  inherits: false;
}
@property --tw-contain-paint {
  syntax: "*";
  inherits: false;
}
@property --tw-contain-style {
  syntax: "*";
  inherits: false;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-outline-style: solid;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-y-reverse: 0;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-tracking: initial;
      --tw-ordinal: initial;
      --tw-slashed-zero: initial;
      --tw-numeric-figure: initial;
      --tw-numeric-spacing: initial;
      --tw-numeric-fraction: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-contain-size: initial;
      --tw-contain-layout: initial;
      --tw-contain-paint: initial;
      --tw-contain-style: initial;
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
    }
  }
}

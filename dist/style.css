/*! tailwindcss v4.1.15 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-amber-100: oklch(96.2% 0.059 95.617);
    --color-amber-200: oklch(92.4% 0.12 95.746);
    --color-blue-50: oklch(97% 0.014 254.604);
    --color-blue-600: oklch(54.6% 0.245 262.881);
    --color-slate-600: oklch(44.6% 0.043 257.281);
    --color-gray-50: oklch(98.5% 0.002 247.839);
    --color-gray-100: oklch(96.7% 0.003 264.542);
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-gray-700: oklch(37.3% 0.034 259.733);
    --color-gray-800: oklch(27.8% 0.033 256.848);
    --color-gray-900: oklch(21% 0.034 264.665);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-2xl: 42rem;
    --container-4xl: 56rem;
    --container-5xl: 64rem;
    --container-7xl: 80rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --text-8xl: 6rem;
    --text-8xl--line-height: 1;
    --font-weight-light: 300;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --font-weight-extrabold: 800;
    --tracking-tight: -0.025em;
    --leading-tight: 1.25;
    --leading-relaxed: 1.625;
    --leading-loose: 2;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --radius-2xl: 1rem;
    --ease-in: cubic-bezier(0.4, 0, 1, 1);
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --blur-xs: 4px;
    --blur-sm: 8px;
    --blur-md: 12px;
    --blur-2xl: 40px;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-display);
    --default-mono-font-family: var(--font-mono);
    --squircle-border-radius-3xl: 24px;
    --squircle-border-radius-4xl: 32px;
    --squircle-border-radius-5xl: 40px;
    --squircle-border-radius-6xl: 50px;
    --squircle-border-smoothing-md: 0.6;
    --squircle-border-smoothing-lg: 0.8;
    --squircle-border-smoothing-xl: 1;
    --container-8xl: 88rem;
    --font-display: "Satoshi", sans-serif;
    --bg-0: #191321;
    --bg: #271c3780;
    --bg-2: #271c37;
    --bg-light: #36294A;
    --surface: #312543;
    --surface-dark: #150f1c;
    --card: #3E315E;
    --primary: #7ce2c5;
    --color-primary: #7ce2c5;
    --primary-2: #62c6aa;
    --secondary: #bba9f6;
    --secondary-2: #9481d4;
    --secondary-3: #9f8fd4;
    --accent: #ffc9a9;
    --muted: #a5a1b3;
    --text: #f4f2f7;
    --text-2: #cfcbda;
    --success: #34d399;
    --warning: #fdba74;
    --warning-2: #e48f35;
    --danger: #fb7185;
    --danger-2: #ec96a3;
    --border: rgba(255, 255, 255, 0.06);
    --slider-mobile-aspect: 1.003;
    --slider-desktop-aspect: 1.96129;
    --slider-mobile-clip: shape(from 0% 12.6%,curve to 1.84% 1.84% with 0% 6.66%/0% 3.69%,curve to 12.56% 0% with 3.68% 0%/6.64% 0%,hline to 87.44%,curve to 98.16% 1.84% with 93.36% 0%/96.32% 0%,curve to 100% 12.6% with 100% 3.69%/100% 6.66%,vline to 72.83%,curve to 98.16% 83.58% with 100% 78.77%/100% 81.74%,curve to 87.44% 85.43% with 96.32% 85.43%/93.36% 85.43%,line to 51.65% 85.43%,curve to 44.61% 86.34% with 47.96% 85.43%/46.11% 85.43%,curve to 40.53% 92.17% with 43.11% 87.24%/42.25% 88.89%,line to 39.96% 93.26%,curve to 35.89% 99.09% with 38.25% 96.54%/37.39% 98.18%,curve to 28.85% 100% with 34.39% 100%/32.54% 100%,hline to 12.56%,curve to 1.84% 98.15% with 6.64% 100%/3.68% 100%,curve to 0% 87.4% with 0% 96.31%/0% 93.34%,vline to 12.6%,close);
    --slider-desktop-clip: shape(from 100% 12.9%,curve to 99.04% 1.89% with 100% 6.82%/100% 3.78%,curve to 93.42% 0% with 98.07% 0%/96.52% 0%,hline to 6.58%,curve to 0.96% 1.89% with 3.48% 0%/1.93% 0%,curve to 0% 12.9% with 0% 3.78%/0% 6.82%,vline to 72.98%,curve to 0.96% 83.99% with 0% 79.06%/0% 82.1%,curve to 6.58% 85.88% with 1.93% 85.88%/3.48% 85.88%,line to 34.63% 85.88%,curve to 38.06% 86.67% with 36.43% 85.88%/37.32% 85.88%,curve to 38.44% 87.15% with 38.19% 86.82%/38.32% 86.98%,curve to 40.24% 92.94% with 39.12% 88.14%/39.49% 89.74%,curve to 42.05% 98.73% with 41% 96.14%/41.37% 97.74%,curve to 42.43% 99.21% with 42.17% 98.9%/42.3% 99.06%,curve to 45.86% 100% with 43.17% 100%/44.06% 100%,hline to 93.42%,curve to 99.04% 98.11% with 96.52% 100%/98.07% 100%,curve to 100% 87.1% with 100% 96.22%/100% 93.18%,vline to 12.9%,close);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        & {
          color: color-mix(in oklab, currentcolor 50%, transparent);
        }
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .drawer-side {
    :where(&) {
      @layer daisyui.component {
        overflow-x: hidden;
        overflow-y: hidden;
      }
    }
    @layer daisyui.component {
      pointer-events: none;
      visibility: hidden;
      position: fixed;
      inset-inline-start: calc(0.25rem * 0);
      top: calc(0.25rem * 0);
      z-index: 10;
      grid-column-start: 1;
      grid-row-start: 1;
      display: grid;
      width: 100%;
      grid-template-columns: repeat(1, minmax(0, 1fr));
      grid-template-rows: repeat(1, minmax(0, 1fr));
      align-items: flex-start;
      justify-items: start;
      overscroll-behavior: contain;
      background-color: transparent;
      opacity: 0%;
      transition: opacity 0.2s ease-out 0.1s allow-discrete, visibility 0.3s ease-out 0.1s allow-discrete;
      height: 100vh;
      height: 100dvh;
      > .drawer-overlay {
        position: sticky;
        top: calc(0.25rem * 0);
        cursor: pointer;
        place-self: stretch;
        background-color: oklch(0% 0 0 / 40%);
      }
      > * {
        grid-column-start: 1;
        grid-row-start: 1;
      }
      > *:not(.drawer-overlay) {
        will-change: transform;
        transition: translate 0.3s ease-out, width 0.2s ease-out;
        translate: -100%;
        [dir="rtl"] & {
          translate: 100%;
        }
      }
    }
  }
  .fab {
    @layer daisyui.component {
      pointer-events: none;
      position: fixed;
      inset-inline-end: calc(0.25rem * 4);
      bottom: calc(0.25rem * 4);
      z-index: 999;
      display: flex;
      flex-direction: column-reverse;
      align-items: flex-end;
      gap: calc(0.25rem * 2);
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
      white-space: nowrap;
      > * {
        pointer-events: auto;
        display: flex;
        align-items: center;
        gap: calc(0.25rem * 2);
        &:hover, &:has(:focus-visible) {
          z-index: 1;
        }
      }
      > [tabindex] {
        &:first-child {
          position: relative;
          display: grid;
          transition-property: opacity, visibility, rotate;
          transition-duration: 0.2s;
          transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        }
      }
      .fab-close {
        position: absolute;
        inset-inline-end: calc(0.25rem * 0);
        bottom: calc(0.25rem * 0);
      }
      .fab-main-action {
        position: absolute;
        inset-inline-end: calc(0.25rem * 0);
        bottom: calc(0.25rem * 0);
      }
      &:focus-within {
        &:has(.fab-close), &:has(.fab-main-action) {
          > [tabindex] {
            rotate: 90deg;
            opacity: 0%;
          }
        }
        > [tabindex]:first-child {
          pointer-events: none;
        }
        > :nth-child(n + 2) {
          visibility: visible;
          --tw-scale-x: 100%;
          --tw-scale-y: 100%;
          --tw-scale-z: 100%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
          opacity: 100%;
        }
      }
      > :nth-child(n + 2) {
        visibility: hidden;
        --tw-scale-x: 80%;
        --tw-scale-y: 80%;
        --tw-scale-z: 80%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
        opacity: 0%;
        transition-property: opacity, scale, visibility;
        transition-duration: 0.2s;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        &.fab-main-action, &.fab-close {
          --tw-scale-x: 100%;
          --tw-scale-y: 100%;
          --tw-scale-z: 100%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
      }
      > :nth-child(3) {
        transition-delay: 30ms;
      }
      > :nth-child(4) {
        transition-delay: 60ms;
      }
      > :nth-child(5) {
        transition-delay: 90ms;
      }
      > :nth-child(6) {
        transition-delay: 120ms;
      }
    }
  }
  .drawer-toggle {
    @layer daisyui.component {
      position: fixed;
      height: calc(0.25rem * 0);
      width: calc(0.25rem * 0);
      appearance: none;
      opacity: 0%;
      &:checked {
        & ~ .drawer-side {
          pointer-events: auto;
          visibility: visible;
          overflow-y: auto;
          opacity: 100%;
          scrollbar-color: currentColor oklch(0 0 0 / calc(var(--page-has-backdrop, 0) * 0.4));
          @supports (color: color-mix(in lab, red, red)) {
            & {
              scrollbar-color: color-mix(in oklch, currentColor 35%, #0000) oklch(0 0 0 / calc(var(--page-has-backdrop, 0) * 0.4));
            }
          }
          & > *:not(.drawer-overlay) {
            translate: 0%;
          }
        }
      }
      &:focus-visible ~ .drawer-content label.drawer-button {
        outline: 2px solid;
        outline-offset: 2px;
      }
    }
  }
  .menu {
    @layer daisyui.component {
      display: flex;
      width: fit-content;
      flex-direction: column;
      flex-wrap: wrap;
      padding: calc(0.25rem * 2);
      --menu-active-fg: var(--color-neutral-content);
      --menu-active-bg: var(--color-neutral);
      font-size: 0.875rem;
      :where(li ul) {
        position: relative;
        margin-inline-start: calc(0.25rem * 4);
        padding-inline-start: calc(0.25rem * 2);
        white-space: nowrap;
        &:before {
          position: absolute;
          inset-inline-start: calc(0.25rem * 0);
          top: calc(0.25rem * 3);
          bottom: calc(0.25rem * 3);
          background-color: var(--color-base-content);
          opacity: 10%;
          width: var(--border);
          content: "";
        }
      }
      :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
        display: none;
      }
      :where(li:not(.menu-title) > *:not(ul, details, .menu-title, .btn)), :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
        display: grid;
        grid-auto-flow: column;
        align-content: flex-start;
        align-items: center;
        gap: calc(0.25rem * 2);
        border-radius: var(--radius-field);
        padding-inline: calc(0.25rem * 3);
        padding-block: calc(0.25rem * 1.5);
        text-align: start;
        transition-property: color, background-color, box-shadow;
        transition-duration: 0.2s;
        transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
        grid-auto-columns: minmax(auto, max-content) auto max-content;
        text-wrap: balance;
        user-select: none;
      }
      :where(li > details > summary) {
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
        &::-webkit-details-marker {
          display: none;
        }
      }
      :where(li > details > summary), :where(li > .menu-dropdown-toggle) {
        &:after {
          justify-self: flex-end;
          display: block;
          height: 0.375rem;
          width: 0.375rem;
          rotate: -135deg;
          translate: 0 -1px;
          transition-property: rotate, translate;
          transition-duration: 0.2s;
          content: "";
          transform-origin: 50% 50%;
          box-shadow: 2px 2px inset;
          pointer-events: none;
        }
      }
      :where(li > details[open] > summary):after, :where(li > .menu-dropdown-toggle.menu-dropdown-show):after {
        rotate: 45deg;
        translate: 0 1px;
      }
      :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn) {
        &.menu-focus, &:focus-visible {
          cursor: pointer;
          background-color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            & {
              background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
            }
          }
          color: var(--color-base-content);
          --tw-outline-style: none;
          outline-style: none;
          @media (forced-colors: active) {
            outline: 2px solid transparent;
            outline-offset: 2px;
          }
        }
      }
      :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover ) {
        cursor: pointer;
        background-color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          & {
            background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
          }
        }
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
        box-shadow: 0 1px oklch(0% 0 0 / 0.01) inset, 0 -1px oklch(100% 0 0 / 0.01) inset;
      }
      :where(li:empty) {
        background-color: var(--color-base-content);
        opacity: 10%;
        margin: 0.5rem 1rem;
        height: 1px;
      }
      :where(li) {
        position: relative;
        display: flex;
        flex-shrink: 0;
        flex-direction: column;
        flex-wrap: wrap;
        align-items: stretch;
        .badge {
          justify-self: flex-end;
        }
        & > *:not(ul, .menu-title, details, .btn):active, & > *:not(ul, .menu-title, details, .btn).menu-active, & > details > summary:active {
          --tw-outline-style: none;
          outline-style: none;
          @media (forced-colors: active) {
            outline: 2px solid transparent;
            outline-offset: 2px;
          }
          color: var(--menu-active-fg);
          background-color: var(--menu-active-bg);
          background-size: auto, calc(var(--noise) * 100%);
          background-image: none, var(--fx-noise);
          &:not(&:active) {
            box-shadow: 0 2px calc(var(--depth) * 3px) -2px var(--menu-active-bg);
          }
        }
        &.menu-disabled {
          pointer-events: none;
          color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            & {
              color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
            }
          }
        }
      }
      .dropdown:focus-within {
        .menu-dropdown-toggle:after {
          rotate: 45deg;
          translate: 0 1px;
        }
      }
      .dropdown-content {
        margin-top: calc(0.25rem * 2);
        padding: calc(0.25rem * 2);
        &:before {
          display: none;
        }
      }
    }
  }
  .collapse-arrow {
    @layer daisyui.modifier {
      > .collapse-title:after {
        position: absolute;
        display: block;
        height: 0.5rem;
        width: 0.5rem;
        transform: translateY(-100%) rotate(45deg);
        @media (prefers-reduced-motion: no-preference) {
          transition-property: all;
          transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
          transition-duration: 0.2s;
        }
        top: 50%;
        inset-inline-end: 1.4rem;
        content: "";
        transform-origin: 75% 75%;
        box-shadow: 2px 2px;
        pointer-events: none;
      }
    }
  }
  .dropdown {
    @layer daisyui.component {
      position: relative;
      display: inline-block;
      position-area: var(--anchor-v, bottom) var(--anchor-h, span-right);
      & > *:not(summary):focus {
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
      }
      .dropdown-content {
        position: absolute;
      }
      &:not(details, .dropdown-open, .dropdown-hover:hover, :focus-within) .dropdown-content, &.dropdown-hover:not(:hover) [tabindex]:first-child:focus:not(:focus-visible) ~ .dropdown-content {
        display: none;
        transform-origin: top;
        opacity: 0%;
        scale: 95%;
      }
      &[popover], .dropdown-content {
        z-index: 999;
        @media (prefers-reduced-motion: no-preference) {
          animation: dropdown 0.2s;
          transition-property: opacity, scale, display;
          transition-behavior: allow-discrete;
          transition-duration: 0.2s;
          transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        }
      }
      @starting-style {
        &[popover], .dropdown-content {
          scale: 95%;
          opacity: 0;
        }
      }
      &.dropdown-open, &:not(.dropdown-hover):focus, &:focus-within {
        > [tabindex]:first-child {
          pointer-events: none;
        }
        .dropdown-content {
          opacity: 100%;
        }
      }
      &.dropdown-hover:hover {
        .dropdown-content {
          opacity: 100%;
          scale: 100%;
        }
      }
      &:is(details) {
        summary {
          &::-webkit-details-marker {
            display: none;
          }
        }
      }
      &.dropdown-open, &:focus, &:focus-within {
        .dropdown-content {
          scale: 100%;
        }
      }
      &:where([popover]) {
        background: #0000;
      }
      &[popover] {
        position: fixed;
        color: inherit;
        @supports not (position-area: bottom) {
          margin: auto;
          &.dropdown-open:not(:popover-open) {
            display: none;
            transform-origin: top;
            opacity: 0%;
            scale: 95%;
          }
          &::backdrop {
            background-color: color-mix(in oklab, #000 30%, #0000);
          }
        }
        &:not(.dropdown-open, :popover-open) {
          display: none;
          transform-origin: top;
          opacity: 0%;
          scale: 95%;
        }
      }
    }
  }
  .btn {
    :where(&) {
      @layer daisyui.component {
        width: unset;
      }
    }
    .prose & {
      text-decoration-line: none;
    }
    @layer daisyui.component {
      display: inline-flex;
      flex-shrink: 0;
      cursor: pointer;
      flex-wrap: nowrap;
      align-items: center;
      justify-content: center;
      gap: calc(0.25rem * 1.5);
      text-align: center;
      vertical-align: middle;
      outline-offset: 2px;
      webkit-user-select: none;
      user-select: none;
      padding-inline: var(--btn-p);
      color: var(--btn-fg);
      --tw-prose-links: var(--btn-fg);
      height: var(--size);
      font-size: var(--fontsize, 0.875rem);
      font-weight: 600;
      outline-color: var(--btn-color, var(--color-base-content));
      transition-property: color, background-color, border-color, box-shadow;
      transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
      transition-duration: 0.2s;
      border-start-start-radius: var(--join-ss, var(--radius-field));
      border-start-end-radius: var(--join-se, var(--radius-field));
      border-end-start-radius: var(--join-es, var(--radius-field));
      border-end-end-radius: var(--join-ee, var(--radius-field));
      background-color: var(--btn-bg);
      background-size: auto, calc(var(--noise) * 100%);
      background-image: none, var(--btn-noise);
      border-width: var(--border);
      border-style: solid;
      border-color: var(--btn-border);
      text-shadow: 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 0.15));
      touch-action: manipulation;
      box-shadow: 0 0.5px 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 6%)) inset, var(--btn-shadow);
      --size: calc(var(--size-field, 0.25rem) * 10);
      --btn-bg: var(--btn-color, var(--color-base-200));
      --btn-fg: var(--color-base-content);
      --btn-p: 1rem;
      --btn-border: var(--btn-bg);
      @supports (color: color-mix(in lab, red, red)) {
        & {
          --btn-border: color-mix(in oklab, var(--btn-bg), #000 calc(var(--depth) * 5%));
        }
      }
      --btn-shadow: 0 3px 2px -2px var(--btn-bg),
      0 4px 3px -2px var(--btn-bg);
      @supports (color: color-mix(in lab, red, red)) {
        & {
          --btn-shadow: 0 3px 2px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000),
      0 4px 3px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000);
        }
      }
      --btn-noise: var(--fx-noise);
      @media (hover: hover) {
        &:hover {
          --btn-bg: var(--btn-color, var(--color-base-200));
          @supports (color: color-mix(in lab, red, red)) {
            & {
              --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
            }
          }
        }
      }
      &:focus-visible, &:has(:focus-visible) {
        outline-width: 2px;
        outline-style: solid;
        isolation: isolate;
      }
      &:active:not(.btn-active) {
        translate: 0 0.5px;
        --btn-bg: var(--btn-color, var(--color-base-200));
        @supports (color: color-mix(in lab, red, red)) {
          & {
            --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 5%);
          }
        }
        --btn-border: var(--btn-color, var(--color-base-200));
        @supports (color: color-mix(in lab, red, red)) {
          & {
            --btn-border: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
          }
        }
        --btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
      }
      &:is(input[type="checkbox"], input[type="radio"]) {
        appearance: none;
        &::after {
          content: attr(aria-label);
        }
      }
      &:where(input:checked:not(.filter .btn)) {
        --btn-color: var(--color-primary);
        --btn-fg: var(--color-primary-content);
        isolation: isolate;
      }
    }
    &:disabled {
      @layer daisyui.modifier {
        &:not(.btn-link, .btn-ghost) {
          background-color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            & {
              background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
            }
          }
          box-shadow: none;
        }
        pointer-events: none;
        --btn-border: #0000;
        --btn-noise: none;
        --btn-fg: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          & {
            --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
          }
        }
        @media (hover: hover) {
          &:hover {
            pointer-events: none;
            background-color: var(--color-neutral);
            @supports (color: color-mix(in lab, red, red)) {
              & {
                background-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);
              }
            }
            --btn-border: #0000;
            --btn-fg: var(--color-base-content);
            @supports (color: color-mix(in lab, red, red)) {
              & {
                --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
              }
            }
          }
        }
      }
    }
    &[disabled] {
      @layer daisyui.modifier {
        &:not(.btn-link, .btn-ghost) {
          background-color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            & {
              background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
            }
          }
          box-shadow: none;
        }
        pointer-events: none;
        --btn-border: #0000;
        --btn-noise: none;
        --btn-fg: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          & {
            --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
          }
        }
        @media (hover: hover) {
          &:hover {
            pointer-events: none;
            background-color: var(--color-neutral);
            @supports (color: color-mix(in lab, red, red)) {
              & {
                background-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);
              }
            }
            --btn-border: #0000;
            --btn-fg: var(--color-base-content);
            @supports (color: color-mix(in lab, red, red)) {
              & {
                --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
              }
            }
          }
        }
      }
    }
  }
  .loading {
    @layer daisyui.component {
      pointer-events: none;
      display: inline-block;
      aspect-ratio: 1 / 1;
      background-color: currentcolor;
      vertical-align: middle;
      width: calc(var(--size-selector, 0.25rem) * 6);
      mask-size: 100%;
      mask-repeat: no-repeat;
      mask-position: center;
      mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
    }
  }
  .pointer-events-auto {
    pointer-events: auto;
  }
  .pointer-events-none {
    pointer-events: none;
  }
  .collapse {
    &:not(td, tr, colgroup) {
      visibility: revert-layer;
    }
    @layer daisyui.component {
      display: grid;
      position: relative;
      overflow: hidden;
      border-radius: var(--radius-box, 1rem);
      width: 100%;
      grid-template-rows: max-content 0fr;
      grid-template-columns: minmax(0, 1fr);
      isolation: isolate;
      @media (prefers-reduced-motion: no-preference) {
        transition: grid-template-rows 0.2s;
      }
      > input:is([type="checkbox"], [type="radio"]) {
        grid-column-start: 1;
        grid-row-start: 1;
        appearance: none;
        opacity: 0;
        z-index: 1;
        width: 100%;
        padding: 1rem;
        padding-inline-end: 3rem;
        min-height: 1lh;
        transition: background-color 0.2s ease-out;
      }
      &:is( [open], [tabindex]:focus:not(.collapse-close), [tabindex]:focus-within:not(.collapse-close) ), &:not(.collapse-close):has(> input:is([type="checkbox"], [type="radio"]):checked) {
        grid-template-rows: max-content 1fr;
      }
      &:is( [open], [tabindex]:focus:not(.collapse-close), [tabindex]:focus-within:not(.collapse-close) ) > .collapse-content, &:not(.collapse-close) > :where(input:is([type="checkbox"], [type="radio"]):checked ~ .collapse-content) {
        visibility: visible;
        min-height: fit-content;
      }
      &:focus-visible, &:has(> input:is([type="checkbox"], [type="radio"]):focus-visible), &:has(summary:focus-visible) {
        outline-color: var(--color-base-content);
        outline-style: solid;
        outline-width: 2px;
        outline-offset: 2px;
      }
      &:not(.collapse-close) {
        > input[type="checkbox"], > input[type="radio"]:not(:checked), > .collapse-title {
          cursor: pointer;
        }
      }
      &[tabindex]:focus:not(.collapse-close, .collapse[open]), &[tabindex]:focus-within:not(.collapse-close, .collapse[open]) {
        > .collapse-title {
          cursor: unset;
        }
      }
      &:is( [open], [tabindex]:focus:not(.collapse-close), [tabindex]:focus-within:not(.collapse-close) ) > :where(.collapse-content), &:not(.collapse-close) > :where(input:is([type="checkbox"], [type="radio"]):checked ~ .collapse-content) {
        padding-bottom: 1rem;
        @media (prefers-reduced-motion: no-preference) {
          transition: padding 0.2s ease-out, background-color 0.2s ease-out;
        }
      }
    }
    @layer daisyui.modifier {
      &:is([open]) {
        &.collapse-arrow {
          > .collapse-title:after {
            @media (prefers-reduced-motion: no-preference) {
              transform: translateY(-50%) rotate(225deg);
            }
          }
        }
      }
      &.collapse-open {
        &.collapse-arrow {
          > .collapse-title:after {
            @media (prefers-reduced-motion: no-preference) {
              transform: translateY(-50%) rotate(225deg);
            }
          }
        }
        &.collapse-plus {
          > .collapse-title:after {
            content: "−";
          }
        }
      }
      &[tabindex].collapse-arrow:focus:not(.collapse-close), &.collapse-arrow[tabindex]:focus-within:not(.collapse-close) {
        > .collapse-title:after {
          transform: translateY(-50%) rotate(225deg);
        }
      }
      &.collapse-arrow:not(.collapse-close) {
        > input:is([type="checkbox"], [type="radio"]):checked ~ .collapse-title:after {
          transform: translateY(-50%) rotate(225deg);
        }
      }
      &[open] {
        &.collapse-plus {
          > .collapse-title:after {
            content: "−";
          }
        }
      }
      &[tabindex].collapse-plus:focus:not(.collapse-close) {
        > .collapse-title:after {
          content: "−";
        }
      }
      &.collapse-plus:not(.collapse-close) {
        > input:is([type="checkbox"], [type="radio"]):checked ~ .collapse-title:after {
          content: "−";
        }
      }
    }
    &:is(details) {
      @layer daisyui.component {
        width: 100%;
        @media (prefers-reduced-motion: no-preference) {
          @supports (transition: content-visibility allow-discrete) and (interpolate-size: allow-keywords) {
            &::details-content {
              transition: content-visibility 0.2s allow-discrete, height 0.2s;
              height: 0;
              interpolate-size: allow-keywords;
            }
            &:where([open], .collapse-open)::details-content {
              height: auto;
            }
          }
        }
        & summary {
          position: relative;
          display: block;
          &::-webkit-details-marker {
            display: none;
          }
        }
      }
    }
    &:is(details) summary {
      @layer daisyui.component {
        outline: none;
      }
    }
  }
  .collapse-content {
    @layer daisyui.component {
      grid-column-start: 1;
      grid-row-start: 1;
    }
    @layer daisyui.component {
      visibility: hidden;
      grid-column-start: 1;
      grid-row-start: 2;
      min-height: 0;
      padding-left: 1rem;
      padding-right: 1rem;
      cursor: unset;
      @media (prefers-reduced-motion: no-preference) {
        transition: visibility 0.2s, padding 0.2s ease-out, background-color 0.2s ease-out;
      }
    }
  }
  .collapse {
    visibility: collapse;
  }
  .collapse-title {
    @layer daisyui.component {
      grid-column-start: 1;
      grid-row-start: 1;
    }
    @layer daisyui.component {
      position: relative;
      width: 100%;
      padding: 1rem;
      padding-inline-end: 3rem;
      min-height: 1lh;
      transition: background-color 0.2s ease-out;
    }
  }
  .menu-vertical {
    @layer daisyui.modifier {
      display: inline-flex;
      flex-direction: column;
      & > li:not(.menu-title) > details > ul {
        position: relative;
        margin-inline-start: calc(0.25rem * 4);
        margin-top: calc(0.25rem * 0);
        padding-block: calc(0.25rem * 0);
        padding-inline-end: calc(0.25rem * 0);
      }
    }
  }
  .checkbox {
    @layer daisyui.component {
      border: var(--border) solid var(--input-color, var(--color-base-content));
      @supports (color: color-mix(in lab, red, red)) {
        & {
          border: var(--border) solid var(--input-color, color-mix(in oklab, var(--color-base-content) 20%, #0000));
        }
      }
      position: relative;
      display: inline-block;
      flex-shrink: 0;
      cursor: pointer;
      appearance: none;
      border-radius: var(--radius-selector);
      padding: calc(0.25rem * 1);
      vertical-align: middle;
      color: var(--color-base-content);
      box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 0 #0000 inset, 0 0 #0000;
      transition: background-color 0.2s, box-shadow 0.2s;
      --size: calc(var(--size-selector, 0.25rem) * 6);
      width: var(--size);
      height: var(--size);
      background-size: auto, calc(var(--noise) * 100%);
      background-image: none, var(--fx-noise);
      &:before {
        --tw-content: "";
        content: var(--tw-content);
        display: block;
        width: 100%;
        height: 100%;
        rotate: 45deg;
        background-color: currentcolor;
        opacity: 0%;
        transition: clip-path 0.3s, opacity 0.1s, rotate 0.3s, translate 0.3s;
        transition-delay: 0.1s;
        clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 70% 80%, 70% 100%);
        box-shadow: 0px 3px 0 0px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
        font-size: 1rem;
        line-height: 0.75;
      }
      &:focus-visible {
        outline: 2px solid var(--input-color, currentColor);
        outline-offset: 2px;
      }
      &:checked, &[aria-checked="true"] {
        background-color: var(--input-color, #0000);
        box-shadow: 0 0 #0000 inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));
        &:before {
          clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 0%, 70% 0%, 70% 100%);
          opacity: 100%;
        }
        @media (forced-colors: active) {
          &:before {
            rotate: 0deg;
            background-color: transparent;
            --tw-content: "✔︎";
            clip-path: none;
          }
        }
        @media print {
          &:before {
            rotate: 0deg;
            background-color: transparent;
            --tw-content: "✔︎";
            clip-path: none;
          }
        }
      }
      &:indeterminate {
        background-color: var( --input-color, var(--color-base-content) );
        @supports (color: color-mix(in lab, red, red)) {
          & {
            background-color: var( --input-color, color-mix(in oklab, var(--color-base-content) 20%, #0000) );
          }
        }
        &:before {
          rotate: 0deg;
          opacity: 100%;
          translate: 0 -35%;
          clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 80% 80%, 80% 100%);
        }
      }
    }
    &:disabled {
      @layer daisyui.modifier {
        cursor: not-allowed;
        opacity: 20%;
      }
    }
  }
  .radio {
    @layer daisyui.component {
      position: relative;
      display: inline-block;
      flex-shrink: 0;
      cursor: pointer;
      appearance: none;
      border-radius: calc(infinity * 1px);
      padding: calc(0.25rem * 1);
      vertical-align: middle;
      border: var(--border) solid var(--input-color, currentColor);
      @supports (color: color-mix(in lab, red, red)) {
        & {
          border: var(--border) solid var(--input-color, color-mix(in srgb, currentColor 20%, #0000));
        }
      }
      box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset;
      --size: calc(var(--size-selector, 0.25rem) * 6);
      width: var(--size);
      height: var(--size);
      color: var(--input-color, currentColor);
      &:before {
        display: block;
        width: 100%;
        height: 100%;
        border-radius: calc(infinity * 1px);
        --tw-content: "";
        content: var(--tw-content);
        background-size: auto, calc(var(--noise) * 100%);
        background-image: none, var(--fx-noise);
      }
      &:focus-visible {
        outline: 2px solid currentColor;
      }
      &:checked, &[aria-checked="true"] {
        border-color: currentcolor;
        background-color: var(--color-base-100);
        @media (prefers-reduced-motion: no-preference) {
          animation: radio 0.2s ease-out;
        }
        &:before {
          background-color: currentcolor;
          box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));
        }
        @media (forced-colors: active) {
          &:before {
            outline-style: var(--tw-outline-style);
            outline-width: 1px;
            outline-offset: calc(1px * -1);
          }
        }
        @media print {
          &:before {
            outline: 0.25rem solid;
            outline-offset: -1rem;
          }
        }
      }
    }
    &:disabled {
      @layer daisyui.modifier {
        cursor: not-allowed;
        opacity: 20%;
      }
    }
  }
  .drawer {
    @layer daisyui.component {
      position: relative;
      display: grid;
      width: 100%;
      grid-auto-columns: max-content auto;
    }
  }
  .card {
    @layer daisyui.component {
      position: relative;
      display: flex;
      flex-direction: column;
      border-radius: var(--radius-box);
      outline-width: 2px;
      transition: outline 0.2s ease-in-out;
      outline: 0 solid #0000;
      outline-offset: 2px;
      &:focus {
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
      }
      &:focus-visible {
        outline-color: currentColor;
      }
      :where(figure:first-child) {
        overflow: hidden;
        border-start-start-radius: inherit;
        border-start-end-radius: inherit;
        border-end-start-radius: unset;
        border-end-end-radius: unset;
      }
      :where(figure:last-child) {
        overflow: hidden;
        border-start-start-radius: unset;
        border-start-end-radius: unset;
        border-end-start-radius: inherit;
        border-end-end-radius: inherit;
      }
      figure {
        display: flex;
        align-items: center;
        justify-content: center;
      }
      &:has(> input:is(input[type="checkbox"], input[type="radio"])) {
        cursor: pointer;
        user-select: none;
      }
      &:has(> :checked) {
        outline: 2px solid currentColor;
      }
    }
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .inset-0\.5 {
    inset: calc(var(--spacing) * 0.5);
  }
  .inset-0\.75 {
    inset: calc(var(--spacing) * 0.75);
  }
  .dropdown-center {
    @layer daisyui.modifier {
      --anchor-h: center;
      :where(.dropdown-content) {
        inset-inline-end: calc(1/2 * 100%);
        translate: 50% 0;
        [dir="rtl"] & {
          translate: -50% 0;
        }
      }
      &.dropdown-left {
        --anchor-h: left;
        --anchor-v: center;
        .dropdown-content {
          top: auto;
          bottom: calc(1/2 * 100%);
          translate: 0 50%;
        }
      }
      &.dropdown-right {
        --anchor-h: right;
        --anchor-v: center;
        .dropdown-content {
          top: auto;
          bottom: calc(1/2 * 100%);
          translate: 0 50%;
        }
      }
    }
  }
  .dropdown-bottom {
    @layer daisyui.modifier {
      --anchor-v: bottom;
      .dropdown-content {
        top: 100%;
        bottom: auto;
        transform-origin: top;
      }
    }
  }
  .-top-6 {
    top: calc(var(--spacing) * -6);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-3 {
    top: calc(var(--spacing) * 3);
  }
  .top-3\/5 {
    top: calc(3/5 * 100%);
  }
  .top-4 {
    top: calc(var(--spacing) * 4);
  }
  .top-4\/9 {
    top: calc(4/9 * 100%);
  }
  .top-5 {
    top: calc(var(--spacing) * 5);
  }
  .-right-6 {
    right: calc(var(--spacing) * -6);
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .right-1\.5 {
    right: calc(var(--spacing) * 1.5);
  }
  .right-3 {
    right: calc(var(--spacing) * 3);
  }
  .right-4 {
    right: calc(var(--spacing) * 4);
  }
  .right-5 {
    right: calc(var(--spacing) * 5);
  }
  .-bottom-6 {
    bottom: calc(var(--spacing) * -6);
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .bottom-4 {
    bottom: calc(var(--spacing) * 4);
  }
  .-left-6 {
    left: calc(var(--spacing) * -6);
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-1\.5 {
    left: calc(var(--spacing) * 1.5);
  }
  .isolate {
    isolation: isolate;
  }
  .-z-1 {
    z-index: calc(1 * -1);
  }
  .cardcontent {
    z-index: 141;
  }
  .z-1 {
    z-index: 1;
  }
  .z-2 {
    z-index: 2;
  }
  .z-10 {
    z-index: 10;
  }
  .z-12 {
    z-index: 12;
  }
  .z-20 {
    z-index: 20;
  }
  .z-50 {
    z-index: 50;
  }
  .z-100 {
    z-index: 100;
  }
  .z-140 {
    z-index: 140;
  }
  .z-200 {
    z-index: 200;
  }
  .z-810 {
    z-index: 810;
  }
  .z-999 {
    z-index: 999;
  }
  .z-9998 {
    z-index: 9998;
  }
  .z-9999 {
    z-index: 9999;
  }
  .z-\[310\] {
    z-index: 310;
  }
  .col-span-1 {
    grid-column: span 1 / span 1;
  }
  .col-span-2 {
    grid-column: span 2 / span 2;
  }
  .col-span-3 {
    grid-column: span 3 / span 3;
  }
  .col-span-4 {
    grid-column: span 4 / span 4;
  }
  .hero {
    @layer daisyui.component {
      display: grid;
      width: 100%;
      place-items: center;
      background-size: cover;
      background-position: center;
      & > * {
        grid-column-start: 1;
        grid-row-start: 1;
      }
    }
  }
  .drawer-content {
    @layer daisyui.component {
      grid-column-start: 2;
      grid-row-start: 1;
      min-width: calc(0.25rem * 0);
    }
  }
  .row-span-1 {
    grid-row: span 1 / span 1;
  }
  .row-span-2 {
    grid-row: span 2 / span 2;
  }
  .row-span-3 {
    grid-row: span 3 / span 3;
  }
  .row-start-1 {
    grid-row-start: 1;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .m-1 {
    margin: calc(var(--spacing) * 1);
  }
  .filter {
    @layer daisyui.component {
      display: flex;
      flex-wrap: wrap;
      input[type="radio"] {
        width: auto;
      }
      input {
        overflow: hidden;
        opacity: 100%;
        scale: 1;
        transition: margin 0.1s, opacity 0.3s, padding 0.3s, border-width 0.1s;
        &:not(:last-child) {
          margin-inline-end: calc(0.25rem * 1);
        }
        &.filter-reset {
          aspect-ratio: 1 / 1;
          &::after {
            content: "×";
          }
        }
      }
      &:not(:has(input:checked:not(.filter-reset))) {
        .filter-reset, input[type="reset"] {
          scale: 0;
          border-width: 0;
          margin-inline: calc(0.25rem * 0);
          width: calc(0.25rem * 0);
          padding-inline: calc(0.25rem * 0);
          opacity: 0%;
        }
      }
      &:has(input:checked:not(.filter-reset)) {
        input:not(:checked, .filter-reset, input[type="reset"]) {
          scale: 0;
          border-width: 0;
          margin-inline: calc(0.25rem * 0);
          width: calc(0.25rem * 0);
          padding-inline: calc(0.25rem * 0);
          opacity: 0%;
        }
      }
    }
  }
  .mx-2 {
    margin-inline: calc(var(--spacing) * 2);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .my-0\.5 {
    margin-block: calc(var(--spacing) * 0.5);
  }
  .my-1 {
    margin-block: calc(var(--spacing) * 1);
  }
  .my-8 {
    margin-block: calc(var(--spacing) * 8);
  }
  .my-11 {
    margin-block: calc(var(--spacing) * 11);
  }
  .my-20 {
    margin-block: calc(var(--spacing) * 20);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-5 {
    margin-top: calc(var(--spacing) * 5);
  }
  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }
  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }
  .mt-10 {
    margin-top: calc(var(--spacing) * 10);
  }
  .mt-16 {
    margin-top: calc(var(--spacing) * 16);
  }
  .mt-20 {
    margin-top: calc(var(--spacing) * 20);
  }
  .mt-28 {
    margin-top: calc(var(--spacing) * 28);
  }
  .breadcrumbs {
    @layer daisyui.component {
      max-width: 100%;
      overflow-x: auto;
      padding-block: calc(0.25rem * 2);
      > menu, > ul, > ol {
        display: flex;
        min-height: min-content;
        align-items: center;
        white-space: nowrap;
        > li {
          display: flex;
          align-items: center;
          > * {
            display: flex;
            cursor: pointer;
            align-items: center;
            gap: calc(0.25rem * 2);
            &:hover {
              @media (hover: hover) {
                text-decoration-line: underline;
              }
            }
            &:focus {
              --tw-outline-style: none;
              outline-style: none;
              @media (forced-colors: active) {
                outline: 2px solid transparent;
                outline-offset: 2px;
              }
            }
            &:focus-visible {
              outline: 2px solid currentColor;
              outline-offset: 2px;
            }
          }
          & + *:before {
            content: "";
            margin-right: calc(0.25rem * 3);
            margin-left: calc(0.25rem * 2);
            display: block;
            height: calc(0.25rem * 1.5);
            width: calc(0.25rem * 1.5);
            opacity: 40%;
            rotate: 45deg;
            border-top: 1px solid;
            border-right: 1px solid;
            background-color: #0000;
          }
          [dir="rtl"] & + *:before {
            rotate: -135deg;
          }
        }
      }
    }
  }
  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }
  .-mb-12 {
    margin-bottom: calc(var(--spacing) * -12);
  }
  .mb-0 {
    margin-bottom: calc(var(--spacing) * 0);
  }
  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }
  .mb-1\.5 {
    margin-bottom: calc(var(--spacing) * 1.5);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .mb-5 {
    margin-bottom: calc(var(--spacing) * 5);
  }
  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }
  .mb-7 {
    margin-bottom: calc(var(--spacing) * 7);
  }
  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }
  .mb-9 {
    margin-bottom: calc(var(--spacing) * 9);
  }
  .mb-10 {
    margin-bottom: calc(var(--spacing) * 10);
  }
  .mb-12 {
    margin-bottom: calc(var(--spacing) * 12);
  }
  .mb-16 {
    margin-bottom: calc(var(--spacing) * 16);
  }
  .mb-20 {
    margin-bottom: calc(var(--spacing) * 20);
  }
  .mb-24 {
    margin-bottom: calc(var(--spacing) * 24);
  }
  .mb-28 {
    margin-bottom: calc(var(--spacing) * 28);
  }
  .mb-36 {
    margin-bottom: calc(var(--spacing) * 36);
  }
  .ml-1 {
    margin-left: calc(var(--spacing) * 1);
  }
  .carousel-item {
    @layer daisyui.component {
      box-sizing: content-box;
      display: flex;
      flex: none;
      scroll-snap-align: start;
    }
  }
  .footer {
    @layer daisyui.component {
      display: grid;
      width: 100%;
      grid-auto-flow: row;
      place-items: start;
      column-gap: calc(0.25rem * 4);
      row-gap: calc(0.25rem * 10);
      font-size: 0.875rem;
      line-height: 1.25rem;
      & > * {
        display: grid;
        place-items: start;
        gap: calc(0.25rem * 2);
      }
      &.footer-center {
        grid-auto-flow: column dense;
        place-items: center;
        text-align: center;
        & > * {
          place-items: center;
        }
      }
    }
  }
  .fab-flower {
    @layer daisyui.component {
      display: grid;
      --position: 0rem;
      > *:nth-child(-n + 2) {
        --position: 0rem;
      }
      > * {
        grid-area: 1/1;
        --degree: 180deg;
        --flip-degree: calc(180deg - var(--degree));
        transform: translateX(calc(cos(var(--degree)) * var(--position))) translateY(calc(sin(var(--degree)) * calc(-1 * var(--position))));
        [dir="rtl"] & {
          transform: translateX(calc(cos(var(--flip-degree)) * var(--position))) translateY(calc(sin(var(--flip-degree)) * calc(-1 * var(--position))));
        }
      }
      > :nth-child(n + 7) {
        display: none;
      }
      &:has(:nth-child(3)) {
        --position: 140%;
        > :nth-child(3) {
          --degree: 135deg;
        }
      }
      &:has(:nth-child(4)) {
        --position: 140%;
        > :nth-child(3) {
          --degree: 165deg;
        }
        > :nth-child(4) {
          --degree: 105deg;
        }
      }
      &:has(:nth-child(5)) {
        --position: 180%;
        > :nth-child(3) {
          --degree: 180deg;
        }
        > :nth-child(4) {
          --degree: 135deg;
        }
        > :nth-child(5) {
          --degree: 90deg;
        }
      }
      &:has(:nth-child(6)) {
        --position: 220%;
        > :nth-child(3) {
          --degree: 180deg;
        }
        > :nth-child(4) {
          --degree: 150deg;
        }
        > :nth-child(5) {
          --degree: 120deg;
        }
        > :nth-child(6) {
          --degree: 90deg;
        }
      }
    }
  }
  .carousel {
    @layer daisyui.component {
      display: inline-flex;
      overflow-x: scroll;
      scroll-snap-type: x mandatory;
      scrollbar-width: none;
      @media (prefers-reduced-motion: no-preference) {
        scroll-behavior: smooth;
      }
      &::-webkit-scrollbar {
        display: none;
      }
    }
  }
  .prose {
    :root & {
      --tw-prose-body: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        & {
          --tw-prose-body: color-mix(in oklab, var(--color-base-content) 80%, #0000);
        }
      }
      --tw-prose-headings: var(--color-base-content);
      --tw-prose-lead: var(--color-base-content);
      --tw-prose-links: var(--color-base-content);
      --tw-prose-bold: var(--color-base-content);
      --tw-prose-counters: var(--color-base-content);
      --tw-prose-bullets: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        & {
          --tw-prose-bullets: color-mix(in oklab, var(--color-base-content) 50%, #0000);
        }
      }
      --tw-prose-hr: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        & {
          --tw-prose-hr: color-mix(in oklab, var(--color-base-content) 20%, #0000);
        }
      }
      --tw-prose-quotes: var(--color-base-content);
      --tw-prose-quote-borders: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        & {
          --tw-prose-quote-borders: color-mix(in oklab, var(--color-base-content) 20%, #0000);
        }
      }
      --tw-prose-captions: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        & {
          --tw-prose-captions: color-mix(in oklab, var(--color-base-content) 50%, #0000);
        }
      }
      --tw-prose-code: var(--color-base-content);
      --tw-prose-pre-code: var(--color-neutral-content);
      --tw-prose-pre-bg: var(--color-neutral);
      --tw-prose-th-borders: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        & {
          --tw-prose-th-borders: color-mix(in oklab, var(--color-base-content) 50%, #0000);
        }
      }
      --tw-prose-td-borders: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        & {
          --tw-prose-td-borders: color-mix(in oklab, var(--color-base-content) 20%, #0000);
        }
      }
      --tw-prose-kbd: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        & {
          --tw-prose-kbd: color-mix(in oklab, var(--color-base-content) 80%, #0000);
        }
      }
      :where(code):not(pre > code) {
        background-color: var(--color-base-200);
        border-radius: var(--radius-selector);
        border: var(--border) solid var(--color-base-300);
        padding-inline: 0.5em;
        font-weight: inherit;
        &:before, &:after {
          display: none;
        }
      }
    }
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline-block {
    display: inline-block;
  }
  .inline-flex {
    display: inline-flex;
  }
  .slider {
    aspect-ratio: var(--slider-mobile-aspect);
    clip-path: var(--slider-mobile-clip);
    @media (width >= 48rem) {
      aspect-ratio: var(--slider-desktop-aspect);
      clip-path: var(--slider-desktop-clip);
    }
  }
  .aspect-square {
    aspect-ratio: 1 / 1;
  }
  .btn-circle {
    @layer daisyui.modifier {
      border-radius: calc(infinity * 1px);
      padding-inline: calc(0.25rem * 0);
      width: var(--size);
      height: var(--size);
    }
  }
  .size-6 {
    width: calc(var(--spacing) * 6);
    height: calc(var(--spacing) * 6);
  }
  .size-8 {
    width: calc(var(--spacing) * 8);
    height: calc(var(--spacing) * 8);
  }
  .size-fit {
    width: fit-content;
    height: fit-content;
  }
  .size-full {
    width: 100%;
    height: 100%;
  }
  .h-1 {
    height: calc(var(--spacing) * 1);
  }
  .h-2 {
    height: calc(var(--spacing) * 2);
  }
  .h-3 {
    height: calc(var(--spacing) * 3);
  }
  .h-5 {
    height: calc(var(--spacing) * 5);
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-7 {
    height: calc(var(--spacing) * 7);
  }
  .h-9 {
    height: calc(var(--spacing) * 9);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-12 {
    height: calc(var(--spacing) * 12);
  }
  .h-15 {
    height: calc(var(--spacing) * 15);
  }
  .h-20 {
    height: calc(var(--spacing) * 20);
  }
  .h-64 {
    height: calc(var(--spacing) * 64);
  }
  .h-\[381px\] {
    height: 381px;
  }
  .h-\[455px\] {
    height: 455px;
  }
  .h-\[480px\] {
    height: 480px;
  }
  .h-\[500px\] {
    height: 500px;
  }
  .h-\[551px\] {
    height: 551px;
  }
  .h-\[581px\] {
    height: 581px;
  }
  .h-\[704px\] {
    height: 704px;
  }
  .h-\[754px\] {
    height: 754px;
  }
  .h-\[900px\] {
    height: 900px;
  }
  .h-auto {
    height: auto;
  }
  .h-full {
    height: 100%;
  }
  .max-h-svw {
    max-height: 100svw;
  }
  .min-h-96 {
    min-height: calc(var(--spacing) * 96);
  }
  .min-h-\[152px\] {
    min-height: 152px;
  }
  .min-h-\[232px\] {
    min-height: 232px;
  }
  .min-h-\[320px\] {
    min-height: 320px;
  }
  .min-h-\[430px\] {
    min-height: 430px;
  }
  .min-h-\[530px\] {
    min-height: 530px;
  }
  .min-h-\[560px\] {
    min-height: 560px;
  }
  .min-h-\[600px\] {
    min-height: 600px;
  }
  .min-h-\[630px\] {
    min-height: 630px;
  }
  .min-h-\[700px\] {
    min-height: 700px;
  }
  .min-h-\[750px\] {
    min-height: 750px;
  }
  .min-h-\[1600px\] {
    min-height: 1600px;
  }
  .min-h-\[1700px\] {
    min-height: 1700px;
  }
  .min-h-full {
    min-height: 100%;
  }
  .w-1 {
    width: calc(var(--spacing) * 1);
  }
  .w-1\/2 {
    width: calc(1/2 * 100%);
  }
  .w-1\/3 {
    width: calc(1/3 * 100%);
  }
  .w-2 {
    width: calc(var(--spacing) * 2);
  }
  .w-3 {
    width: calc(var(--spacing) * 3);
  }
  .w-5 {
    width: calc(var(--spacing) * 5);
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-7 {
    width: calc(var(--spacing) * 7);
  }
  .w-10 {
    width: calc(var(--spacing) * 10);
  }
  .w-12 {
    width: calc(var(--spacing) * 12);
  }
  .w-15 {
    width: calc(var(--spacing) * 15);
  }
  .w-20 {
    width: calc(var(--spacing) * 20);
  }
  .w-\[90\%\] {
    width: 90%;
  }
  .w-\[140px\] {
    width: 140px;
  }
  .w-\[454px\] {
    width: 454px;
  }
  .w-auto {
    width: auto;
  }
  .w-fit {
    width: fit-content;
  }
  .w-full {
    width: 100%;
  }
  .w-max {
    width: max-content;
  }
  .w-screen {
    width: 100vw;
  }
  .max-w-2xl {
    max-width: var(--container-2xl);
  }
  .max-w-4xl {
    max-width: var(--container-4xl);
  }
  .max-w-7xl {
    max-width: var(--container-7xl);
  }
  .max-w-8xl {
    max-width: var(--container-8xl);
  }
  .max-w-\[96svw\] {
    max-width: 96svw;
  }
  .max-w-full {
    max-width: 100%;
  }
  .max-w-none {
    max-width: none;
  }
  .max-w-screen {
    max-width: 100vw;
  }
  .max-w-svw {
    max-width: 100svw;
  }
  .flex-1 {
    flex: 1;
  }
  .flex-none {
    flex: none;
  }
  .shrink-0 {
    flex-shrink: 0;
  }
  .grow {
    flex-grow: 1;
  }
  .origin-right {
    transform-origin: 100%;
  }
  .btn {
    background-color: color-mix(in srgb, #fff 8%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      & {
        background-color: color-mix(in oklab, var(--color-white) 8%, transparent);
      }
    }
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
    color: color-mix(in srgb, #000 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      & {
        color: color-mix(in oklab, var(--color-black) 40%, transparent);
      }
    }
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
    outline-offset: 2px;
    outline-color: color-mix(in srgb, #fff 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      & {
        outline-color: color-mix(in oklab, var(--color-white) 15%, transparent);
      }
    }
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 200ms;
    transition-duration: 200ms;
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 105%;
        --tw-scale-y: 105%;
        --tw-scale-z: 105%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
        background-color: color-mix(in srgb, #fff 30%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          & {
            background-color: color-mix(in oklab, var(--color-white) 30%, transparent);
          }
        }
        color: color-mix(in srgb, #fff 70%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          & {
            color: color-mix(in oklab, var(--color-white) 70%, transparent);
          }
        }
        outline-style: var(--tw-outline-style);
        outline-width: 2px;
        outline-offset: 2px;
        outline-color: color-mix(in srgb, #fff 15%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          & {
            outline-color: color-mix(in oklab, var(--color-white) 15%, transparent);
          }
        }
      }
    }
    &:focus {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
      outline-offset: 2px;
      outline-color: color-mix(in srgb, #fff 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        & {
          outline-color: color-mix(in oklab, var(--color-white) 20%, transparent);
        }
      }
    }
    &:active {
      --tw-scale-x: 95%;
      --tw-scale-y: 95%;
      --tw-scale-z: 95%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
      background-color: color-mix(in srgb, #fff 12%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        & {
          background-color: color-mix(in oklab, var(--color-white) 12%, transparent);
        }
      }
      color: color-mix(in srgb, #fff 60%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        & {
          color: color-mix(in oklab, var(--color-white) 60%, transparent);
        }
      }
      outline-style: var(--tw-outline-style);
      outline-width: 3px;
      outline-offset: 4px;
      outline-color: color-mix(in srgb, #fff 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        & {
          outline-color: color-mix(in oklab, var(--color-white) 25%, transparent);
        }
      }
    }
    &:disabled {
      cursor: not-allowed;
      background-color: color-mix(in srgb, #fff 2%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        & {
          background-color: color-mix(in oklab, var(--color-white) 2%, transparent);
        }
      }
      color: color-mix(in srgb, #000 12%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        & {
          color: color-mix(in oklab, var(--color-black) 12%, transparent);
        }
      }
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
      outline-offset: 3px;
      outline-color: color-mix(in srgb, #fff 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        & {
          outline-color: color-mix(in oklab, var(--color-white) 5%, transparent);
        }
      }
    }
  }
  .scale-75 {
    --tw-scale-x: 75%;
    --tw-scale-y: 75%;
    --tw-scale-z: 75%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .transform-gpu {
    transform: translateZ(0) var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .stopped {
    animation: none !important;
  }
  .link {
    @layer daisyui.component {
      cursor: pointer;
      text-decoration-line: underline;
      &:focus {
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
      }
      &:focus-visible {
        outline: 2px solid currentColor;
        outline-offset: 2px;
      }
    }
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .resize {
    resize: both;
  }
  .resize-none {
    resize: none;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  .grid-rows-3 {
    grid-template-rows: repeat(3, minmax(0, 1fr));
  }
  .grid-rows-15 {
    grid-template-rows: repeat(15, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-row {
    flex-direction: row;
  }
  .flex-row-reverse {
    flex-direction: row-reverse;
  }
  .place-content-between {
    place-content: space-between;
  }
  .content-between {
    align-content: space-between;
  }
  .content-center {
    align-content: center;
  }
  .content-stretch {
    align-content: stretch;
  }
  .items-center {
    align-items: center;
  }
  .items-end {
    align-items: flex-end;
  }
  .items-start {
    align-items: flex-start;
  }
  .items-stretch {
    align-items: stretch;
  }
  .justify-baseline {
    justify-content: baseline;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .justify-stretch {
    justify-content: stretch;
  }
  .gap-0 {
    gap: calc(var(--spacing) * 0);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .gap-12 {
    gap: calc(var(--spacing) * 12);
  }
  .gap-16 {
    gap: calc(var(--spacing) * 16);
  }
  .gap-24 {
    gap: calc(var(--spacing) * 24);
  }
  .space-y-3 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-4 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-6 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-8 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .gap-x-2 {
    column-gap: calc(var(--spacing) * 2);
  }
  .gap-x-4 {
    column-gap: calc(var(--spacing) * 4);
  }
  .gap-x-6 {
    column-gap: calc(var(--spacing) * 6);
  }
  .gap-y-3 {
    row-gap: calc(var(--spacing) * 3);
  }
  .gap-y-12 {
    row-gap: calc(var(--spacing) * 12);
  }
  .self-center {
    align-self: center;
  }
  .self-end {
    align-self: flex-end;
  }
  .self-start {
    align-self: flex-start;
  }
  .self-stretch {
    align-self: stretch;
  }
  .overflow-clip {
    overflow: clip;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-x-clip {
    overflow-x: clip;
  }
  .squircle-3xl {
    --squircle-border-radius: var(--squircle-border-radius-3xl);
    --squircle-border-top-left-radius: var(--squircle-border-radius-3xl);
    --squircle-border-top-right-radius: var(--squircle-border-radius-3xl);
    --squircle-border-bottom-right-radius: var(--squircle-border-radius-3xl);
    --squircle-border-bottom-left-radius: var(--squircle-border-radius-3xl);
    @supports not (background: paint(squircle)) {
      border-radius: var(--squircle-border-radius-3xl);
    }
  }
  .squircle-4xl {
    --squircle-border-radius: var(--squircle-border-radius-4xl);
    --squircle-border-top-left-radius: var(--squircle-border-radius-4xl);
    --squircle-border-top-right-radius: var(--squircle-border-radius-4xl);
    --squircle-border-bottom-right-radius: var(--squircle-border-radius-4xl);
    --squircle-border-bottom-left-radius: var(--squircle-border-radius-4xl);
    @supports not (background: paint(squircle)) {
      border-radius: var(--squircle-border-radius-4xl);
    }
  }
  .squircle-5xl {
    --squircle-border-radius: var(--squircle-border-radius-5xl);
    --squircle-border-top-left-radius: var(--squircle-border-radius-5xl);
    --squircle-border-top-right-radius: var(--squircle-border-radius-5xl);
    --squircle-border-bottom-right-radius: var(--squircle-border-radius-5xl);
    --squircle-border-bottom-left-radius: var(--squircle-border-radius-5xl);
    @supports not (background: paint(squircle)) {
      border-radius: var(--squircle-border-radius-5xl);
    }
  }
  .squircle-6xl {
    --squircle-border-radius: var(--squircle-border-radius-6xl);
    --squircle-border-top-left-radius: var(--squircle-border-radius-6xl);
    --squircle-border-top-right-radius: var(--squircle-border-radius-6xl);
    --squircle-border-bottom-right-radius: var(--squircle-border-radius-6xl);
    --squircle-border-bottom-left-radius: var(--squircle-border-radius-6xl);
    @supports not (background: paint(squircle)) {
      border-radius: var(--squircle-border-radius-6xl);
    }
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-0 {
    border-style: var(--tw-border-style);
    border-width: 0px;
  }
  .border-t-2 {
    border-top-style: var(--tw-border-style);
    border-top-width: 2px;
  }
  .border-r {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-l-2 {
    border-left-style: var(--tw-border-style);
    border-left-width: 2px;
  }
  .border-\(--bg\) {
    border-color: var(--bg);
  }
  .border-\(--danger-2\) {
    border-color: var(--danger-2);
  }
  .border-\(--primary\) {
    border-color: var(--primary);
  }
  .border-\(--secondary\) {
    border-color: var(--secondary);
  }
  .border-\(--secondary-3\) {
    border-color: var(--secondary-3);
  }
  .border-\[\#AAD9FF\] {
    border-color: #AAD9FF;
  }
  .border-gray-300 {
    border-color: var(--color-gray-300);
  }
  .bg-\(--card\) {
    background-color: var(--card);
  }
  .bg-bg-light {
    background-color: var(--bg-light);
  }
  .bg-black\/40 {
    background-color: color-mix(in srgb, #000 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      & {
        background-color: color-mix(in oklab, var(--color-black) 40%, transparent);
      }
    }
  }
  .bg-blue-50 {
    background-color: var(--color-blue-50);
  }
  .bg-blue-600 {
    background-color: var(--color-blue-600);
  }
  .bg-card {
    background-color: var(--card);
  }
  .bg-gray-50 {
    background-color: var(--color-gray-50);
  }
  .bg-gray-200 {
    background-color: var(--color-gray-200);
  }
  .bg-surface {
    background-color: var(--surface);
  }
  .bg-transparent {
    background-color: transparent;
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-white\/8 {
    background-color: color-mix(in srgb, #fff 8%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      & {
        background-color: color-mix(in oklab, var(--color-white) 8%, transparent);
      }
    }
  }
  .bg-white\/18 {
    background-color: color-mix(in srgb, #fff 18%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      & {
        background-color: color-mix(in oklab, var(--color-white) 18%, transparent);
      }
    }
  }
  .bg-white\/20 {
    background-color: color-mix(in srgb, #fff 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      & {
        background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
      }
    }
  }
  .bg-linear-to-br {
    --tw-gradient-position: to bottom right;
    @supports (background-image: linear-gradient(in lab, red, red)) {
      --tw-gradient-position: to bottom right in oklab;
    }
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-linear-to-r {
    --tw-gradient-position: to right;
    @supports (background-image: linear-gradient(in lab, red, red)) {
      --tw-gradient-position: to right in oklab;
    }
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-r {
    --tw-gradient-position: to right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .from-\(--primary-2\) {
    --tw-gradient-from: var(--primary-2);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-\[\#bedffb\] {
    --tw-gradient-from: #bedffb;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-\[var\(--surface\)\] {
    --tw-gradient-from: var(--surface);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-secondary {
    --tw-gradient-from: var(--color-secondary);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-0\% {
    --tw-gradient-from-position: 0%;
  }
  .to-\(--secondary-2\) {
    --tw-gradient-to: var(--secondary-2);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-\[\#84b7e1\] {
    --tw-gradient-to: #84b7e1;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-\[var\(--bg\)\/0\] {
    --tw-gradient-to: var(--bg)/0;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-accent {
    --tw-gradient-to: var(--color-accent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-70\% {
    --tw-gradient-to-position: 70%;
  }
  .squircle-mask {
    :where(&) {
      mask-image: paint(squircle);
      --squircle-border-radius: 0;
      --squircle-border-top-left-radius: 0;
      --squircle-border-top-right-radius: 0;
      --squircle-border-bottom-right-radius: 0;
      --squircle-border-bottom-left-radius: 0;
      --squircle-border-smoothing: 0.6;
      --squircle-border-top-left-smoothing: 0.6;
      --squircle-border-top-right-smoothing: 0.6;
      --squircle-border-bottom-right-smoothing: 0.6;
      --squircle-border-bottom-left-smoothing: 0.6;
      --squircle-border-width: 0;
      --squircle-border-color: unset;
      --squircle-background-color: unset;
      --squircle-mode: mask-image;
      @supports not (mask-image: paint(squircle)) {
        mask-repeat: no-repeat;
      }
    }
  }
  .bg-cover {
    background-size: cover;
  }
  .bg-center {
    background-position: center;
  }
  .squircle {
    :where(&) {
      background: paint(squircle);
      --squircle-border-radius: 0;
      --squircle-border-top-left-radius: 0;
      --squircle-border-top-right-radius: 0;
      --squircle-border-bottom-right-radius: 0;
      --squircle-border-bottom-left-radius: 0;
      --squircle-border-smoothing: 0.6;
      --squircle-border-top-left-smoothing: 0.6;
      --squircle-border-top-right-smoothing: 0.6;
      --squircle-border-bottom-right-smoothing: 0.6;
      --squircle-border-bottom-left-smoothing: 0.6;
      --squircle-border-width: 0;
      --squircle-border-color: unset;
      --squircle-background-color: unset;
      --squircle-mode: background;
      @supports not (background: paint(squircle)) {
        background-repeat: no-repeat;
      }
    }
  }
  .bg-no-repeat {
    background-repeat: no-repeat;
  }
  .stroke-current {
    stroke: currentcolor;
  }
  .object-contain {
    object-fit: contain;
  }
  .object-cover {
    object-fit: cover;
  }
  .object-\[66\%\] {
    object-position: 66%;
  }
  .p-0\.5 {
    padding: calc(var(--spacing) * 0.5);
  }
  .p-0\.75 {
    padding: calc(var(--spacing) * 0.75);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .p-7 {
    padding: calc(var(--spacing) * 7);
  }
  .p-8 {
    padding: calc(var(--spacing) * 8);
  }
  .p-16 {
    padding: calc(var(--spacing) * 16);
  }
  .content {
    padding-inline: calc(var(--spacing) * 3);
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 10);
    }
  }
  .px-0 {
    padding-inline: calc(var(--spacing) * 0);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-5 {
    padding-inline: calc(var(--spacing) * 5);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .px-8 {
    padding-inline: calc(var(--spacing) * 8);
  }
  .px-10 {
    padding-inline: calc(var(--spacing) * 10);
  }
  .px-\[2\.2px\] {
    padding-inline: 2.2px;
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-2\.5 {
    padding-block: calc(var(--spacing) * 2.5);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }
  .py-7 {
    padding-block: calc(var(--spacing) * 7);
  }
  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }
  .py-10 {
    padding-block: calc(var(--spacing) * 10);
  }
  .py-16 {
    padding-block: calc(var(--spacing) * 16);
  }
  .py-20 {
    padding-block: calc(var(--spacing) * 20);
  }
  .py-24 {
    padding-block: calc(var(--spacing) * 24);
  }
  .py-28 {
    padding-block: calc(var(--spacing) * 28);
  }
  .py-36 {
    padding-block: calc(var(--spacing) * 36);
  }
  .py-40 {
    padding-block: calc(var(--spacing) * 40);
  }
  .py-\[2px\] {
    padding-block: 2px;
  }
  .pt-8 {
    padding-top: calc(var(--spacing) * 8);
  }
  .pt-36 {
    padding-top: calc(var(--spacing) * 36);
  }
  .pr-4 {
    padding-right: calc(var(--spacing) * 4);
  }
  .pr-10 {
    padding-right: calc(var(--spacing) * 10);
  }
  .pb-8 {
    padding-bottom: calc(var(--spacing) * 8);
  }
  .pb-20 {
    padding-bottom: calc(var(--spacing) * 20);
  }
  .pb-24 {
    padding-bottom: calc(var(--spacing) * 24);
  }
  .pl-2 {
    padding-left: calc(var(--spacing) * 2);
  }
  .pl-4 {
    padding-left: calc(var(--spacing) * 4);
  }
  .text-center {
    text-align: center;
  }
  .text-left {
    text-align: left;
  }
  .text-right {
    text-align: right;
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
  .text-8xl {
    font-size: var(--text-8xl);
    line-height: var(--tw-leading, var(--text-8xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .text-\[1\.7rem\] {
    font-size: 1.7rem;
  }
  .leading-8 {
    --tw-leading: calc(var(--spacing) * 8);
    line-height: calc(var(--spacing) * 8);
  }
  .leading-loose {
    --tw-leading: var(--leading-loose);
    line-height: var(--leading-loose);
  }
  .leading-relaxed {
    --tw-leading: var(--leading-relaxed);
    line-height: var(--leading-relaxed);
  }
  .leading-tight {
    --tw-leading: var(--leading-tight);
    line-height: var(--leading-tight);
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-extrabold {
    --tw-font-weight: var(--font-weight-extrabold);
    font-weight: var(--font-weight-extrabold);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-normal {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .tracking-tight {
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
  }
  .text-\[\#aad9ff\] {
    color: #aad9ff;
  }
  .text-black {
    color: var(--color-black);
  }
  .text-black\/30 {
    color: color-mix(in srgb, #000 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      & {
        color: color-mix(in oklab, var(--color-black) 30%, transparent);
      }
    }
  }
  .text-black\/70 {
    color: color-mix(in srgb, #000 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      & {
        color: color-mix(in oklab, var(--color-black) 70%, transparent);
      }
    }
  }
  .text-black\/80 {
    color: color-mix(in srgb, #000 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      & {
        color: color-mix(in oklab, var(--color-black) 80%, transparent);
      }
    }
  }
  .text-black\/90 {
    color: color-mix(in srgb, #000 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      & {
        color: color-mix(in oklab, var(--color-black) 90%, transparent);
      }
    }
  }
  .text-gray-100 {
    color: var(--color-gray-100);
  }
  .text-gray-400 {
    color: var(--color-gray-400);
  }
  .text-gray-500 {
    color: var(--color-gray-500);
  }
  .text-gray-600 {
    color: var(--color-gray-600);
  }
  .text-gray-800 {
    color: var(--color-gray-800);
  }
  .text-gray-900 {
    color: var(--color-gray-900);
  }
  .text-slate-600 {
    color: var(--color-slate-600);
  }
  .text-white {
    color: var(--color-white);
  }
  .text-white\/50 {
    color: color-mix(in srgb, #fff 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      & {
        color: color-mix(in oklab, var(--color-white) 50%, transparent);
      }
    }
  }
  .text-white\/60 {
    color: color-mix(in srgb, #fff 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      & {
        color: color-mix(in oklab, var(--color-white) 60%, transparent);
      }
    }
  }
  .text-white\/65 {
    color: color-mix(in srgb, #fff 65%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      & {
        color: color-mix(in oklab, var(--color-white) 65%, transparent);
      }
    }
  }
  .text-white\/70 {
    color: color-mix(in srgb, #fff 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      & {
        color: color-mix(in oklab, var(--color-white) 70%, transparent);
      }
    }
  }
  .text-white\/90 {
    color: color-mix(in srgb, #fff 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      & {
        color: color-mix(in oklab, var(--color-white) 90%, transparent);
      }
    }
  }
  .text-white\/95 {
    color: color-mix(in srgb, #fff 95%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      & {
        color: color-mix(in oklab, var(--color-white) 95%, transparent);
      }
    }
  }
  .uppercase {
    text-transform: uppercase;
  }
  .antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  .opacity-0 {
    opacity: 0%;
  }
  .opacity-65 {
    opacity: 65%;
  }
  .opacity-70 {
    opacity: 70%;
  }
  .opacity-80 {
    opacity: 80%;
  }
  .opacity-85 {
    opacity: 85%;
  }
  .opacity-90 {
    opacity: 90%;
  }
  .opacity-95 {
    opacity: 95%;
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-none {
    --tw-shadow: 0 0 #0000;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-xl {
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .inset-shadow-sm {
    --tw-inset-shadow: inset 0 2px 4px var(--tw-inset-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .inset-ring-1 {
    --tw-inset-ring-shadow: inset 0 0 0 1px var(--tw-inset-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-black\/20 {
    --tw-shadow-color: color-mix(in srgb, #000 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      & {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-black) 20%, transparent) var(--tw-shadow-alpha), transparent);
      }
    }
  }
  .inset-shadow-black\/30 {
    --tw-inset-shadow-color: color-mix(in srgb, #000 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      & {
        --tw-inset-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-black) 30%, transparent) var(--tw-inset-shadow-alpha), transparent);
      }
    }
  }
  .inset-shadow-black\/40 {
    --tw-inset-shadow-color: color-mix(in srgb, #000 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      & {
        --tw-inset-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-black) 40%, transparent) var(--tw-inset-shadow-alpha), transparent);
      }
    }
  }
  .inset-ring-\(--bg\) {
    --tw-inset-ring-color: var(--bg);
  }
  .inset-ring-\(--danger\) {
    --tw-inset-ring-color: var(--danger);
  }
  .inset-ring-\(--primary-2\) {
    --tw-inset-ring-color: var(--primary-2);
  }
  .inset-ring-\(--secondary-2\) {
    --tw-inset-ring-color: var(--secondary-2);
  }
  .inset-ring-\(--warning-2\) {
    --tw-inset-ring-color: var(--warning-2);
  }
  .inset-ring-\[\#99d1ff\] {
    --tw-inset-ring-color: #99d1ff;
  }
  .outline-1 {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .outline-white\/35 {
    outline-color: color-mix(in srgb, #fff 35%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      & {
        outline-color: color-mix(in oklab, var(--color-white) 35%, transparent);
      }
    }
  }
  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .blur-sm {
    --tw-blur: blur(var(--blur-sm));
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .backdrop-blur-2xl {
    --tw-backdrop-blur: blur(var(--blur-2xl));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-blur-md {
    --tw-backdrop-blur: blur(var(--blur-md));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .delay-0 {
    transition-delay: 0ms;
  }
  .delay-75 {
    transition-delay: 75ms;
  }
  .delay-150 {
    transition-delay: 150ms;
  }
  .duration-75 {
    --tw-duration: 75ms;
    transition-duration: 75ms;
  }
  .duration-100 {
    --tw-duration: 100ms;
    transition-duration: 100ms;
  }
  .duration-150 {
    --tw-duration: 150ms;
    transition-duration: 150ms;
  }
  .duration-250 {
    --tw-duration: 250ms;
    transition-duration: 250ms;
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .duration-350 {
    --tw-duration: 350ms;
    transition-duration: 350ms;
  }
  .duration-500 {
    --tw-duration: 500ms;
    transition-duration: 500ms;
  }
  .duration-600 {
    --tw-duration: 600ms;
    transition-duration: 600ms;
  }
  .ease-in {
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .ease-out {
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
  }
  .will-change-auto {
    will-change: auto;
  }
  .will-change-transform {
    will-change: transform;
  }
  .contain-layout-style {
    contain: layout style;
  }
  .squircle-smooth-lg {
    --squircle-border-smoothing: var(--squircle-border-smoothing-lg);
    --squircle-border-top-left-smoothing: var(--squircle-border-smoothing-lg);
    --squircle-border-top-right-smoothing: var(--squircle-border-smoothing-lg);
    --squircle-border-bottom-right-smoothing: var(--squircle-border-smoothing-lg);
    --squircle-border-bottom-left-smoothing: var(--squircle-border-smoothing-lg);
  }
  .squircle-smooth-md {
    --squircle-border-smoothing: var(--squircle-border-smoothing-md);
    --squircle-border-top-left-smoothing: var(--squircle-border-smoothing-md);
    --squircle-border-top-right-smoothing: var(--squircle-border-smoothing-md);
    --squircle-border-bottom-right-smoothing: var(--squircle-border-smoothing-md);
    --squircle-border-bottom-left-smoothing: var(--squircle-border-smoothing-md);
  }
  .squircle-smooth-xl {
    --squircle-border-smoothing: var(--squircle-border-smoothing-xl);
    --squircle-border-top-left-smoothing: var(--squircle-border-smoothing-xl);
    --squircle-border-top-right-smoothing: var(--squircle-border-smoothing-xl);
    --squircle-border-bottom-right-smoothing: var(--squircle-border-smoothing-xl);
    --squircle-border-bottom-left-smoothing: var(--squircle-border-smoothing-xl);
  }
  .btn-lg {
    @layer daisyui.modifier {
      --fontsize: 1.125rem;
      --btn-p: 1.25rem;
      --size: calc(var(--size-field, 0.25rem) * 12);
    }
  }
  .btn-error {
    @layer daisyui.modifier.color {
      --btn-color: var(--color-error);
      --btn-fg: var(--color-error-content);
    }
  }
  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }
  .backface-hidden {
    backface-visibility: hidden;
  }
  .bg-gradient-main {
    background: linear-gradient(135deg, var(--primary), var(--secondary));
  }
  .cloth-corner {
    clip-path: polygon( 4.167037rem 0rem, calc(100% - 4.167037rem) 0rem, calc(100% - 3.917025rem) 0.000347rem, calc(100% - 3.667025rem) 0.002717rem, calc(100% - 3.4171rem) 0.009112rem, calc(100% - 3.167409rem) 0.02153rem, calc(100% - 2.918255rem) 0.041962rem, calc(100% - 2.670135rem) 0.072374rem, calc(100% - 2.423782rem) 0.114689rem, calc(100% - 2.180214rem) 0.170762rem, calc(100% - 1.940767rem) 0.242331rem, calc(100% - 1.707134rem) 0.330972rem, calc(100% - 1.481384rem) 0.43803rem, calc(100% - 1.265977rem) 0.564537rem, calc(100% - 1.063758rem) 0.711127rem, calc(100% - 0.877925rem) 0.877925rem, calc(100% - 0.711127rem) 1.063758rem, calc(100% - 0.564537rem) 1.265977rem, calc(100% - 0.43803rem) 1.481384rem, calc(100% - 0.330972rem) 1.707134rem, calc(100% - 0.242331rem) 1.940767rem, calc(100% - 0.170762rem) 2.180214rem, calc(100% - 0.114689rem) 2.423782rem, calc(100% - 0.072374rem) 2.670135rem, calc(100% - 0.041962rem) 2.918255rem, calc(100% - 0.02153rem) 3.167409rem, calc(100% - 0.009112rem) 3.4171rem, calc(100% - 0.002717rem) 3.667025rem, calc(100% - 0.000347rem) 3.917025rem, 100% 4.167037rem, 100% calc(100% - 4.167037rem), calc(100% - 0.000347rem) calc(100% - 3.917025rem), calc(100% - 0.002717rem) calc(100% - 3.667025rem), calc(100% - 0.009112rem) calc(100% - 3.4171rem), calc(100% - 0.02153rem) calc(100% - 3.167409rem), calc(100% - 0.041962rem) calc(100% - 2.918255rem), calc(100% - 0.072374rem) calc(100% - 2.670135rem), calc(100% - 0.114689rem) calc(100% - 2.423782rem), calc(100% - 0.170762rem) calc(100% - 2.180214rem), calc(100% - 0.242331rem) calc(100% - 1.940767rem), calc(100% - 0.330972rem) calc(100% - 1.707134rem), calc(100% - 0.43803rem) calc(100% - 1.481384rem), calc(100% - 0.564537rem) calc(100% - 1.265977rem), calc(100% - 0.711127rem) calc(100% - 1.063758rem), calc(100% - 0.877925rem) calc(100% - 0.877925rem), calc(100% - 1.063758rem) calc(100% - 0.711127rem), calc(100% - 1.265977rem) calc(100% - 0.564537rem), calc(100% - 1.481384rem) calc(100% - 0.43803rem), calc(100% - 1.707134rem) calc(100% - 0.330972rem), calc(100% - 1.940767rem) calc(100% - 0.242331rem), calc(100% - 2.180214rem) calc(100% - 0.170762rem), calc(100% - 2.423782rem) calc(100% - 0.114689rem), calc(100% - 2.670135rem) calc(100% - 0.072374rem), calc(100% - 2.918255rem) calc(100% - 0.041962rem), calc(100% - 3.167409rem) calc(100% - 0.02153rem), calc(100% - 3.4171rem) calc(100% - 0.009112rem), calc(100% - 3.667025rem) calc(100% - 0.002717rem), calc(100% - 3.917025rem) calc(100% - 0.000347rem), calc(100% - 4.167037rem) 100%, 4.167037rem 100%, 3.917025rem calc(100% - 0.000347rem), 3.667025rem calc(100% - 0.002717rem), 3.4171rem calc(100% - 0.009112rem), 3.167409rem calc(100% - 0.02153rem), 2.918255rem calc(100% - 0.041962rem), 2.670135rem calc(100% - 0.072374rem), 2.423782rem calc(100% - 0.114689rem), 2.180214rem calc(100% - 0.170762rem), 1.940767rem calc(100% - 0.242331rem), 1.707134rem calc(100% - 0.330972rem), 1.481384rem calc(100% - 0.43803rem), 1.265977rem calc(100% - 0.564537rem), 1.063758rem calc(100% - 0.711127rem), 0.877925rem calc(100% - 0.877925rem), 0.711127rem calc(100% - 1.063758rem), 0.564537rem calc(100% - 1.265977rem), 0.43803rem calc(100% - 1.481384rem), 0.330972rem calc(100% - 1.707134rem), 0.242331rem calc(100% - 1.940767rem), 0.170762rem calc(100% - 2.180214rem), 0.114689rem calc(100% - 2.423782rem), 0.072374rem calc(100% - 2.670135rem), 0.041962rem calc(100% - 2.918255rem), 0.02153rem calc(100% - 3.167409rem), 0.009112rem calc(100% - 3.4171rem), 0.002717rem calc(100% - 3.667025rem), 0.000347rem calc(100% - 3.917025rem), 0rem calc(100% - 4.167037rem), 0rem 4.167037rem, 0.000347rem 3.917025rem, 0.002717rem 3.667025rem, 0.009112rem 3.4171rem, 0.02153rem 3.167409rem, 0.041962rem 2.918255rem, 0.072374rem 2.670135rem, 0.114689rem 2.423782rem, 0.170762rem 2.180214rem, 0.242331rem 1.940767rem, 0.330972rem 1.707134rem, 0.43803rem 1.481384rem, 0.564537rem 1.265977rem, 0.711127rem 1.063758rem, 0.877925rem 0.877925rem, 1.063758rem 0.711127rem, 1.265977rem 0.564537rem, 1.481384rem 0.43803rem, 1.707134rem 0.330972rem, 1.940767rem 0.242331rem, 2.180214rem 0.170762rem, 2.423782rem 0.114689rem, 2.670135rem 0.072374rem, 2.918255rem 0.041962rem, 3.167409rem 0.02153rem, 3.4171rem 0.009112rem, 3.667025rem 0.002717rem, 3.917025rem 0.000347rem, 4.167037rem 0rem );
  }
  .paused {
    animation-play-state: paused;
  }
  .squircle-amber-100 {
    --squircle-background-color: oklch(96.2% 0.059 95.617);
    @supports (color: color-mix(in lab, red, red)) {
      & {
        --squircle-background-color: color-mix(in oklab, var(--color-amber-100) var(--squircle-opacity, 100%), transparent);
      }
    }
  }
  .squircle-border {
    --squircle-border-width: 1px;
  }
  .squircle-border-1 {
    --squircle-border-width: 1;
  }
  .squircle-border-amber-200 {
    --squircle-border-color: oklch(92.4% 0.12 95.746);
    @supports (color: color-mix(in lab, red, red)) {
      & {
        --squircle-border-color: color-mix(in oklab, var(--color-amber-200) var(--squircle-border-opacity, 100%), transparent);
      }
    }
  }
  .squircle-border-secondary {
    --squircle-border-color: var(--color-secondary);
    @supports (color: color-mix(in lab, red, red)) {
      & {
        --squircle-border-color: color-mix(in oklab, var(--color-secondary) var(--squircle-border-opacity, 100%), transparent);
      }
    }
  }
  .transform-3d {
    transform-style: preserve-3d;
  }
  .group-hover\:mb-0 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        margin-bottom: calc(var(--spacing) * 0);
      }
    }
  }
  .group-hover\:mb-3\.5 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        margin-bottom: calc(var(--spacing) * 3.5);
      }
    }
  }
  .group-hover\:mb-6 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        margin-bottom: calc(var(--spacing) * 6);
      }
    }
  }
  .group-hover\:scale-105 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-scale-x: 105%;
        --tw-scale-y: 105%;
        --tw-scale-z: 105%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .group-hover\:scale-110 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-scale-x: 110%;
        --tw-scale-y: 110%;
        --tw-scale-z: 110%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .group-hover\:bg-white {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-color: var(--color-white);
      }
    }
  }
  .group-hover\:bg-white\/8 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #fff 8%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          & {
            background-color: color-mix(in oklab, var(--color-white) 8%, transparent);
          }
        }
      }
    }
  }
  .group-hover\:px-6 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        padding-inline: calc(var(--spacing) * 6);
      }
    }
  }
  .group-hover\:text-black {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-black);
      }
    }
  }
  .group-hover\:opacity-100 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .group-hover\:blur-sm {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-blur: blur(var(--blur-sm));
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
      }
    }
  }
  .group-hover\:transition-all {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        transition-property: all;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
      }
    }
  }
  .group-hover\:delay-500 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        transition-delay: 500ms;
      }
    }
  }
  .group-hover\:will-change-transform {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        will-change: transform;
      }
    }
  }
  .hover\:-translate-y-1 {
    &:hover {
      @media (hover: hover) {
        --tw-translate-y: calc(var(--spacing) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .hover\:scale-95 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 95%;
        --tw-scale-y: 95%;
        --tw-scale-z: 95%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:scale-105 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 105%;
        --tw-scale-y: 105%;
        --tw-scale-z: 105%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:scale-110 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 110%;
        --tw-scale-y: 110%;
        --tw-scale-z: 110%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:transform-gpu {
    &:hover {
      @media (hover: hover) {
        transform: translateZ(0) var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
      }
    }
  }
  .hover\:bg-blue-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-600);
      }
    }
  }
  .hover\:text-blue-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-600);
      }
    }
  }
  .hover\:text-white {
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .hover\:delay-200 {
    &:hover {
      @media (hover: hover) {
        transition-delay: 200ms;
      }
    }
  }
  .hover\:will-change-transform {
    &:hover {
      @media (hover: hover) {
        will-change: transform;
      }
    }
  }
  .focus\:border-transparent {
    &:focus {
      border-color: transparent;
    }
  }
  .focus\:text-white {
    &:focus {
      color: var(--color-white);
    }
  }
  .focus\:ring-2 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-blue-600 {
    &:focus {
      --tw-ring-color: var(--color-blue-600);
    }
  }
  .focus\:outline-none {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .sm\:col-span-1 {
    @media (width >= 40rem) {
      grid-column: span 1 / span 1;
    }
  }
  .sm\:col-start-1 {
    @media (width >= 40rem) {
      grid-column-start: 1;
    }
  }
  .sm\:col-start-2 {
    @media (width >= 40rem) {
      grid-column-start: 2;
    }
  }
  .sm\:col-start-3 {
    @media (width >= 40rem) {
      grid-column-start: 3;
    }
  }
  .sm\:row-start-1 {
    @media (width >= 40rem) {
      grid-row-start: 1;
    }
  }
  .sm\:row-start-3 {
    @media (width >= 40rem) {
      grid-row-start: 3;
    }
  }
  .sm\:row-start-4 {
    @media (width >= 40rem) {
      grid-row-start: 4;
    }
  }
  .sm\:mt-2\.5 {
    @media (width >= 40rem) {
      margin-top: calc(var(--spacing) * 2.5);
    }
  }
  .sm\:mt-28 {
    @media (width >= 40rem) {
      margin-top: calc(var(--spacing) * 28);
    }
  }
  .sm\:mb-2 {
    @media (width >= 40rem) {
      margin-bottom: calc(var(--spacing) * 2);
    }
  }
  .sm\:mb-9 {
    @media (width >= 40rem) {
      margin-bottom: calc(var(--spacing) * 9);
    }
  }
  .sm\:block {
    @media (width >= 40rem) {
      display: block;
    }
  }
  .sm\:h-\[581px\] {
    @media (width >= 40rem) {
      height: 581px;
    }
  }
  .sm\:h-\[754px\] {
    @media (width >= 40rem) {
      height: 754px;
    }
  }
  .sm\:min-h-\[280px\] {
    @media (width >= 40rem) {
      min-height: 280px;
    }
  }
  .sm\:w-1\/2 {
    @media (width >= 40rem) {
      width: calc(1/2 * 100%);
    }
  }
  .sm\:scale-100 {
    @media (width >= 40rem) {
      --tw-scale-x: 100%;
      --tw-scale-y: 100%;
      --tw-scale-z: 100%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
  .sm\:grid-cols-2 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .sm\:grid-cols-3 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .sm\:grid-rows-5 {
    @media (width >= 40rem) {
      grid-template-rows: repeat(5, minmax(0, 1fr));
    }
  }
  .sm\:flex-col {
    @media (width >= 40rem) {
      flex-direction: column;
    }
  }
  .sm\:flex-row {
    @media (width >= 40rem) {
      flex-direction: row;
    }
  }
  .sm\:gap-4 {
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 4);
    }
  }
  .sm\:gap-8 {
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 8);
    }
  }
  .sm\:gap-x-8 {
    @media (width >= 40rem) {
      column-gap: calc(var(--spacing) * 8);
    }
  }
  .sm\:p-16 {
    @media (width >= 40rem) {
      padding: calc(var(--spacing) * 16);
    }
  }
  .sm\:px-0 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 0);
    }
  }
  .sm\:px-6 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 6);
    }
  }
  .sm\:px-12 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 12);
    }
  }
  .sm\:py-16 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 16);
    }
  }
  .sm\:py-32 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 32);
    }
  }
  .sm\:pr-6 {
    @media (width >= 40rem) {
      padding-right: calc(var(--spacing) * 6);
    }
  }
  .sm\:text-5xl {
    @media (width >= 40rem) {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }
  .sm\:text-base {
    @media (width >= 40rem) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }
  .sm\:text-xl {
    @media (width >= 40rem) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .sm\:tracking-tight {
    @media (width >= 40rem) {
      --tw-tracking: var(--tracking-tight);
      letter-spacing: var(--tracking-tight);
    }
  }
  .md\:col-span-1 {
    @media (width >= 48rem) {
      grid-column: span 1 / span 1;
    }
  }
  .md\:col-span-2 {
    @media (width >= 48rem) {
      grid-column: span 2 / span 2;
    }
  }
  .md\:col-span-3 {
    @media (width >= 48rem) {
      grid-column: span 3 / span 3;
    }
  }
  .md\:col-span-4 {
    @media (width >= 48rem) {
      grid-column: span 4 / span 4;
    }
  }
  .md\:col-start-1 {
    @media (width >= 48rem) {
      grid-column-start: 1;
    }
  }
  .md\:col-start-2 {
    @media (width >= 48rem) {
      grid-column-start: 2;
    }
  }
  .md\:col-start-3 {
    @media (width >= 48rem) {
      grid-column-start: 3;
    }
  }
  .md\:row-span-1 {
    @media (width >= 48rem) {
      grid-row: span 1 / span 1;
    }
  }
  .md\:row-span-2 {
    @media (width >= 48rem) {
      grid-row: span 2 / span 2;
    }
  }
  .md\:row-start-1 {
    @media (width >= 48rem) {
      grid-row-start: 1;
    }
  }
  .md\:row-start-2 {
    @media (width >= 48rem) {
      grid-row-start: 2;
    }
  }
  .md\:-mt-8 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * -8);
    }
  }
  .md\:-mt-10 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * -10);
    }
  }
  .md\:mt-20 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * 20);
    }
  }
  .md\:mb-10 {
    @media (width >= 48rem) {
      margin-bottom: calc(var(--spacing) * 10);
    }
  }
  .md\:mb-12 {
    @media (width >= 48rem) {
      margin-bottom: calc(var(--spacing) * 12);
    }
  }
  .md\:mb-20 {
    @media (width >= 48rem) {
      margin-bottom: calc(var(--spacing) * 20);
    }
  }
  .md\:block {
    @media (width >= 48rem) {
      display: block;
    }
  }
  .md\:flex {
    @media (width >= 48rem) {
      display: flex;
    }
  }
  .md\:inline {
    @media (width >= 48rem) {
      display: inline;
    }
  }
  .md\:h-\[560px\] {
    @media (width >= 48rem) {
      height: 560px;
    }
  }
  .md\:h-\[670px\] {
    @media (width >= 48rem) {
      height: 670px;
    }
  }
  .md\:h-max {
    @media (width >= 48rem) {
      height: max-content;
    }
  }
  .md\:max-h-\[650px\] {
    @media (width >= 48rem) {
      max-height: 650px;
    }
  }
  .md\:min-h-\[250px\] {
    @media (width >= 48rem) {
      min-height: 250px;
    }
  }
  .md\:min-h-\[600px\] {
    @media (width >= 48rem) {
      min-height: 600px;
    }
  }
  .md\:min-h-\[750px\] {
    @media (width >= 48rem) {
      min-height: 750px;
    }
  }
  .md\:min-h-\[1140px\] {
    @media (width >= 48rem) {
      min-height: 1140px;
    }
  }
  .md\:w-1\/2 {
    @media (width >= 48rem) {
      width: calc(1/2 * 100%);
    }
  }
  .md\:w-full {
    @media (width >= 48rem) {
      width: 100%;
    }
  }
  .md\:max-w-4xl {
    @media (width >= 48rem) {
      max-width: var(--container-4xl);
    }
  }
  .md\:min-w-\[286px\] {
    @media (width >= 48rem) {
      min-width: 286px;
    }
  }
  .md\:grid-cols-2 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-3 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-4 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-7 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(7, minmax(0, 1fr));
    }
  }
  .md\:grid-rows-1 {
    @media (width >= 48rem) {
      grid-template-rows: repeat(1, minmax(0, 1fr));
    }
  }
  .md\:grid-rows-2 {
    @media (width >= 48rem) {
      grid-template-rows: repeat(2, minmax(0, 1fr));
    }
  }
  .md\:flex-row {
    @media (width >= 48rem) {
      flex-direction: row;
    }
  }
  .md\:content-between {
    @media (width >= 48rem) {
      align-content: space-between;
    }
  }
  .md\:items-center {
    @media (width >= 48rem) {
      align-items: center;
    }
  }
  .md\:justify-between {
    @media (width >= 48rem) {
      justify-content: space-between;
    }
  }
  .md\:justify-end {
    @media (width >= 48rem) {
      justify-content: flex-end;
    }
  }
  .md\:gap-5 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 5);
    }
  }
  .md\:gap-6 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 6);
    }
  }
  .md\:gap-8 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 8);
    }
  }
  .md\:gap-24 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 24);
    }
  }
  .md\:gap-x-3 {
    @media (width >= 48rem) {
      column-gap: calc(var(--spacing) * 3);
    }
  }
  .md\:squircle-6xl {
    @media (width >= 48rem) {
      --squircle-border-radius: var(--squircle-border-radius-6xl);
      --squircle-border-top-left-radius: var(--squircle-border-radius-6xl);
      --squircle-border-top-right-radius: var(--squircle-border-radius-6xl);
      --squircle-border-bottom-right-radius: var(--squircle-border-radius-6xl);
      --squircle-border-bottom-left-radius: var(--squircle-border-radius-6xl);
      @supports not (background: paint(squircle)) {
        border-radius: var(--squircle-border-radius-6xl);
      }
    }
  }
  .md\:px-0 {
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 0);
    }
  }
  .md\:px-6 {
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 6);
    }
  }
  .md\:px-7 {
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 7);
    }
  }
  .md\:px-12 {
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 12);
    }
  }
  .md\:py-4 {
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 4);
    }
  }
  .md\:py-8 {
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 8);
    }
  }
  .md\:py-10 {
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 10);
    }
  }
  .md\:py-12 {
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 12);
    }
  }
  .md\:py-16 {
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 16);
    }
  }
  .md\:py-24 {
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 24);
    }
  }
  .md\:py-32 {
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 32);
    }
  }
  .md\:pr-8 {
    @media (width >= 48rem) {
      padding-right: calc(var(--spacing) * 8);
    }
  }
  .md\:pb-32 {
    @media (width >= 48rem) {
      padding-bottom: calc(var(--spacing) * 32);
    }
  }
  .md\:pb-36 {
    @media (width >= 48rem) {
      padding-bottom: calc(var(--spacing) * 36);
    }
  }
  .md\:text-left {
    @media (width >= 48rem) {
      text-align: left;
    }
  }
  .md\:text-4xl {
    @media (width >= 48rem) {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }
  .md\:text-5xl {
    @media (width >= 48rem) {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }
  .md\:text-\[2\.7rem\] {
    @media (width >= 48rem) {
      font-size: 2.7rem;
    }
  }
  .lg\:col-span-2 {
    @media (width >= 64rem) {
      grid-column: span 2 / span 2;
    }
  }
  .lg\:mt-6 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 6);
    }
  }
  .lg\:mb-16 {
    @media (width >= 64rem) {
      margin-bottom: calc(var(--spacing) * 16);
    }
  }
  .lg\:mb-22 {
    @media (width >= 64rem) {
      margin-bottom: calc(var(--spacing) * 22);
    }
  }
  .lg\:mb-28 {
    @media (width >= 64rem) {
      margin-bottom: calc(var(--spacing) * 28);
    }
  }
  .lg\:ml-10 {
    @media (width >= 64rem) {
      margin-left: calc(var(--spacing) * 10);
    }
  }
  .lg\:block {
    @media (width >= 64rem) {
      display: block;
    }
  }
  .lg\:hidden {
    @media (width >= 64rem) {
      display: none;
    }
  }
  .lg\:min-w-max {
    @media (width >= 64rem) {
      min-width: max-content;
    }
  }
  .lg\:grid-cols-2 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-3 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-4 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .lg\:px-8 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 8);
    }
  }
  .lg\:py-16 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 16);
    }
  }
  .lg\:py-36 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 36);
    }
  }
  .lg\:py-40 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 40);
    }
  }
  .lg\:pl-10 {
    @media (width >= 64rem) {
      padding-left: calc(var(--spacing) * 10);
    }
  }
  .lg\:text-4xl {
    @media (width >= 64rem) {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }
  .lg\:text-5xl {
    @media (width >= 64rem) {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }
  .lg\:text-lg {
    @media (width >= 64rem) {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  .xl\:text-6xl {
    @media (width >= 80rem) {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
  }
}
@layer base {
  @font-face {
    font-family: 'Satoshi';
    src: url('../fonts/Satoshi-Variable.woff2') format('woff2');
    font-weight: 300 900;
    font-display: swap;
    font-style: normal;
  }
  html {
    font-family: var(--font-display);
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    text-rendering: optimizeLegibility;
    font-synthesis: none;
    -webkit-overflow-scrolling: auto;
    scrollbar-width: none;
    overscroll-behavior: auto;
    &::-webkit-scrollbar {
      display: none;
    }
  }
  body {
    background-image: linear-gradient(90deg, var(--bg), var(--bg-2));
    background-color: var(--bg-0);
    color: var(--text);
  }
  h1 {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
    --tw-leading: calc(var(--spacing) * 10);
    line-height: calc(var(--spacing) * 10);
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    @media (width >= 40rem) {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
    @media (width >= 48rem) {
      --tw-leading: calc(var(--spacing) * 16);
      line-height: calc(var(--spacing) * 16);
    }
    @media (width >= 64rem) {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
  }
  h2 {
    margin-bottom: calc(var(--spacing) * 7);
    font-size: 1.7rem;
    --tw-leading: var(--leading-tight);
    line-height: var(--leading-tight);
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    @media (width >= 48rem) {
      font-size: 2.7rem;
    }
  }
  h3 {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
    --tw-leading: var(--leading-tight);
    line-height: var(--leading-tight);
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    @media (width >= 64rem) {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
  }
  h6 {
    margin-bottom: calc(var(--spacing) * 4);
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
  }
  h4 {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  h5 {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  span {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--text-2);
  }
}
@layer components {
  section {
    position: relative;
    margin-inline: auto;
    margin-bottom: calc(var(--spacing) * 24);
    max-width: 100svw;
    overflow-x: clip;
    padding-inline: calc(var(--spacing) * 2);
    padding-block: calc(var(--spacing) * 6);
    @media (width >= 48rem) {
      margin-bottom: calc(var(--spacing) * 32);
    }
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 16);
    }
  }
  .wrapper {
    position: relative;
    margin-inline: auto;
    max-width: var(--container-7xl);
  }
  .section-gradient {
    background: linear-gradient(130deg, var(--primary) -40%, var(--secondary) 100%);
  }
  .button-inner {
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 2.5);
    background: linear-gradient(135deg, var(--primary), var(--secondary));
    clip-path: polygon(1.5em 0em, calc(100% - 1.5em) 0em, calc(100% - 1.416003em) 0.00011em, calc(100% - 1.33201em) 0.00084em, calc(100% - 1.248038em) 0.002768em, calc(100% - 1.164129em) 0.006475em, calc(100% - 1.080363em) 0.012536em, calc(100% - 0.996867em) 0.021521em, calc(100% - 0.913832em) 0.033994em, calc(100% - 0.831515em) 0.050498em, calc(100% - 0.750258em) 0.071555em, calc(100% - 0.67049em) 0.097649em, calc(100% - 0.592738em) 0.129213em, calc(100% - 0.517633em) 0.166612em, calc(100% - 0.445907em) 0.210125em, calc(100% - 0.378394em) 0.259919em, calc(100% - 0.316025em) 0.316025em, calc(100% - 0.259919em) 0.378394em, calc(100% - 0.210125em) 0.445907em, calc(100% - 0.166612em) 0.517633em, calc(100% - 0.129213em) 0.592738em, calc(100% - 0.097649em) 0.67049em, calc(100% - 0.071555em) 0.750258em, calc(100% - 0.050498em) 0.831515em, calc(100% - 0.033994em) 0.913832em, calc(100% - 0.021521em) 0.996867em, calc(100% - 0.012536em) 1.080363em, calc(100% - 0.006475em) 1.164129em, calc(100% - 0.002768em) 1.248038em, calc(100% - 0.00084em) 1.33201em, calc(100% - 0.00011em) 1.416003em, 100% 1.5em, 100% calc(100% - 1.5em), calc(100% - 0.00011em) calc(100% - 1.416003em), calc(100% - 0.00084em) calc(100% - 1.33201em), calc(100% - 0.002768em) calc(100% - 1.248038em), calc(100% - 0.006475em) calc(100% - 1.164129em), calc(100% - 0.012536em) calc(100% - 1.080363em), calc(100% - 0.021521em) calc(100% - 0.996867em), calc(100% - 0.033994em) calc(100% - 0.913832em), calc(100% - 0.050498em) calc(100% - 0.831515em), calc(100% - 0.071555em) calc(100% - 0.750258em), calc(100% - 0.097649em) calc(100% - 0.67049em), calc(100% - 0.129213em) calc(100% - 0.592738em), calc(100% - 0.166612em) calc(100% - 0.517633em), calc(100% - 0.210125em) calc(100% - 0.445907em), calc(100% - 0.259919em) calc(100% - 0.378394em), calc(100% - 0.316025em) calc(100% - 0.316025em), calc(100% - 0.378394em) calc(100% - 0.259919em), calc(100% - 0.445907em) calc(100% - 0.210125em), calc(100% - 0.517633em) calc(100% - 0.166612em), calc(100% - 0.592738em) calc(100% - 0.129213em), calc(100% - 0.67049em) calc(100% - 0.097649em), calc(100% - 0.750258em) calc(100% - 0.071555em), calc(100% - 0.831515em) calc(100% - 0.050498em), calc(100% - 0.913832em) calc(100% - 0.033994em), calc(100% - 0.996867em) calc(100% - 0.021521em), calc(100% - 1.080363em) calc(100% - 0.012536em), calc(100% - 1.164129em) calc(100% - 0.006475em), calc(100% - 1.248038em) calc(100% - 0.002768em), calc(100% - 1.33201em) calc(100% - 0.00084em), calc(100% - 1.416003em) calc(100% - 0.00011em), calc(100% - 1.5em) 100%, 1.5em 100%, 1.416003em calc(100% - 0.00011em), 1.33201em calc(100% - 0.00084em), 1.248038em calc(100% - 0.002768em), 1.164129em calc(100% - 0.006475em), 1.080363em calc(100% - 0.012536em), 0.996867em calc(100% - 0.021521em), 0.913832em calc(100% - 0.033994em), 0.831515em calc(100% - 0.050498em), 0.750258em calc(100% - 0.071555em), 0.67049em calc(100% - 0.097649em), 0.592738em calc(100% - 0.129213em), 0.517633em calc(100% - 0.166612em), 0.445907em calc(100% - 0.210125em), 0.378394em calc(100% - 0.259919em), 0.316025em calc(100% - 0.316025em), 0.259919em calc(100% - 0.378394em), 0.210125em calc(100% - 0.445907em), 0.166612em calc(100% - 0.517633em), 0.129213em calc(100% - 0.592738em), 0.097649em calc(100% - 0.67049em), 0.071555em calc(100% - 0.750258em), 0.050498em calc(100% - 0.831515em), 0.033994em calc(100% - 0.913832em), 0.021521em calc(100% - 0.996867em), 0.012536em calc(100% - 1.080363em), 0.006475em calc(100% - 1.164129em), 0.002768em calc(100% - 1.248038em), 0.00084em calc(100% - 1.33201em), 0.00011em calc(100% - 1.416003em), 0em calc(100% - 1.5em), 0em 1.5em, 0.00011em 1.416003em, 0.00084em 1.33201em, 0.002768em 1.248038em, 0.006475em 1.164129em, 0.012536em 1.080363em, 0.021521em 0.996867em, 0.033994em 0.913832em, 0.050498em 0.831515em, 0.071555em 0.750258em, 0.097649em 0.67049em, 0.129213em 0.592738em, 0.166612em 0.517633em, 0.210125em 0.445907em, 0.259919em 0.378394em, 0.316025em 0.316025em, 0.378394em 0.259919em, 0.445907em 0.210125em, 0.517633em 0.166612em, 0.592738em 0.129213em, 0.67049em 0.097649em, 0.750258em 0.071555em, 0.831515em 0.050498em, 0.913832em 0.033994em, 0.996867em 0.021521em, 1.080363em 0.012536em, 1.164129em 0.006475em, 1.248038em 0.002768em, 1.33201em 0.00084em, 1.416003em 0.00011em, 1.5em 0em);
  }
  .button-slider {
    visibility: hidden;
    z-index: 100;
    cursor: pointer;
    align-self: flex-end;
    padding: calc(var(--spacing) * 0.5);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--color-black);
    clip-path: polygon(1.5em 0em, calc(100% - 1.5em) 0em, calc(100% - 1.416003em) 0.00011em, calc(100% - 1.33201em) 0.00084em, calc(100% - 1.248038em) 0.002768em, calc(100% - 1.164129em) 0.006475em, calc(100% - 1.080363em) 0.012536em, calc(100% - 0.996867em) 0.021521em, calc(100% - 0.913832em) 0.033994em, calc(100% - 0.831515em) 0.050498em, calc(100% - 0.750258em) 0.071555em, calc(100% - 0.67049em) 0.097649em, calc(100% - 0.592738em) 0.129213em, calc(100% - 0.517633em) 0.166612em, calc(100% - 0.445907em) 0.210125em, calc(100% - 0.378394em) 0.259919em, calc(100% - 0.316025em) 0.316025em, calc(100% - 0.259919em) 0.378394em, calc(100% - 0.210125em) 0.445907em, calc(100% - 0.166612em) 0.517633em, calc(100% - 0.129213em) 0.592738em, calc(100% - 0.097649em) 0.67049em, calc(100% - 0.071555em) 0.750258em, calc(100% - 0.050498em) 0.831515em, calc(100% - 0.033994em) 0.913832em, calc(100% - 0.021521em) 0.996867em, calc(100% - 0.012536em) 1.080363em, calc(100% - 0.006475em) 1.164129em, calc(100% - 0.002768em) 1.248038em, calc(100% - 0.00084em) 1.33201em, calc(100% - 0.00011em) 1.416003em, 100% 1.5em, 100% calc(100% - 1.5em), calc(100% - 0.00011em) calc(100% - 1.416003em), calc(100% - 0.00084em) calc(100% - 1.33201em), calc(100% - 0.002768em) calc(100% - 1.248038em), calc(100% - 0.006475em) calc(100% - 1.164129em), calc(100% - 0.012536em) calc(100% - 1.080363em), calc(100% - 0.021521em) calc(100% - 0.996867em), calc(100% - 0.033994em) calc(100% - 0.913832em), calc(100% - 0.050498em) calc(100% - 0.831515em), calc(100% - 0.071555em) calc(100% - 0.750258em), calc(100% - 0.097649em) calc(100% - 0.67049em), calc(100% - 0.129213em) calc(100% - 0.592738em), calc(100% - 0.166612em) calc(100% - 0.517633em), calc(100% - 0.210125em) calc(100% - 0.445907em), calc(100% - 0.259919em) calc(100% - 0.378394em), calc(100% - 0.316025em) calc(100% - 0.316025em), calc(100% - 0.378394em) calc(100% - 0.259919em), calc(100% - 0.445907em) calc(100% - 0.210125em), calc(100% - 0.517633em) calc(100% - 0.166612em), calc(100% - 0.592738em) calc(100% - 0.129213em), calc(100% - 0.67049em) calc(100% - 0.097649em), calc(100% - 0.750258em) calc(100% - 0.071555em), calc(100% - 0.831515em) calc(100% - 0.050498em), calc(100% - 0.913832em) calc(100% - 0.033994em), calc(100% - 0.996867em) calc(100% - 0.021521em), calc(100% - 1.080363em) calc(100% - 0.012536em), calc(100% - 1.164129em) calc(100% - 0.006475em), calc(100% - 1.248038em) calc(100% - 0.002768em), calc(100% - 1.33201em) calc(100% - 0.00084em), calc(100% - 1.416003em) calc(100% - 0.00011em), calc(100% - 1.5em) 100%, 1.5em 100%, 1.416003em calc(100% - 0.00011em), 1.33201em calc(100% - 0.00084em), 1.248038em calc(100% - 0.002768em), 1.164129em calc(100% - 0.006475em), 1.080363em calc(100% - 0.012536em), 0.996867em calc(100% - 0.021521em), 0.913832em calc(100% - 0.033994em), 0.831515em calc(100% - 0.050498em), 0.750258em calc(100% - 0.071555em), 0.67049em calc(100% - 0.097649em), 0.592738em calc(100% - 0.129213em), 0.517633em calc(100% - 0.166612em), 0.445907em calc(100% - 0.210125em), 0.378394em calc(100% - 0.259919em), 0.316025em calc(100% - 0.316025em), 0.259919em calc(100% - 0.378394em), 0.210125em calc(100% - 0.445907em), 0.166612em calc(100% - 0.517633em), 0.129213em calc(100% - 0.592738em), 0.097649em calc(100% - 0.67049em), 0.071555em calc(100% - 0.750258em), 0.050498em calc(100% - 0.831515em), 0.033994em calc(100% - 0.913832em), 0.021521em calc(100% - 0.996867em), 0.012536em calc(100% - 1.080363em), 0.006475em calc(100% - 1.164129em), 0.002768em calc(100% - 1.248038em), 0.00084em calc(100% - 1.33201em), 0.00011em calc(100% - 1.416003em), 0em calc(100% - 1.5em), 0em 1.5em, 0.00011em 1.416003em, 0.00084em 1.33201em, 0.002768em 1.248038em, 0.006475em 1.164129em, 0.012536em 1.080363em, 0.021521em 0.996867em, 0.033994em 0.913832em, 0.050498em 0.831515em, 0.071555em 0.750258em, 0.097649em 0.67049em, 0.129213em 0.592738em, 0.166612em 0.517633em, 0.210125em 0.445907em, 0.259919em 0.378394em, 0.316025em 0.316025em, 0.378394em 0.259919em, 0.445907em 0.210125em, 0.517633em 0.166612em, 0.592738em 0.129213em, 0.67049em 0.097649em, 0.750258em 0.071555em, 0.831515em 0.050498em, 0.913832em 0.033994em, 0.996867em 0.021521em, 1.080363em 0.012536em, 1.164129em 0.006475em, 1.248038em 0.002768em, 1.33201em 0.00084em, 1.416003em 0.00011em, 1.5em 0em);
    @media (width >= 48rem) {
      visibility: visible;
    }
    @media (width >= 48rem) {
      align-self: flex-start;
    }
    background: radial-gradient(circle at 15% 20%, rgba(187,169,246,0.45), transparent 40%), radial-gradient(circle at 90% 80%, rgba(192,114,209,0.35), transparent 40%), linear-gradient(135deg, var(--primary-2), var(--secondary-2));
  }
  .heroslider-content {
    z-index: 2;
    display: flex;
    flex-direction: column;
    gap: calc(var(--spacing) * 3);
    padding-inline: calc(var(--spacing) * 3);
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 10);
    }
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 6);
    }
    @media (width >= 48rem) {
      width: calc(2/3 * 100%);
    }
  }
  .slider-subtitle {
    width: calc(2/3 * 100%);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-leading: var(--leading-relaxed);
    line-height: var(--leading-relaxed);
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: color-mix(in srgb, #fff 85%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      & {
        color: color-mix(in oklab, var(--color-white) 85%, transparent);
      }
    }
    @media (width >= 40rem) {
      --tw-font-weight: var(--font-weight-normal);
      font-weight: var(--font-weight-normal);
    }
    @media (width >= 48rem) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }
  header {
    position: relative;
    isolation: isolate;
    z-index: 99999;
    margin-inline: auto;
    max-width: var(--container-5xl);
    padding-inline: calc(var(--spacing) * 2);
    padding-block: calc(var(--spacing) * 4);
    @media (width >= 48rem) {
      margin-bottom: calc(var(--spacing) * 0);
    }
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 6);
    }
  }
  .dropdown-content li, .dropdown-content a {
    pointer-events: auto;
  }
  .dropdown>a:hover {
    transform: none;
  }
  .dropdown>a {
    position: relative;
    z-index: 10;
  }
  .dropdown-content {
    z-index: 5;
  }
  .cloth-button, .cloth-button-border, .cloth-menu, .marquee-item, .testim-item {
    clip-path: polygon(1.5em 0em, calc(100% - 1.5em) 0em, calc(100% - 1.416003em) 0.00011em, calc(100% - 1.33201em) 0.00084em, calc(100% - 1.248038em) 0.002768em, calc(100% - 1.164129em) 0.006475em, calc(100% - 1.080363em) 0.012536em, calc(100% - 0.996867em) 0.021521em, calc(100% - 0.913832em) 0.033994em, calc(100% - 0.831515em) 0.050498em, calc(100% - 0.750258em) 0.071555em, calc(100% - 0.67049em) 0.097649em, calc(100% - 0.592738em) 0.129213em, calc(100% - 0.517633em) 0.166612em, calc(100% - 0.445907em) 0.210125em, calc(100% - 0.378394em) 0.259919em, calc(100% - 0.316025em) 0.316025em, calc(100% - 0.259919em) 0.378394em, calc(100% - 0.210125em) 0.445907em, calc(100% - 0.166612em) 0.517633em, calc(100% - 0.129213em) 0.592738em, calc(100% - 0.097649em) 0.67049em, calc(100% - 0.071555em) 0.750258em, calc(100% - 0.050498em) 0.831515em, calc(100% - 0.033994em) 0.913832em, calc(100% - 0.021521em) 0.996867em, calc(100% - 0.012536em) 1.080363em, calc(100% - 0.006475em) 1.164129em, calc(100% - 0.002768em) 1.248038em, calc(100% - 0.00084em) 1.33201em, calc(100% - 0.00011em) 1.416003em, 100% 1.5em, 100% calc(100% - 1.5em), calc(100% - 0.00011em) calc(100% - 1.416003em), calc(100% - 0.00084em) calc(100% - 1.33201em), calc(100% - 0.002768em) calc(100% - 1.248038em), calc(100% - 0.006475em) calc(100% - 1.164129em), calc(100% - 0.012536em) calc(100% - 1.080363em), calc(100% - 0.021521em) calc(100% - 0.996867em), calc(100% - 0.033994em) calc(100% - 0.913832em), calc(100% - 0.050498em) calc(100% - 0.831515em), calc(100% - 0.071555em) calc(100% - 0.750258em), calc(100% - 0.097649em) calc(100% - 0.67049em), calc(100% - 0.129213em) calc(100% - 0.592738em), calc(100% - 0.166612em) calc(100% - 0.517633em), calc(100% - 0.210125em) calc(100% - 0.445907em), calc(100% - 0.259919em) calc(100% - 0.378394em), calc(100% - 0.316025em) calc(100% - 0.316025em), calc(100% - 0.378394em) calc(100% - 0.259919em), calc(100% - 0.445907em) calc(100% - 0.210125em), calc(100% - 0.517633em) calc(100% - 0.166612em), calc(100% - 0.592738em) calc(100% - 0.129213em), calc(100% - 0.67049em) calc(100% - 0.097649em), calc(100% - 0.750258em) calc(100% - 0.071555em), calc(100% - 0.831515em) calc(100% - 0.050498em), calc(100% - 0.913832em) calc(100% - 0.033994em), calc(100% - 0.996867em) calc(100% - 0.021521em), calc(100% - 1.080363em) calc(100% - 0.012536em), calc(100% - 1.164129em) calc(100% - 0.006475em), calc(100% - 1.248038em) calc(100% - 0.002768em), calc(100% - 1.33201em) calc(100% - 0.00084em), calc(100% - 1.416003em) calc(100% - 0.00011em), calc(100% - 1.5em) 100%, 1.5em 100%, 1.416003em calc(100% - 0.00011em), 1.33201em calc(100% - 0.00084em), 1.248038em calc(100% - 0.002768em), 1.164129em calc(100% - 0.006475em), 1.080363em calc(100% - 0.012536em), 0.996867em calc(100% - 0.021521em), 0.913832em calc(100% - 0.033994em), 0.831515em calc(100% - 0.050498em), 0.750258em calc(100% - 0.071555em), 0.67049em calc(100% - 0.097649em), 0.592738em calc(100% - 0.129213em), 0.517633em calc(100% - 0.166612em), 0.445907em calc(100% - 0.210125em), 0.378394em calc(100% - 0.259919em), 0.316025em calc(100% - 0.316025em), 0.259919em calc(100% - 0.378394em), 0.210125em calc(100% - 0.445907em), 0.166612em calc(100% - 0.517633em), 0.129213em calc(100% - 0.592738em), 0.097649em calc(100% - 0.67049em), 0.071555em calc(100% - 0.750258em), 0.050498em calc(100% - 0.831515em), 0.033994em calc(100% - 0.913832em), 0.021521em calc(100% - 0.996867em), 0.012536em calc(100% - 1.080363em), 0.006475em calc(100% - 1.164129em), 0.002768em calc(100% - 1.248038em), 0.00084em calc(100% - 1.33201em), 0.00011em calc(100% - 1.416003em), 0em calc(100% - 1.5em), 0em 1.5em, 0.00011em 1.416003em, 0.00084em 1.33201em, 0.002768em 1.248038em, 0.006475em 1.164129em, 0.012536em 1.080363em, 0.021521em 0.996867em, 0.033994em 0.913832em, 0.050498em 0.831515em, 0.071555em 0.750258em, 0.097649em 0.67049em, 0.129213em 0.592738em, 0.166612em 0.517633em, 0.210125em 0.445907em, 0.259919em 0.378394em, 0.316025em 0.316025em, 0.378394em 0.259919em, 0.445907em 0.210125em, 0.517633em 0.166612em, 0.592738em 0.129213em, 0.67049em 0.097649em, 0.750258em 0.071555em, 0.831515em 0.050498em, 0.913832em 0.033994em, 0.996867em 0.021521em, 1.080363em 0.012536em, 1.164129em 0.006475em, 1.248038em 0.002768em, 1.33201em 0.00084em, 1.416003em 0.00011em, 1.5em 0em);
  }
  .cloth-border, .cloth-border-nobg {
    clip-path: polygon( 4.167037rem 0rem, calc(100% - 4.167037rem) 0rem, calc(100% - 3.917025rem) 0.000347rem, calc(100% - 3.667025rem) 0.002717rem, calc(100% - 3.4171rem) 0.009112rem, calc(100% - 3.167409rem) 0.02153rem, calc(100% - 2.918255rem) 0.041962rem, calc(100% - 2.670135rem) 0.072374rem, calc(100% - 2.423782rem) 0.114689rem, calc(100% - 2.180214rem) 0.170762rem, calc(100% - 1.940767rem) 0.242331rem, calc(100% - 1.707134rem) 0.330972rem, calc(100% - 1.481384rem) 0.43803rem, calc(100% - 1.265977rem) 0.564537rem, calc(100% - 1.063758rem) 0.711127rem, calc(100% - 0.877925rem) 0.877925rem, calc(100% - 0.711127rem) 1.063758rem, calc(100% - 0.564537rem) 1.265977rem, calc(100% - 0.43803rem) 1.481384rem, calc(100% - 0.330972rem) 1.707134rem, calc(100% - 0.242331rem) 1.940767rem, calc(100% - 0.170762rem) 2.180214rem, calc(100% - 0.114689rem) 2.423782rem, calc(100% - 0.072374rem) 2.670135rem, calc(100% - 0.041962rem) 2.918255rem, calc(100% - 0.02153rem) 3.167409rem, calc(100% - 0.009112rem) 3.4171rem, calc(100% - 0.002717rem) 3.667025rem, calc(100% - 0.000347rem) 3.917025rem, 100% 4.167037rem, 100% calc(100% - 4.167037rem), calc(100% - 0.000347rem) calc(100% - 3.917025rem), calc(100% - 0.002717rem) calc(100% - 3.667025rem), calc(100% - 0.009112rem) calc(100% - 3.4171rem), calc(100% - 0.02153rem) calc(100% - 3.167409rem), calc(100% - 0.041962rem) calc(100% - 2.918255rem), calc(100% - 0.072374rem) calc(100% - 2.670135rem), calc(100% - 0.114689rem) calc(100% - 2.423782rem), calc(100% - 0.170762rem) calc(100% - 2.180214rem), calc(100% - 0.242331rem) calc(100% - 1.940767rem), calc(100% - 0.330972rem) calc(100% - 1.707134rem), calc(100% - 0.43803rem) calc(100% - 1.481384rem), calc(100% - 0.564537rem) calc(100% - 1.265977rem), calc(100% - 0.711127rem) calc(100% - 1.063758rem), calc(100% - 0.877925rem) calc(100% - 0.877925rem), calc(100% - 1.063758rem) calc(100% - 0.711127rem), calc(100% - 1.265977rem) calc(100% - 0.564537rem), calc(100% - 1.481384rem) calc(100% - 0.43803rem), calc(100% - 1.707134rem) calc(100% - 0.330972rem), calc(100% - 1.940767rem) calc(100% - 0.242331rem), calc(100% - 2.180214rem) calc(100% - 0.170762rem), calc(100% - 2.423782rem) calc(100% - 0.114689rem), calc(100% - 2.670135rem) calc(100% - 0.072374rem), calc(100% - 2.918255rem) calc(100% - 0.041962rem), calc(100% - 3.167409rem) calc(100% - 0.02153rem), calc(100% - 3.4171rem) calc(100% - 0.009112rem), calc(100% - 3.667025rem) calc(100% - 0.002717rem), calc(100% - 3.917025rem) calc(100% - 0.000347rem), calc(100% - 4.167037rem) 100%, 4.167037rem 100%, 3.917025rem calc(100% - 0.000347rem), 3.667025rem calc(100% - 0.002717rem), 3.4171rem calc(100% - 0.009112rem), 3.167409rem calc(100% - 0.02153rem), 2.918255rem calc(100% - 0.041962rem), 2.670135rem calc(100% - 0.072374rem), 2.423782rem calc(100% - 0.114689rem), 2.180214rem calc(100% - 0.170762rem), 1.940767rem calc(100% - 0.242331rem), 1.707134rem calc(100% - 0.330972rem), 1.481384rem calc(100% - 0.43803rem), 1.265977rem calc(100% - 0.564537rem), 1.063758rem calc(100% - 0.711127rem), 0.877925rem calc(100% - 0.877925rem), 0.711127rem calc(100% - 1.063758rem), 0.564537rem calc(100% - 1.265977rem), 0.43803rem calc(100% - 1.481384rem), 0.330972rem calc(100% - 1.707134rem), 0.242331rem calc(100% - 1.940767rem), 0.170762rem calc(100% - 2.180214rem), 0.114689rem calc(100% - 2.423782rem), 0.072374rem calc(100% - 2.670135rem), 0.041962rem calc(100% - 2.918255rem), 0.02153rem calc(100% - 3.167409rem), 0.009112rem calc(100% - 3.4171rem), 0.002717rem calc(100% - 3.667025rem), 0.000347rem calc(100% - 3.917025rem), 0rem calc(100% - 4.167037rem), 0rem 4.167037rem, 0.000347rem 3.917025rem, 0.002717rem 3.667025rem, 0.009112rem 3.4171rem, 0.02153rem 3.167409rem, 0.041962rem 2.918255rem, 0.072374rem 2.670135rem, 0.114689rem 2.423782rem, 0.170762rem 2.180214rem, 0.242331rem 1.940767rem, 0.330972rem 1.707134rem, 0.43803rem 1.481384rem, 0.564537rem 1.265977rem, 0.711127rem 1.063758rem, 0.877925rem 0.877925rem, 1.063758rem 0.711127rem, 1.265977rem 0.564537rem, 1.481384rem 0.43803rem, 1.707134rem 0.330972rem, 1.940767rem 0.242331rem, 2.180214rem 0.170762rem, 2.423782rem 0.114689rem, 2.670135rem 0.072374rem, 2.918255rem 0.041962rem, 3.167409rem 0.02153rem, 3.4171rem 0.009112rem, 3.667025rem 0.002717rem, 3.917025rem 0.000347rem, 4.167037rem 0rem );
  }
  .slide {
    position: relative;
    width: 100%;
    align-items: safe flex-end;
    overflow: clip;
    @media (width >= 48rem) {
      align-items: center;
    }
    @media (width >= 48rem) {
      padding-top: calc(var(--spacing) * 16);
    }
  }
  .slide img {
    position: absolute;
    inset: calc(var(--spacing) * 0);
    z-index: 0;
    min-height: 100%;
    width: 100%;
    object-fit: cover;
  }
  .cloth-border-nobg {
    padding: 2.3561944902px;
  }
  .cloth-border {
    padding: 2.3561944902px;
    display: flex;
    flex-direction: column;
    justify-content: stretch;
    background: #3e374ee4;
    background-image: radial-gradient(circle at 15% 20%, rgba(187,169,246,0.4), transparent 30%), radial-gradient(circle at 90% 80%, rgba(192,114,209,0.1), transparent 30%);
  }
  .cloth-corner-background {
    background: linear-gradient(30deg, var(--card), var(--surface));
  }
  .carousel {
    scroll-behavior: smooth;
  }
  .carousel-item {
    max-width: var(--container-7xl);
  }
  .carousel-item .card {
    max-width: 90vw;
    @media (width >= 48rem) {
      max-width: calc(1/3 * 100%);
    }
  }
  .opinie-item {
    display: flex;
    height: 100%;
    min-height: 320px;
    flex-direction: column;
    justify-content: space-between;
    gap: calc(var(--spacing) * 3);
    align-self: stretch;
    background-color: var(--card);
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 12);
    text-align: left;
    color: var(--text-2);
    clip-path: polygon( 4.167037rem 0rem, calc(100% - 4.167037rem) 0rem, calc(100% - 3.917025rem) 0.000347rem, calc(100% - 3.667025rem) 0.002717rem, calc(100% - 3.4171rem) 0.009112rem, calc(100% - 3.167409rem) 0.02153rem, calc(100% - 2.918255rem) 0.041962rem, calc(100% - 2.670135rem) 0.072374rem, calc(100% - 2.423782rem) 0.114689rem, calc(100% - 2.180214rem) 0.170762rem, calc(100% - 1.940767rem) 0.242331rem, calc(100% - 1.707134rem) 0.330972rem, calc(100% - 1.481384rem) 0.43803rem, calc(100% - 1.265977rem) 0.564537rem, calc(100% - 1.063758rem) 0.711127rem, calc(100% - 0.877925rem) 0.877925rem, calc(100% - 0.711127rem) 1.063758rem, calc(100% - 0.564537rem) 1.265977rem, calc(100% - 0.43803rem) 1.481384rem, calc(100% - 0.330972rem) 1.707134rem, calc(100% - 0.242331rem) 1.940767rem, calc(100% - 0.170762rem) 2.180214rem, calc(100% - 0.114689rem) 2.423782rem, calc(100% - 0.072374rem) 2.670135rem, calc(100% - 0.041962rem) 2.918255rem, calc(100% - 0.02153rem) 3.167409rem, calc(100% - 0.009112rem) 3.4171rem, calc(100% - 0.002717rem) 3.667025rem, calc(100% - 0.000347rem) 3.917025rem, 100% 4.167037rem, 100% calc(100% - 4.167037rem), calc(100% - 0.000347rem) calc(100% - 3.917025rem), calc(100% - 0.002717rem) calc(100% - 3.667025rem), calc(100% - 0.009112rem) calc(100% - 3.4171rem), calc(100% - 0.02153rem) calc(100% - 3.167409rem), calc(100% - 0.041962rem) calc(100% - 2.918255rem), calc(100% - 0.072374rem) calc(100% - 2.670135rem), calc(100% - 0.114689rem) calc(100% - 2.423782rem), calc(100% - 0.170762rem) calc(100% - 2.180214rem), calc(100% - 0.242331rem) calc(100% - 1.940767rem), calc(100% - 0.330972rem) calc(100% - 1.707134rem), calc(100% - 0.43803rem) calc(100% - 1.481384rem), calc(100% - 0.564537rem) calc(100% - 1.265977rem), calc(100% - 0.711127rem) calc(100% - 1.063758rem), calc(100% - 0.877925rem) calc(100% - 0.877925rem), calc(100% - 1.063758rem) calc(100% - 0.711127rem), calc(100% - 1.265977rem) calc(100% - 0.564537rem), calc(100% - 1.481384rem) calc(100% - 0.43803rem), calc(100% - 1.707134rem) calc(100% - 0.330972rem), calc(100% - 1.940767rem) calc(100% - 0.242331rem), calc(100% - 2.180214rem) calc(100% - 0.170762rem), calc(100% - 2.423782rem) calc(100% - 0.114689rem), calc(100% - 2.670135rem) calc(100% - 0.072374rem), calc(100% - 2.918255rem) calc(100% - 0.041962rem), calc(100% - 3.167409rem) calc(100% - 0.02153rem), calc(100% - 3.4171rem) calc(100% - 0.009112rem), calc(100% - 3.667025rem) calc(100% - 0.002717rem), calc(100% - 3.917025rem) calc(100% - 0.000347rem), calc(100% - 4.167037rem) 100%, 4.167037rem 100%, 3.917025rem calc(100% - 0.000347rem), 3.667025rem calc(100% - 0.002717rem), 3.4171rem calc(100% - 0.009112rem), 3.167409rem calc(100% - 0.02153rem), 2.918255rem calc(100% - 0.041962rem), 2.670135rem calc(100% - 0.072374rem), 2.423782rem calc(100% - 0.114689rem), 2.180214rem calc(100% - 0.170762rem), 1.940767rem calc(100% - 0.242331rem), 1.707134rem calc(100% - 0.330972rem), 1.481384rem calc(100% - 0.43803rem), 1.265977rem calc(100% - 0.564537rem), 1.063758rem calc(100% - 0.711127rem), 0.877925rem calc(100% - 0.877925rem), 0.711127rem calc(100% - 1.063758rem), 0.564537rem calc(100% - 1.265977rem), 0.43803rem calc(100% - 1.481384rem), 0.330972rem calc(100% - 1.707134rem), 0.242331rem calc(100% - 1.940767rem), 0.170762rem calc(100% - 2.180214rem), 0.114689rem calc(100% - 2.423782rem), 0.072374rem calc(100% - 2.670135rem), 0.041962rem calc(100% - 2.918255rem), 0.02153rem calc(100% - 3.167409rem), 0.009112rem calc(100% - 3.4171rem), 0.002717rem calc(100% - 3.667025rem), 0.000347rem calc(100% - 3.917025rem), 0rem calc(100% - 4.167037rem), 0rem 4.167037rem, 0.000347rem 3.917025rem, 0.002717rem 3.667025rem, 0.009112rem 3.4171rem, 0.02153rem 3.167409rem, 0.041962rem 2.918255rem, 0.072374rem 2.670135rem, 0.114689rem 2.423782rem, 0.170762rem 2.180214rem, 0.242331rem 1.940767rem, 0.330972rem 1.707134rem, 0.43803rem 1.481384rem, 0.564537rem 1.265977rem, 0.711127rem 1.063758rem, 0.877925rem 0.877925rem, 1.063758rem 0.711127rem, 1.265977rem 0.564537rem, 1.481384rem 0.43803rem, 1.707134rem 0.330972rem, 1.940767rem 0.242331rem, 2.180214rem 0.170762rem, 2.423782rem 0.114689rem, 2.670135rem 0.072374rem, 2.918255rem 0.041962rem, 3.167409rem 0.02153rem, 3.4171rem 0.009112rem, 3.667025rem 0.002717rem, 3.917025rem 0.000347rem, 4.167037rem 0rem );
    @media (width >= 40rem) {
      min-height: 280px;
    }
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 8);
    }
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 14);
    }
    background: linear-gradient(-40deg, var(--surface), var(--card));
  }
  .wp-block-image {
    margin-bottom: calc(var(--spacing) * 6);
  }
  .wp-block-quote {
    border-left-style: var(--tw-border-style);
    border-left-width: 4px;
    padding-left: calc(var(--spacing) * 4);
    color: var(--color-gray-700);
    font-style: italic;
  }
  .menu-item a {
    border-radius: 0.25rem;
    padding-inline: calc(var(--spacing) * 2);
    padding-block: calc(var(--spacing) * 1);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .mobile-menu .menu-item a {
    display: block;
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 2);
  }
  .footer .menu-item a {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .process-line {
    position: absolute;
    top: 2.75rem;
    right: calc(var(--spacing) * 0);
    left: calc(var(--spacing) * 0);
    height: calc(var(--spacing) * 1);
    width: 100%;
    background-color: color-mix(in srgb, #fff 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      & {
        background-color: color-mix(in oklab, var(--color-white) 50%, transparent);
      }
    }
  }
  .process-dot {
    position: absolute;
    top: calc(1/2 * 100%);
    height: calc(var(--spacing) * 3);
    width: calc(var(--spacing) * 3);
    --tw-translate-y: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
    background-color: var(--color-primary);
  }
  @keyframes marquee-x {
    0% {
      transform: translate3d(0,0,0);
    }
    100% {
      transform: translate3d(-100%,0,0);
    }
  }
  .marquee {
    animation: marquee-x 160s linear infinite;
  }
  .marquee-item {
    background-color: color-mix(in srgb, #fff 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      & {
        background-color: color-mix(in oklab, var(--color-white) 30%, transparent);
      }
    }
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-font-weight: var(--font-weight-light);
    font-weight: var(--font-weight-light);
    color: color-mix(in srgb, #000 65%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      & {
        color: color-mix(in oklab, var(--color-black) 65%, transparent);
      }
    }
    clip-path: polygon(1.5em 0em, calc(100% - 1.5em) 0em, calc(100% - 1.416003em) 0.00011em, calc(100% - 1.33201em) 0.00084em, calc(100% - 1.248038em) 0.002768em, calc(100% - 1.164129em) 0.006475em, calc(100% - 1.080363em) 0.012536em, calc(100% - 0.996867em) 0.021521em, calc(100% - 0.913832em) 0.033994em, calc(100% - 0.831515em) 0.050498em, calc(100% - 0.750258em) 0.071555em, calc(100% - 0.67049em) 0.097649em, calc(100% - 0.592738em) 0.129213em, calc(100% - 0.517633em) 0.166612em, calc(100% - 0.445907em) 0.210125em, calc(100% - 0.378394em) 0.259919em, calc(100% - 0.316025em) 0.316025em, calc(100% - 0.259919em) 0.378394em, calc(100% - 0.210125em) 0.445907em, calc(100% - 0.166612em) 0.517633em, calc(100% - 0.129213em) 0.592738em, calc(100% - 0.097649em) 0.67049em, calc(100% - 0.071555em) 0.750258em, calc(100% - 0.050498em) 0.831515em, calc(100% - 0.033994em) 0.913832em, calc(100% - 0.021521em) 0.996867em, calc(100% - 0.012536em) 1.080363em, calc(100% - 0.006475em) 1.164129em, calc(100% - 0.002768em) 1.248038em, calc(100% - 0.00084em) 1.33201em, calc(100% - 0.00011em) 1.416003em, 100% 1.5em, 100% calc(100% - 1.5em), calc(100% - 0.00011em) calc(100% - 1.416003em), calc(100% - 0.00084em) calc(100% - 1.33201em), calc(100% - 0.002768em) calc(100% - 1.248038em), calc(100% - 0.006475em) calc(100% - 1.164129em), calc(100% - 0.012536em) calc(100% - 1.080363em), calc(100% - 0.021521em) calc(100% - 0.996867em), calc(100% - 0.033994em) calc(100% - 0.913832em), calc(100% - 0.050498em) calc(100% - 0.831515em), calc(100% - 0.071555em) calc(100% - 0.750258em), calc(100% - 0.097649em) calc(100% - 0.67049em), calc(100% - 0.129213em) calc(100% - 0.592738em), calc(100% - 0.166612em) calc(100% - 0.517633em), calc(100% - 0.210125em) calc(100% - 0.445907em), calc(100% - 0.259919em) calc(100% - 0.378394em), calc(100% - 0.316025em) calc(100% - 0.316025em), calc(100% - 0.378394em) calc(100% - 0.259919em), calc(100% - 0.445907em) calc(100% - 0.210125em), calc(100% - 0.517633em) calc(100% - 0.166612em), calc(100% - 0.592738em) calc(100% - 0.129213em), calc(100% - 0.67049em) calc(100% - 0.097649em), calc(100% - 0.750258em) calc(100% - 0.071555em), calc(100% - 0.831515em) calc(100% - 0.050498em), calc(100% - 0.913832em) calc(100% - 0.033994em), calc(100% - 0.996867em) calc(100% - 0.021521em), calc(100% - 1.080363em) calc(100% - 0.012536em), calc(100% - 1.164129em) calc(100% - 0.006475em), calc(100% - 1.248038em) calc(100% - 0.002768em), calc(100% - 1.33201em) calc(100% - 0.00084em), calc(100% - 1.416003em) calc(100% - 0.00011em), calc(100% - 1.5em) 100%, 1.5em 100%, 1.416003em calc(100% - 0.00011em), 1.33201em calc(100% - 0.00084em), 1.248038em calc(100% - 0.002768em), 1.164129em calc(100% - 0.006475em), 1.080363em calc(100% - 0.012536em), 0.996867em calc(100% - 0.021521em), 0.913832em calc(100% - 0.033994em), 0.831515em calc(100% - 0.050498em), 0.750258em calc(100% - 0.071555em), 0.67049em calc(100% - 0.097649em), 0.592738em calc(100% - 0.129213em), 0.517633em calc(100% - 0.166612em), 0.445907em calc(100% - 0.210125em), 0.378394em calc(100% - 0.259919em), 0.316025em calc(100% - 0.316025em), 0.259919em calc(100% - 0.378394em), 0.210125em calc(100% - 0.445907em), 0.166612em calc(100% - 0.517633em), 0.129213em calc(100% - 0.592738em), 0.097649em calc(100% - 0.67049em), 0.071555em calc(100% - 0.750258em), 0.050498em calc(100% - 0.831515em), 0.033994em calc(100% - 0.913832em), 0.021521em calc(100% - 0.996867em), 0.012536em calc(100% - 1.080363em), 0.006475em calc(100% - 1.164129em), 0.002768em calc(100% - 1.248038em), 0.00084em calc(100% - 1.33201em), 0.00011em calc(100% - 1.416003em), 0em calc(100% - 1.5em), 0em 1.5em, 0.00011em 1.416003em, 0.00084em 1.33201em, 0.002768em 1.248038em, 0.006475em 1.164129em, 0.012536em 1.080363em, 0.021521em 0.996867em, 0.033994em 0.913832em, 0.050498em 0.831515em, 0.071555em 0.750258em, 0.097649em 0.67049em, 0.129213em 0.592738em, 0.166612em 0.517633em, 0.210125em 0.445907em, 0.259919em 0.378394em, 0.316025em 0.316025em, 0.378394em 0.259919em, 0.445907em 0.210125em, 0.517633em 0.166612em, 0.592738em 0.129213em, 0.67049em 0.097649em, 0.750258em 0.071555em, 0.831515em 0.050498em, 0.913832em 0.033994em, 0.996867em 0.021521em, 1.080363em 0.012536em, 1.164129em 0.006475em, 1.248038em 0.002768em, 1.33201em 0.00084em, 1.416003em 0.00011em, 1.5em 0em);
  }
  @keyframes testimonialsScroll {
    0% {
      transform: translate3d(0, 0, 0);
    }
    100% {
      transform: translate3d(0, -50%, 0);
    }
  }
  @keyframes testimonialsScrollx {
    0% {
      transform: translate3d(0, 0, 0);
    }
    100% {
      transform: translate3d(-50%, 0, 0);
    }
  }
  .testimonials-section {
    pointer-events: none;
    position: relative;
    isolation: isolate;
    height: 950px;
    max-width: 100vw;
    overflow: clip;
    contain: layout paint;
    -webkit-user-select: none;
    user-select: none;
    @media (width >= 48rem) {
      height: 650px;
    }
  }
  .testim-container-forward {
    animation: testimonialsScroll 30s linear infinite;
  }
  .testim-container-backward {
    animation: testimonialsScroll 40s linear infinite reverse;
  }
  .testim-container-forward, .testim-container-backward {
    position: relative;
    transform: translate3d(0, 0, 0);
    will-change: auto;
  }
  .testim-item {
    position: relative;
    aspect-ratio: 3/4;
    width: 100%;
    clip-path: polygon(1.5em 0em, calc(100% - 1.5em) 0em, calc(100% - 1.416003em) 0.00011em, calc(100% - 1.33201em) 0.00084em, calc(100% - 1.248038em) 0.002768em, calc(100% - 1.164129em) 0.006475em, calc(100% - 1.080363em) 0.012536em, calc(100% - 0.996867em) 0.021521em, calc(100% - 0.913832em) 0.033994em, calc(100% - 0.831515em) 0.050498em, calc(100% - 0.750258em) 0.071555em, calc(100% - 0.67049em) 0.097649em, calc(100% - 0.592738em) 0.129213em, calc(100% - 0.517633em) 0.166612em, calc(100% - 0.445907em) 0.210125em, calc(100% - 0.378394em) 0.259919em, calc(100% - 0.316025em) 0.316025em, calc(100% - 0.259919em) 0.378394em, calc(100% - 0.210125em) 0.445907em, calc(100% - 0.166612em) 0.517633em, calc(100% - 0.129213em) 0.592738em, calc(100% - 0.097649em) 0.67049em, calc(100% - 0.071555em) 0.750258em, calc(100% - 0.050498em) 0.831515em, calc(100% - 0.033994em) 0.913832em, calc(100% - 0.021521em) 0.996867em, calc(100% - 0.012536em) 1.080363em, calc(100% - 0.006475em) 1.164129em, calc(100% - 0.002768em) 1.248038em, calc(100% - 0.00084em) 1.33201em, calc(100% - 0.00011em) 1.416003em, 100% 1.5em, 100% calc(100% - 1.5em), calc(100% - 0.00011em) calc(100% - 1.416003em), calc(100% - 0.00084em) calc(100% - 1.33201em), calc(100% - 0.002768em) calc(100% - 1.248038em), calc(100% - 0.006475em) calc(100% - 1.164129em), calc(100% - 0.012536em) calc(100% - 1.080363em), calc(100% - 0.021521em) calc(100% - 0.996867em), calc(100% - 0.033994em) calc(100% - 0.913832em), calc(100% - 0.050498em) calc(100% - 0.831515em), calc(100% - 0.071555em) calc(100% - 0.750258em), calc(100% - 0.097649em) calc(100% - 0.67049em), calc(100% - 0.129213em) calc(100% - 0.592738em), calc(100% - 0.166612em) calc(100% - 0.517633em), calc(100% - 0.210125em) calc(100% - 0.445907em), calc(100% - 0.259919em) calc(100% - 0.378394em), calc(100% - 0.316025em) calc(100% - 0.316025em), calc(100% - 0.378394em) calc(100% - 0.259919em), calc(100% - 0.445907em) calc(100% - 0.210125em), calc(100% - 0.517633em) calc(100% - 0.166612em), calc(100% - 0.592738em) calc(100% - 0.129213em), calc(100% - 0.67049em) calc(100% - 0.097649em), calc(100% - 0.750258em) calc(100% - 0.071555em), calc(100% - 0.831515em) calc(100% - 0.050498em), calc(100% - 0.913832em) calc(100% - 0.033994em), calc(100% - 0.996867em) calc(100% - 0.021521em), calc(100% - 1.080363em) calc(100% - 0.012536em), calc(100% - 1.164129em) calc(100% - 0.006475em), calc(100% - 1.248038em) calc(100% - 0.002768em), calc(100% - 1.33201em) calc(100% - 0.00084em), calc(100% - 1.416003em) calc(100% - 0.00011em), calc(100% - 1.5em) 100%, 1.5em 100%, 1.416003em calc(100% - 0.00011em), 1.33201em calc(100% - 0.00084em), 1.248038em calc(100% - 0.002768em), 1.164129em calc(100% - 0.006475em), 1.080363em calc(100% - 0.012536em), 0.996867em calc(100% - 0.021521em), 0.913832em calc(100% - 0.033994em), 0.831515em calc(100% - 0.050498em), 0.750258em calc(100% - 0.071555em), 0.67049em calc(100% - 0.097649em), 0.592738em calc(100% - 0.129213em), 0.517633em calc(100% - 0.166612em), 0.445907em calc(100% - 0.210125em), 0.378394em calc(100% - 0.259919em), 0.316025em calc(100% - 0.316025em), 0.259919em calc(100% - 0.378394em), 0.210125em calc(100% - 0.445907em), 0.166612em calc(100% - 0.517633em), 0.129213em calc(100% - 0.592738em), 0.097649em calc(100% - 0.67049em), 0.071555em calc(100% - 0.750258em), 0.050498em calc(100% - 0.831515em), 0.033994em calc(100% - 0.913832em), 0.021521em calc(100% - 0.996867em), 0.012536em calc(100% - 1.080363em), 0.006475em calc(100% - 1.164129em), 0.002768em calc(100% - 1.248038em), 0.00084em calc(100% - 1.33201em), 0.00011em calc(100% - 1.416003em), 0em calc(100% - 1.5em), 0em 1.5em, 0.00011em 1.416003em, 0.00084em 1.33201em, 0.002768em 1.248038em, 0.006475em 1.164129em, 0.012536em 1.080363em, 0.021521em 0.996867em, 0.033994em 0.913832em, 0.050498em 0.831515em, 0.071555em 0.750258em, 0.097649em 0.67049em, 0.129213em 0.592738em, 0.166612em 0.517633em, 0.210125em 0.445907em, 0.259919em 0.378394em, 0.316025em 0.316025em, 0.378394em 0.259919em, 0.445907em 0.210125em, 0.517633em 0.166612em, 0.592738em 0.129213em, 0.67049em 0.097649em, 0.750258em 0.071555em, 0.831515em 0.050498em, 0.913832em 0.033994em, 0.996867em 0.021521em, 1.080363em 0.012536em, 1.164129em 0.006475em, 1.248038em 0.002768em, 1.33201em 0.00084em, 1.416003em 0.00011em, 1.5em 0em);
    @media (width >= 48rem) {
      height: 100%;
    }
    @media (width >= 48rem) {
      width: auto;
    }
    image-rendering: auto;
  }
  @media (max-width: 768px) {
    .testim-container-forward {
      height: 100%;
      width: max-content;
      animation-name: testimonialsScrollx;
      animation-duration: 30s !important;
      animation-timing-function: linear;
      animation-iteration-count: infinite;
    }
    .testim-container-backward {
      height: 100%;
      width: max-content;
      animation-name: testimonialsScrollx;
      animation-timing-function: linear;
      animation-iteration-count: infinite;
      animation-direction: reverse;
    }
  }
  .opinions-carousel {
    overflow-x: auto;
    scroll-snap-type: x mandatory;
    scroll-behavior: smooth;
  }
  .opinions-carousel > .carousel-item {
    scroll-snap-align: center;
    flex: 0 0 100%;
  }
  .opinie-prev, .opinie-next, .hero-prev, .hero-next {
    :where(&) {
      @layer daisyui.component {
        width: unset;
      }
    }
    .prose & {
      text-decoration-line: none;
    }
    @layer daisyui.component {
      display: inline-flex;
      flex-shrink: 0;
      cursor: pointer;
      flex-wrap: nowrap;
      align-items: center;
      justify-content: center;
      gap: calc(0.25rem * 1.5);
      text-align: center;
      vertical-align: middle;
      outline-offset: 2px;
      webkit-user-select: none;
      user-select: none;
      padding-inline: var(--btn-p);
      color: var(--btn-fg);
      --tw-prose-links: var(--btn-fg);
      height: var(--size);
      font-size: var(--fontsize, 0.875rem);
      font-weight: 600;
      outline-color: var(--btn-color, var(--color-base-content));
      transition-property: color, background-color, border-color, box-shadow;
      transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
      transition-duration: 0.2s;
      border-start-start-radius: var(--join-ss, var(--radius-field));
      border-start-end-radius: var(--join-se, var(--radius-field));
      border-end-start-radius: var(--join-es, var(--radius-field));
      border-end-end-radius: var(--join-ee, var(--radius-field));
      background-color: var(--btn-bg);
      background-size: auto, calc(var(--noise) * 100%);
      background-image: none, var(--btn-noise);
      border-width: var(--border);
      border-style: solid;
      border-color: var(--btn-border);
      text-shadow: 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 0.15));
      touch-action: manipulation;
      box-shadow: 0 0.5px 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 6%)) inset, var(--btn-shadow);
      --size: calc(var(--size-field, 0.25rem) * 10);
      --btn-bg: var(--btn-color, var(--color-base-200));
      --btn-fg: var(--color-base-content);
      --btn-p: 1rem;
      --btn-border: var(--btn-bg);
      @supports (color: color-mix(in lab, red, red)) {
        & {
          --btn-border: color-mix(in oklab, var(--btn-bg), #000 calc(var(--depth) * 5%));
        }
      }
      --btn-shadow: 0 3px 2px -2px var(--btn-bg),
      0 4px 3px -2px var(--btn-bg);
      @supports (color: color-mix(in lab, red, red)) {
        & {
          --btn-shadow: 0 3px 2px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000),
      0 4px 3px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000);
        }
      }
      --btn-noise: var(--fx-noise);
      @media (hover: hover) {
        &:hover {
          --btn-bg: var(--btn-color, var(--color-base-200));
          @supports (color: color-mix(in lab, red, red)) {
            & {
              --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
            }
          }
        }
      }
      &:focus-visible, &:has(:focus-visible) {
        outline-width: 2px;
        outline-style: solid;
        isolation: isolate;
      }
      &:active:not(.btn-active) {
        translate: 0 0.5px;
        --btn-bg: var(--btn-color, var(--color-base-200));
        @supports (color: color-mix(in lab, red, red)) {
          & {
            --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 5%);
          }
        }
        --btn-border: var(--btn-color, var(--color-base-200));
        @supports (color: color-mix(in lab, red, red)) {
          & {
            --btn-border: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
          }
        }
        --btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
      }
      &:is(input[type="checkbox"], input[type="radio"]) {
        appearance: none;
        &::after {
          content: attr(aria-label);
        }
      }
      &:where(input:checked:not(.filter .btn)) {
        --btn-color: var(--color-primary);
        --btn-fg: var(--color-primary-content);
        isolation: isolate;
      }
    }
    &:disabled {
      @layer daisyui.modifier {
        &:not(.btn-link, .btn-ghost) {
          background-color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            & {
              background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
            }
          }
          box-shadow: none;
        }
        pointer-events: none;
        --btn-border: #0000;
        --btn-noise: none;
        --btn-fg: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          & {
            --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
          }
        }
        @media (hover: hover) {
          &:hover {
            pointer-events: none;
            background-color: var(--color-neutral);
            @supports (color: color-mix(in lab, red, red)) {
              & {
                background-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);
              }
            }
            --btn-border: #0000;
            --btn-fg: var(--color-base-content);
            @supports (color: color-mix(in lab, red, red)) {
              & {
                --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
              }
            }
          }
        }
      }
    }
    &[disabled] {
      @layer daisyui.modifier {
        &:not(.btn-link, .btn-ghost) {
          background-color: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            & {
              background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
            }
          }
          box-shadow: none;
        }
        pointer-events: none;
        --btn-border: #0000;
        --btn-noise: none;
        --btn-fg: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          & {
            --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
          }
        }
        @media (hover: hover) {
          &:hover {
            pointer-events: none;
            background-color: var(--color-neutral);
            @supports (color: color-mix(in lab, red, red)) {
              & {
                background-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);
              }
            }
            --btn-border: #0000;
            --btn-fg: var(--color-base-content);
            @supports (color: color-mix(in lab, red, red)) {
              & {
                --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
              }
            }
          }
        }
      }
    }
    background-color: color-mix(in srgb, #fff 8%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      & {
        background-color: color-mix(in oklab, var(--color-white) 8%, transparent);
      }
    }
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
    color: color-mix(in srgb, #000 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      & {
        color: color-mix(in oklab, var(--color-black) 40%, transparent);
      }
    }
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
    outline-offset: 2px;
    outline-color: color-mix(in srgb, #fff 15%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      & {
        outline-color: color-mix(in oklab, var(--color-white) 15%, transparent);
      }
    }
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 200ms;
    transition-duration: 200ms;
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 105%;
        --tw-scale-y: 105%;
        --tw-scale-z: 105%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
        background-color: color-mix(in srgb, #fff 30%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          & {
            background-color: color-mix(in oklab, var(--color-white) 30%, transparent);
          }
        }
        color: color-mix(in srgb, #fff 70%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          & {
            color: color-mix(in oklab, var(--color-white) 70%, transparent);
          }
        }
        outline-style: var(--tw-outline-style);
        outline-width: 2px;
        outline-offset: 2px;
        outline-color: color-mix(in srgb, #fff 15%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          & {
            outline-color: color-mix(in oklab, var(--color-white) 15%, transparent);
          }
        }
      }
    }
    &:focus {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
      outline-offset: 2px;
      outline-color: color-mix(in srgb, #fff 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        & {
          outline-color: color-mix(in oklab, var(--color-white) 20%, transparent);
        }
      }
    }
    &:active {
      --tw-scale-x: 95%;
      --tw-scale-y: 95%;
      --tw-scale-z: 95%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
      background-color: color-mix(in srgb, #fff 12%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        & {
          background-color: color-mix(in oklab, var(--color-white) 12%, transparent);
        }
      }
      color: color-mix(in srgb, #fff 60%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        & {
          color: color-mix(in oklab, var(--color-white) 60%, transparent);
        }
      }
      outline-style: var(--tw-outline-style);
      outline-width: 3px;
      outline-offset: 4px;
      outline-color: color-mix(in srgb, #fff 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        & {
          outline-color: color-mix(in oklab, var(--color-white) 25%, transparent);
        }
      }
    }
    &:disabled {
      cursor: not-allowed;
      background-color: color-mix(in srgb, #fff 2%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        & {
          background-color: color-mix(in oklab, var(--color-white) 2%, transparent);
        }
      }
      color: color-mix(in srgb, #000 12%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        & {
          color: color-mix(in oklab, var(--color-black) 12%, transparent);
        }
      }
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
      outline-offset: 3px;
      outline-color: color-mix(in srgb, #fff 5%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        & {
          outline-color: color-mix(in oklab, var(--color-white) 5%, transparent);
        }
      }
    }
    --tw-backdrop-blur: blur(var(--blur-xs));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 110%;
        --tw-scale-y: 110%;
        --tw-scale-z: 110%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  canvas {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}
@layer base {
  :root {
    --fx-noise: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 200 200'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='200' height='200' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E");
  }
}
@layer base {
  :root {
    scrollbar-color: currentColor #0000;
    @supports (color: color-mix(in lab, red, red)) {
      & {
        scrollbar-color: color-mix(in oklch, currentColor 35%, #0000) #0000;
      }
    }
  }
}
@layer base {
  @property --radialprogress {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 0%;
  }
}
@layer base {
  :root:has(.modal-open, .modal[open], .modal:target, .modal-toggle:checked) {
    overflow: hidden;
    --page-has-backdrop: 1;
  }
  :root:has(.drawer:not([class*="drawer-open"]) > .drawer-toggle:checked) {
    overflow: hidden;
    --page-has-backdrop: 1;
  }
  :root:has(.sm\:drawer-open > .drawer-toggle:checked) {
    @media (width < 40rem) {
      overflow: hidden;
    }
    @media (width < 40rem) {
      --page-has-backdrop: 1;
    }
  }
  :root:has(.md\:drawer-open > .drawer-toggle:checked) {
    @media (width < 48rem) {
      overflow: hidden;
    }
    @media (width < 48rem) {
      --page-has-backdrop: 1;
    }
  }
  :root:has(.lg\:drawer-open > .drawer-toggle:checked) {
    @media (width < 64rem) {
      overflow: hidden;
    }
    @media (width < 64rem) {
      --page-has-backdrop: 1;
    }
  }
  :root:has(.xl\:drawer-open > .drawer-toggle:checked) {
    @media (width < 80rem) {
      overflow: hidden;
    }
    @media (width < 80rem) {
      --page-has-backdrop: 1;
    }
  }
  :root:has(.\32xl\:drawer-open > .drawer-toggle:checked) {
    @media (width < 96rem) {
      overflow: hidden;
    }
    @media (width < 96rem) {
      --page-has-backdrop: 1;
    }
  }
  :root:has(.max-sm\:drawer-open > .drawer-toggle:checked) {
    @media (width >= 40rem) {
      overflow: hidden;
    }
    @media (width >= 40rem) {
      --page-has-backdrop: 1;
    }
  }
  :root:has(.max-md\:drawer-open > .drawer-toggle:checked) {
    @media (width >= 48rem) {
      overflow: hidden;
    }
    @media (width >= 48rem) {
      --page-has-backdrop: 1;
    }
  }
  :root:has(.max-lg\:drawer-open > .drawer-toggle:checked) {
    @media (width >= 64rem) {
      overflow: hidden;
    }
    @media (width >= 64rem) {
      --page-has-backdrop: 1;
    }
  }
  :root:has(.max-xl\:drawer-open > .drawer-toggle:checked) {
    @media (width >= 80rem) {
      overflow: hidden;
    }
    @media (width >= 80rem) {
      --page-has-backdrop: 1;
    }
  }
  :root:has(.max-2xl\:drawer-open > .drawer-toggle:checked) {
    @media (width >= 96rem) {
      overflow: hidden;
    }
    @media (width >= 96rem) {
      --page-has-backdrop: 1;
    }
  }
}
@layer base {
  :root:has( .modal-open, .modal[open], .modal:target, .modal-toggle:checked, .drawer:not(.drawer-open) > .drawer-toggle:checked ) {
    background-image: linear-gradient(var(--root-bg), var(--root-bg));
    background-color: var(--root-bg);
    @supports (color: color-mix(in lab, red, red)) {
      & {
        background-color: color-mix( in srgb, var(--root-bg), oklch(0% 0 0) calc(var(--page-has-backdrop, 0) * 40%) );
      }
    }
    animation: set-page-has-scroll forwards;
    animation-timeline: scroll();
    scrollbar-gutter: stable;
    scrollbar-gutter: if(style(--page-has-scroll: 1): stable; else: unset);
  }
  @keyframes set-page-has-scroll {
    0%, to {
      --page-has-scroll: 1;
    }
  }
}
@layer base {
  :root, [data-theme] {
    background-color: var(--root-bg, var(--color-base-100));
    color: var(--color-base-content);
  }
  :where(:root, [data-theme]) {
    --root-bg: var(--color-base-100);
  }
}
@keyframes rating {
  0%, 40% {
    scale: 1.1;
    filter: brightness(1.05) contrast(1.05);
  }
}
@keyframes dropdown {
  0% {
    opacity: 0;
  }
}
@keyframes radio {
  0% {
    padding: 5px;
  }
  50% {
    padding: 3px;
  }
}
@keyframes toast {
  0% {
    scale: 0.9;
    opacity: 0;
  }
  100% {
    scale: 1;
    opacity: 1;
  }
}
@keyframes skeleton {
  0% {
    background-position: 150%;
  }
  100% {
    background-position: -50%;
  }
}
@keyframes progress {
  50% {
    background-position-x: -115%;
  }
}
@layer base {
  :where(:root),:root:has(input.theme-controller[value=vithouse]:checked),[data-theme="vithouse"] {
    color-scheme: dark;
    --color-base-100: oklch(98% 0.02 240);
    --color-base-200: oklch(95% 0.03 240);
    --color-base-300: oklch(92% 0.04 240);
    --color-base-content: oklch(20% 0.05 240);
    --color-primary: var(--primary);
    --color-primary-content: oklch(98% 0.01 240);
    --color-secondary: var(--secondary);
    --color-secondary-content: oklch(98% 0.01 200);
    --color-accent: var(--accent);
    --color-accent-content: oklch(98% 0.01 160);
    --color-neutral: oklch(50% 0.05 240);
    --color-neutral-content: oklch(98% 0.01 240);
    --color-info: oklch(70% 0.2 220);
    --color-info-content: oklch(98% 0.01 220);
    --color-success: oklch(65% 0.25 140);
    --color-success-content: oklch(98% 0.01 140);
    --color-warning: var(--danger);
    --color-warning-content: oklch(20% 0.05 80);
    --color-error: oklch(65% 0.3 30);
    --color-error-content: oklch(98% 0.01 30);
    --radius-selector: 1rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 0.5pxpx;
    --depth: 0;
    --noise: 1;
  }
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-outline-style: solid;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-y-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
    }
  }
}
